
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CBRACKET CHAR CHARACTER COLON COMMA COMMENT COUNT COUNTIF CPAREN CTED CTEI DBERN DERL DIFF DIV DO DOUBLE DPOI ELSE EQ EQUALS FUNC FX FY GRE GREATEQ GREATERTHAN ID IF INT INTEGER INVERSE KMEANS LCOR LESSEQ LESSTHAN LOGICAL LUGSTAT MEAN MEDIAN MINUS MODE MONT MULT NUMBER NUMERIC OBRACKET OPAREN OR PER PLOT PLUS PRINT QUOTE RCOR READ REF RELOP ROTATE RREF SCOLON STDV STRING STRING TIPO TRANSPOSE VAR WHILE\n    lugstat : LUGSTAT ID SCOLON addmain lugstat2 lugstat3 mnv block\n    addmain : empty mnv : empty \n    lugstat2 : vars\n    | empty\n    \n    lugstat3 : modules\n    | modules lugstat3\n    | empty\n    vars : VAR vars1 \n     \n    vars1 : ID COMMA vars1\n    | ID COLON tipo SCOLON lugstat2\n    | ID asign2 COLON tipo SCOLON\n    | ID asign2 COMMA vars1\n    savename : empty\n    modules : FUNC ID COLON tipo mn1 OPAREN modules2 mn2 CPAREN modules2 mn3 funblock mn7mn1 : emptymn7 : emptymn2 : emptymn3 : empty funccall : ID fcn1 OPAREN expresion funccall2 CPAREN  fcn1 : empty funccall2 : COMMA expresion funccall2\n    | empty \n    modules2 : vars\n    | empty\n    funblock : OBRACKET block2 CBRACKET\n    \n    block : OBRACKET block2 CBRACKET\n    \n    block2 : estatuto\n    | estatuto block2\n    | empty\n    tipo : INT\n    | BOOL \n    | DOUBLE\n    | STRING\n    | CHAR\n    \n    estatuto : asign\n    | cond \n    | escrt\n    | plot\n    | count\n    | countif\n    | metodos\n    | dwhile\n    | readln\n    | funccall\n    \n    asign : ID EQUALS expresion SCOLON\n    | ID EQUALS ID SCOLON\n    | ID EQUALS ID asign2 SCOLON\n    | ID asign2 EQUALS ID SCOLON\n    | ID asign2 EQUALS expresion SCOLON\n    | ID asign2 EQUALS ID asign2 SCOLON\n    \n    asign2 : LCOR expresion RCOR asign3\n    | LCOR varcte RCOR asign3 \n    \n    asign3 : LCOR expresion RCOR\n    | LCOR varcte RCOR \n    | emptyescrt : PRINT OPAREN ID en3 escrt2 CPAREN SCOLON\n    | PRINT OPAREN expresion en1 CPAREN SCOLON\n    | PRINT OPAREN STRING CPAREN en2 SCOLON\n    escrt2 : COMMA escrt3\n    | empty\n    escrt3 : ID escrt2\n    | ID\n    | STRING escrt2 escrt2\n    en1 : emptyen2 : emptyen3 : emptycond : IF OPAREN expresion cn1 CPAREN ifblock SCOLON cn2\n    | IF OPAREN expresion cn1 CPAREN ifblock ELSE cn3 ifblock SCOLON cn2\n    cn1 : emptycn2 : emptycn3 : empty\n    ifblock : OBRACKET ifblock2 CBRACKET\n    \n    ifblock2 : estatuto\n    | estatuto ifblock2\n    | emptycount : COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLONcountif : COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLONplot : PLOT OPAREN xyfunc CPAREN SCOLON\n    | PLOT OPAREN plot2 CPAREN SCOLON\n    \n    plot2 : LCOR varcte COMMA varcte RCOR\n    | LCOR varcte COMMA varcte RCOR COMMA plot2\n    | empty\n    xyfunc : FX EQUALS exp SCOLON xyfunc\n    | FY EQUALS exp SCOLON xyfunc\n    | empty\n    expresion : exp \n    | expresion RELOP exp \n    \n    exp : termino\n    | termino PLUS exp\n    | termino MINUS exp\n    \n    termino : factor\n    | factor MULT termino\n    | factor DIV termino\n    \n    factor : OPAREN expresion CPAREN \n    | varcte\n    \n    varcte : ID\n    | ID asign2\n    | NUMERIC\n    | NUMBER\n    \n    dwhile : DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON \n    wn1 : emptywn2 : empty\n    wblock : OBRACKET block2 CBRACKET   \n    \n    dwhileconds : expresion dwhileconds\n    | expresion AND dwhileconds\n    | expresion OR dwhileconds\n    | empty\n     readln : READ OPAREN ID rn1 CPAREN SCOLON rn1 : empty \n    metodos : MEAN OPAREN mmmfunc CPAREN SCOLON\n    | MEDIAN OPAREN mmmfunc CPAREN SCOLON\n    | MODE OPAREN mmmfunc CPAREN SCOLON\n    | STDV OPAREN mmmfunc CPAREN SCOLON\n    | KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON\n    | DERL OPAREN expfunc CPAREN SCOLON\n    | DBERN OPAREN expfunc CPAREN SCOLON\n    | DPOI OPAREN expfunc2 CPAREN SCOLON\n    | TRANSPOSE OPAREN mmmfunc CPAREN SCOLON\n    | INVERSE OPAREN mmmfunc CPAREN SCOLON\n    | ROTATE OPAREN mmmfunc CPAREN SCOLON\n    | REF OPAREN mmmfunc CPAREN SCOLON\n    | RREF OPAREN mmmfunc CPAREN SCOLON\n    | MONT OPAREN mmmfunc CPAREN SCOLON\n    \n    expfunc : ID COMMA ID COMMA ID\n    | varcte COMMA varcte COMMA varcte\n    \n    expfunc2 : ID COMMA ID\n    | varcte COMMA varcte\n    \n    mmmfunc : ID \n    | OBRACKET  mmmarray CBRACKET\n\t| OBRACKET mmmarray CBRACKET COMMA mmmfunc\n\t| empty \n    \n    mmmarray : varcte\n    | varcte COMMA mmmarray\n    | empty\n    empty :'
    
_lr_action_items = {'LUGSTAT':([0,],[2,]),'$end':([1,25,95,],[0,-1,-27,]),'ID':([2,10,14,21,24,26,36,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,58,85,86,87,88,89,90,91,92,94,97,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,127,128,129,130,131,132,133,134,135,136,139,140,150,155,175,180,182,195,196,198,199,207,209,210,213,214,228,229,230,232,233,235,239,244,245,248,251,253,254,255,256,258,261,262,265,266,267,268,269,270,271,276,277,280,285,286,290,291,292,295,296,298,300,303,306,308,318,323,324,326,327,345,347,349,350,355,356,],[3,16,20,16,40,59,16,-87,-97,-99,-100,-89,-92,40,59,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-136,40,-136,-98,40,40,40,40,-96,137,40,142,151,152,154,154,154,154,40,162,162,166,154,154,154,154,154,154,176,40,-52,-56,-88,-53,-90,-91,-93,-94,-95,183,40,40,40,59,-47,-46,40,40,40,40,154,259,40,263,40,-54,-55,-48,-49,-50,40,283,-79,-80,40,-111,40,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,40,-51,-20,59,-58,-59,40,40,154,319,40,40,-109,-136,59,-57,-115,40,40,-68,-71,-77,-101,59,-136,-69,-78,]),'SCOLON':([3,29,30,31,32,33,34,39,40,41,42,43,44,83,85,87,88,94,128,129,130,131,132,133,134,135,136,137,138,181,183,184,192,193,194,200,204,205,206,208,211,212,215,216,217,218,219,220,228,229,231,241,242,243,246,247,273,279,281,294,321,330,334,336,337,342,351,],[4,82,-31,-32,-33,-34,-35,-87,-97,-99,-100,-89,-92,126,-136,-136,-98,-96,-52,-56,-88,-53,-90,-91,-93,-94,-95,180,182,230,232,233,-136,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,-54,-55,276,285,286,-66,287,288,300,303,308,318,-136,-73,345,347,-103,350,356,]),'VAR':([4,5,6,82,177,301,],[-136,10,-2,10,10,10,]),'FUNC':([4,5,6,7,8,9,12,15,28,82,84,125,126,348,352,353,357,],[-136,-136,-2,14,-4,-5,14,-9,-10,-136,-13,-11,-12,-136,-15,-17,-26,]),'OBRACKET':([4,5,6,7,8,9,11,12,13,15,17,18,19,28,79,82,84,106,107,108,109,114,115,116,117,118,119,120,121,125,126,207,226,227,237,292,301,304,325,328,329,340,341,348,352,353,357,],[-136,-136,-2,-136,-4,-5,-136,-6,-8,-9,26,-3,-7,-10,-136,-136,-13,155,155,155,155,155,155,155,155,155,155,175,-102,-11,-12,155,-24,-25,280,155,-136,-136,-136,280,-72,349,-19,-136,-15,-17,-26,]),'CPAREN':([8,9,15,28,39,40,41,42,43,44,82,84,85,87,88,93,94,103,106,107,108,109,114,115,116,117,118,119,125,126,128,129,130,131,132,133,134,135,136,141,142,143,144,145,146,149,153,154,156,157,158,159,161,164,165,168,169,170,171,172,173,176,177,185,186,187,188,189,190,191,207,223,224,225,226,227,228,229,234,236,238,240,252,257,263,264,271,274,275,278,282,283,284,287,288,292,297,298,299,302,303,309,310,311,312,313,314,315,317,319,320,322,323,324,326,327,332,333,338,339,343,344,346,350,355,],[-4,-5,-9,-10,-87,-97,-99,-100,-89,-92,-136,-13,-136,-136,-98,136,-96,-136,-136,-136,-136,-136,-136,-136,-136,-136,-136,-136,-11,-12,-52,-56,-88,-53,-90,-91,-93,-94,-95,-136,-97,-136,192,193,194,-83,200,-129,-132,204,205,206,208,211,212,215,216,217,218,219,220,-136,-136,-136,237,-70,-136,-67,241,-65,-136,273,-110,-136,-24,-25,-54,-55,277,-23,281,-61,-130,294,-127,-128,-136,301,-18,-136,-60,-63,-136,-136,-136,-136,321,-136,-108,-22,-136,-62,-136,-84,-86,-85,-81,334,-131,-125,-126,-105,-136,-136,-68,-71,-64,-136,-106,-107,-82,-83,351,-136,-69,]),'COMMA':([16,23,39,40,41,42,43,44,85,87,88,94,128,129,130,131,132,133,134,135,136,142,151,152,160,162,163,166,167,185,188,189,197,202,228,229,240,249,250,252,259,260,278,282,283,284,309,310,314,316,332,],[21,36,-87,-97,-99,-100,-89,-92,-136,-136,-98,-96,-52,-56,-88,-53,-90,-91,-93,-94,-95,-136,198,199,207,209,210,213,214,235,239,-67,248,253,-54,-55,-61,290,291,292,295,296,235,-60,239,239,-62,239,333,335,-64,]),'COLON':([16,20,23,85,87,128,129,131,228,229,],[22,27,35,-136,-136,-52,-56,-53,-54,-55,]),'LCOR':([16,40,59,85,87,103,137,142,162,166,183,333,],[24,24,24,127,127,150,24,24,24,24,24,150,]),'INT':([22,27,35,],[30,30,30,]),'BOOL':([22,27,35,],[31,31,31,]),'DOUBLE':([22,27,35,],[32,32,32,]),'STRING':([22,27,35,102,239,],[33,33,33,144,284,]),'CHAR':([22,27,35,],[34,34,34,]),'NUMERIC':([24,39,40,41,42,43,44,45,85,86,87,88,89,90,91,92,94,97,101,102,110,111,112,113,127,128,129,130,131,132,133,134,135,136,139,140,150,155,195,196,198,199,210,214,228,229,235,248,253,271,290,291,296,298,323,324,],[41,-87,-97,-99,-100,-89,-92,41,-136,41,-136,-98,41,41,41,41,-96,41,41,41,41,41,41,41,41,-52,-56,-88,-53,-90,-91,-93,-94,-95,41,41,41,41,41,41,41,41,41,41,-54,-55,41,41,41,41,41,41,41,41,41,41,]),'NUMBER':([24,39,40,41,42,43,44,45,85,86,87,88,89,90,91,92,94,97,101,102,110,111,112,113,127,128,129,130,131,132,133,134,135,136,139,140,150,155,195,196,198,199,210,214,228,229,235,248,253,271,290,291,296,298,323,324,],[42,-87,-97,-99,-100,-89,-92,42,-136,42,-136,-98,42,42,42,42,-96,42,42,42,42,42,42,42,42,-52,-56,-88,-53,-90,-91,-93,-94,-95,42,42,42,42,42,42,42,42,42,42,-54,-55,42,42,42,42,42,42,42,42,42,42,]),'OPAREN':([24,30,31,32,33,34,39,40,41,42,43,44,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,85,86,87,88,89,90,91,92,94,97,99,100,101,102,123,124,127,128,129,130,131,132,133,134,135,136,139,140,195,196,221,228,229,235,271,298,323,324,],[45,-31,-32,-33,-34,-35,-87,-97,-99,-100,-89,-92,45,-136,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,-136,-136,45,-136,-98,45,45,45,45,-96,45,140,-21,45,45,177,-16,45,-52,-56,-88,-53,-90,-91,-93,-94,-95,45,45,45,45,271,-54,-55,45,45,45,45,45,]),'CBRACKET':([26,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,85,87,88,96,128,129,131,155,175,180,182,201,202,203,222,228,229,230,232,233,244,245,251,253,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,293,300,303,305,306,307,308,318,326,327,331,345,347,349,350,354,355,356,],[-136,-97,-99,-100,95,-28,-30,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-136,-136,-98,-29,-52,-56,-53,-136,-136,-47,-46,252,-133,-135,272,-54,-55,-48,-49,-50,-79,-80,-111,-136,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,-136,-58,-59,-134,-109,-136,330,-74,-76,-57,-115,-68,-71,-75,-77,-101,-136,-136,357,-69,-78,]),'IF':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,335,345,347,349,350,355,356,],[60,60,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,60,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,60,-58,-59,-109,-136,60,-57,-115,-68,-71,60,-77,-101,60,-136,-69,-78,]),'PRINT':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[61,61,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,61,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,61,-58,-59,-109,-136,61,-57,-115,-68,-71,-77,-101,61,-136,-69,-78,]),'PLOT':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[62,62,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,62,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,62,-58,-59,-109,-136,62,-57,-115,-68,-71,-77,-101,62,-136,-69,-78,]),'COUNT':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[63,63,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,63,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,63,-58,-59,-109,-136,63,-57,-115,-68,-71,-77,-101,63,-136,-69,-78,]),'COUNTIF':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[64,64,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,64,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,64,-58,-59,-109,-136,64,-57,-115,-68,-71,-77,-101,64,-136,-69,-78,]),'MEAN':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[65,65,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,65,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,65,-58,-59,-109,-136,65,-57,-115,-68,-71,-77,-101,65,-136,-69,-78,]),'MEDIAN':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[66,66,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,66,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,66,-58,-59,-109,-136,66,-57,-115,-68,-71,-77,-101,66,-136,-69,-78,]),'MODE':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[67,67,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,67,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,67,-58,-59,-109,-136,67,-57,-115,-68,-71,-77,-101,67,-136,-69,-78,]),'STDV':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[68,68,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,68,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,68,-58,-59,-109,-136,68,-57,-115,-68,-71,-77,-101,68,-136,-69,-78,]),'KMEANS':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[69,69,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,69,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,69,-58,-59,-109,-136,69,-57,-115,-68,-71,-77,-101,69,-136,-69,-78,]),'DERL':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[70,70,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,70,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,70,-58,-59,-109,-136,70,-57,-115,-68,-71,-77,-101,70,-136,-69,-78,]),'DBERN':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[71,71,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,71,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,71,-58,-59,-109,-136,71,-57,-115,-68,-71,-77,-101,71,-136,-69,-78,]),'DPOI':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[72,72,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,72,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,72,-58,-59,-109,-136,72,-57,-115,-68,-71,-77,-101,72,-136,-69,-78,]),'TRANSPOSE':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[73,73,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,73,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,73,-58,-59,-109,-136,73,-57,-115,-68,-71,-77,-101,73,-136,-69,-78,]),'INVERSE':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[74,74,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,74,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,74,-58,-59,-109,-136,74,-57,-115,-68,-71,-77,-101,74,-136,-69,-78,]),'ROTATE':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[75,75,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,75,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,75,-58,-59,-109,-136,75,-57,-115,-68,-71,-77,-101,75,-136,-69,-78,]),'REF':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[76,76,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,76,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,76,-58,-59,-109,-136,76,-57,-115,-68,-71,-77,-101,76,-136,-69,-78,]),'RREF':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[77,77,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,77,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,77,-58,-59,-109,-136,77,-57,-115,-68,-71,-77,-101,77,-136,-69,-78,]),'MONT':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[78,78,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,78,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,78,-58,-59,-109,-136,78,-57,-115,-68,-71,-77,-101,78,-136,-69,-78,]),'DO':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[79,79,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,79,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,79,-58,-59,-109,-136,79,-57,-115,-68,-71,-77,-101,79,-136,-69,-78,]),'READ':([26,47,49,50,51,52,53,54,55,56,57,58,175,180,182,230,232,233,244,245,251,254,255,256,258,261,262,265,266,267,268,269,270,276,277,280,285,286,300,303,306,308,318,326,327,345,347,349,350,355,356,],[80,80,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,80,-47,-46,-48,-49,-50,-79,-80,-111,-112,-113,-114,-116,-117,-118,-119,-120,-121,-122,-123,-124,-51,-20,80,-58,-59,-109,-136,80,-57,-115,-68,-71,-77,-101,80,-136,-69,-78,]),'RCOR':([37,38,39,40,41,42,43,44,85,87,88,94,128,129,130,131,132,133,134,135,136,178,179,228,229,289,],[85,87,-87,-97,-99,-100,-89,-92,-136,-136,-98,-96,-52,-56,-88,-53,-90,-91,-93,-94,-95,228,229,-54,-55,314,]),'RELOP':([37,38,39,40,41,42,43,44,85,87,88,93,94,128,129,130,131,132,133,134,135,136,137,138,141,142,143,178,179,181,183,184,185,228,229,231,278,298,],[86,-96,-87,-97,-99,-100,-89,-92,-136,-136,-98,86,-96,-52,-56,-88,-53,-90,-91,-93,-94,-95,-97,86,86,-97,86,86,-96,-98,-97,86,86,-54,-55,-98,86,86,]),'MULT':([38,40,41,42,44,85,87,88,94,128,129,131,136,137,142,179,181,183,228,229,231,],[-96,-97,-99,-100,91,-136,-136,-98,-96,-52,-56,-53,-95,-97,-97,-96,-98,-97,-54,-55,-98,]),'DIV':([38,40,41,42,44,85,87,88,94,128,129,131,136,137,142,179,181,183,228,229,231,],[-96,-97,-99,-100,92,-136,-136,-98,-96,-52,-56,-53,-95,-97,-97,-96,-98,-97,-54,-55,-98,]),'PLUS':([38,40,41,42,43,44,85,87,88,94,128,129,131,134,135,136,137,142,179,181,183,228,229,231,],[-96,-97,-99,-100,89,-92,-136,-136,-98,-96,-52,-56,-53,-93,-94,-95,-97,-97,-96,-98,-97,-54,-55,-98,]),'MINUS':([38,40,41,42,43,44,85,87,88,94,128,129,131,134,135,136,137,142,179,181,183,228,229,231,],[-96,-97,-99,-100,90,-92,-136,-136,-98,-96,-52,-56,-53,-93,-94,-95,-97,-97,-96,-98,-97,-54,-55,-98,]),'AND':([39,40,41,42,43,44,85,87,88,94,128,129,130,131,132,133,134,135,136,228,229,298,],[-87,-97,-99,-100,-89,-92,-136,-136,-98,-96,-52,-56,-88,-53,-90,-91,-93,-94,-95,-54,-55,323,]),'OR':([39,40,41,42,43,44,85,87,88,94,128,129,130,131,132,133,134,135,136,228,229,298,],[-87,-97,-99,-100,-89,-92,-136,-136,-98,-96,-52,-56,-88,-53,-90,-91,-93,-94,-95,-54,-55,324,]),'EQUALS':([59,85,87,98,128,129,131,147,148,228,229,],[97,-136,-136,139,-52,-56,-53,195,196,-54,-55,]),'FX':([103,287,288,],[147,147,147,]),'FY':([103,287,288,],[148,148,148,]),'WHILE':([174,272,],[221,-104,]),'ELSE':([279,330,],[304,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lugstat':([0,],[1,]),'addmain':([4,],[5,]),'empty':([4,5,7,11,12,26,47,59,79,81,82,85,87,103,106,107,108,109,114,115,116,117,118,119,141,142,143,155,175,176,177,185,188,192,207,225,253,271,278,280,283,284,287,288,292,298,301,303,304,306,310,321,323,324,325,333,348,349,350,],[6,9,13,18,13,48,48,100,121,124,9,129,129,149,156,156,156,156,156,156,156,156,156,156,187,189,191,203,48,224,227,236,240,243,156,275,203,299,236,307,240,240,312,312,156,299,227,327,329,307,240,337,299,299,341,344,353,48,327,]),'lugstat2':([5,82,],[7,125,]),'vars':([5,82,177,301,],[8,8,226,226,]),'lugstat3':([7,12,],[11,19,]),'modules':([7,12,],[12,12,]),'vars1':([10,21,36,],[15,28,84,]),'mnv':([11,],[17,]),'asign2':([16,40,59,137,142,162,166,183,],[23,88,98,181,88,88,88,231,]),'block':([17,],[25,]),'tipo':([22,27,35,],[29,81,83,]),'expresion':([24,45,97,101,102,127,139,140,235,271,298,323,324,],[37,93,138,141,143,178,184,185,278,298,298,298,298,]),'varcte':([24,45,86,89,90,91,92,97,101,102,110,111,112,113,127,139,140,150,155,195,196,198,199,210,214,235,248,253,271,290,291,296,298,323,324,],[38,94,94,94,94,94,94,94,94,94,160,163,163,167,179,94,94,197,202,94,94,249,250,260,264,94,289,202,94,315,316,320,94,94,94,]),'exp':([24,45,86,89,90,97,101,102,127,139,140,195,196,235,271,298,323,324,],[39,39,130,132,133,39,39,39,39,39,39,246,247,39,39,39,39,39,]),'termino':([24,45,86,89,90,91,92,97,101,102,127,139,140,195,196,235,271,298,323,324,],[43,43,43,43,43,134,135,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'factor':([24,45,86,89,90,91,92,97,101,102,127,139,140,195,196,235,271,298,323,324,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'block2':([26,47,175,349,],[46,96,222,354,]),'estatuto':([26,47,175,280,306,349,],[47,47,47,306,306,47,]),'asign':([26,47,175,280,306,349,],[49,49,49,49,49,49,]),'cond':([26,47,175,280,306,335,349,],[50,50,50,50,50,346,50,]),'escrt':([26,47,175,280,306,349,],[51,51,51,51,51,51,]),'plot':([26,47,175,280,306,349,],[52,52,52,52,52,52,]),'count':([26,47,175,280,306,349,],[53,53,53,53,53,53,]),'countif':([26,47,175,280,306,349,],[54,54,54,54,54,54,]),'metodos':([26,47,175,280,306,349,],[55,55,55,55,55,55,]),'dwhile':([26,47,175,280,306,349,],[56,56,56,56,56,56,]),'readln':([26,47,175,280,306,349,],[57,57,57,57,57,57,]),'funccall':([26,47,175,280,306,349,],[58,58,58,58,58,58,]),'fcn1':([59,],[99,]),'wn1':([79,],[120,]),'mn1':([81,],[123,]),'asign3':([85,87,],[128,131,]),'xyfunc':([103,287,288,],[145,311,313,]),'plot2':([103,333,],[146,343,]),'mmmfunc':([106,107,108,109,114,115,116,117,118,119,207,292,],[153,157,158,159,168,169,170,171,172,173,257,317,]),'expfunc':([111,112,],[161,164,]),'expfunc2':([113,],[165,]),'wblock':([120,],[174,]),'cn1':([141,],[186,]),'en3':([142,],[188,]),'en1':([143,],[190,]),'mmmarray':([155,253,],[201,293,]),'rn1':([176,],[223,]),'modules2':([177,301,],[225,325,]),'funccall2':([185,278,],[234,302,]),'escrt2':([188,283,284,310,],[238,309,310,332,]),'en2':([192,],[242,]),'mn2':([225,],[274,]),'ifblock':([237,328,],[279,342,]),'escrt3':([239,],[282,]),'dwhileconds':([271,298,323,324,],[297,322,338,339,]),'ifblock2':([280,306,],[305,331,]),'cn2':([303,350,],[326,355,]),'cn3':([304,],[328,]),'wn2':([321,],[336,]),'mn3':([325,],[340,]),'funblock':([340,],[348,]),'mn7':([348,],[352,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lugstat","S'",1,None,None,None),
  ('lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 mnv block','lugstat',8,'p_lugstat','LUGSTAT.py',225),
  ('addmain -> empty','addmain',1,'p_addmain','LUGSTAT.py',229),
  ('mnv -> empty','mnv',1,'p_mnv','LUGSTAT.py',238),
  ('lugstat2 -> vars','lugstat2',1,'p_lugstat2','LUGSTAT.py',243),
  ('lugstat2 -> empty','lugstat2',1,'p_lugstat2','LUGSTAT.py',244),
  ('lugstat3 -> modules','lugstat3',1,'p_lugstat3','LUGSTAT.py',249),
  ('lugstat3 -> modules lugstat3','lugstat3',2,'p_lugstat3','LUGSTAT.py',250),
  ('lugstat3 -> empty','lugstat3',1,'p_lugstat3','LUGSTAT.py',251),
  ('vars -> VAR vars1','vars',2,'p_vars','LUGSTAT.py',255),
  ('vars1 -> ID COMMA vars1','vars1',3,'p_vars1','LUGSTAT.py',355),
  ('vars1 -> ID COLON tipo SCOLON lugstat2','vars1',5,'p_vars1','LUGSTAT.py',356),
  ('vars1 -> ID asign2 COLON tipo SCOLON','vars1',5,'p_vars1','LUGSTAT.py',357),
  ('vars1 -> ID asign2 COMMA vars1','vars1',4,'p_vars1','LUGSTAT.py',358),
  ('savename -> empty','savename',1,'p_savename','LUGSTAT.py',384),
  ('modules -> FUNC ID COLON tipo mn1 OPAREN modules2 mn2 CPAREN modules2 mn3 funblock mn7','modules',13,'p_modules','LUGSTAT.py',388),
  ('mn1 -> empty','mn1',1,'p_mn1','LUGSTAT.py',393),
  ('mn7 -> empty','mn7',1,'p_mn7','LUGSTAT.py',400),
  ('mn2 -> empty','mn2',1,'p_mn2','LUGSTAT.py',415),
  ('mn3 -> empty','mn3',1,'p_mn3','LUGSTAT.py',422),
  ('funccall -> ID fcn1 OPAREN expresion funccall2 CPAREN','funccall',6,'p_funccall','LUGSTAT.py',429),
  ('fcn1 -> empty','fcn1',1,'p_fcn1','LUGSTAT.py',433),
  ('funccall2 -> COMMA expresion funccall2','funccall2',3,'p_funccall2','LUGSTAT.py',440),
  ('funccall2 -> empty','funccall2',1,'p_funccall2','LUGSTAT.py',441),
  ('modules2 -> vars','modules2',1,'p_modules2','LUGSTAT.py',446),
  ('modules2 -> empty','modules2',1,'p_modules2','LUGSTAT.py',447),
  ('funblock -> OBRACKET block2 CBRACKET','funblock',3,'p_funblock','LUGSTAT.py',453),
  ('block -> OBRACKET block2 CBRACKET','block',3,'p_block','LUGSTAT.py',457),
  ('block2 -> estatuto','block2',1,'p_block2','LUGSTAT.py',468),
  ('block2 -> estatuto block2','block2',2,'p_block2','LUGSTAT.py',469),
  ('block2 -> empty','block2',1,'p_block2','LUGSTAT.py',470),
  ('tipo -> INT','tipo',1,'p_tipo','LUGSTAT.py',474),
  ('tipo -> BOOL','tipo',1,'p_tipo','LUGSTAT.py',475),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','LUGSTAT.py',476),
  ('tipo -> STRING','tipo',1,'p_tipo','LUGSTAT.py',477),
  ('tipo -> CHAR','tipo',1,'p_tipo','LUGSTAT.py',478),
  ('estatuto -> asign','estatuto',1,'p_estatuto','LUGSTAT.py',484),
  ('estatuto -> cond','estatuto',1,'p_estatuto','LUGSTAT.py',485),
  ('estatuto -> escrt','estatuto',1,'p_estatuto','LUGSTAT.py',486),
  ('estatuto -> plot','estatuto',1,'p_estatuto','LUGSTAT.py',487),
  ('estatuto -> count','estatuto',1,'p_estatuto','LUGSTAT.py',488),
  ('estatuto -> countif','estatuto',1,'p_estatuto','LUGSTAT.py',489),
  ('estatuto -> metodos','estatuto',1,'p_estatuto','LUGSTAT.py',490),
  ('estatuto -> dwhile','estatuto',1,'p_estatuto','LUGSTAT.py',491),
  ('estatuto -> readln','estatuto',1,'p_estatuto','LUGSTAT.py',492),
  ('estatuto -> funccall','estatuto',1,'p_estatuto','LUGSTAT.py',493),
  ('asign -> ID EQUALS expresion SCOLON','asign',4,'p_asign','LUGSTAT.py',498),
  ('asign -> ID EQUALS ID SCOLON','asign',4,'p_asign','LUGSTAT.py',499),
  ('asign -> ID EQUALS ID asign2 SCOLON','asign',5,'p_asign','LUGSTAT.py',500),
  ('asign -> ID asign2 EQUALS ID SCOLON','asign',5,'p_asign','LUGSTAT.py',501),
  ('asign -> ID asign2 EQUALS expresion SCOLON','asign',5,'p_asign','LUGSTAT.py',502),
  ('asign -> ID asign2 EQUALS ID asign2 SCOLON','asign',6,'p_asign','LUGSTAT.py',503),
  ('asign2 -> LCOR expresion RCOR asign3','asign2',4,'p_asign2','LUGSTAT.py',560),
  ('asign2 -> LCOR varcte RCOR asign3','asign2',4,'p_asign2','LUGSTAT.py',561),
  ('asign3 -> LCOR expresion RCOR','asign3',3,'p_asign3','LUGSTAT.py',566),
  ('asign3 -> LCOR varcte RCOR','asign3',3,'p_asign3','LUGSTAT.py',567),
  ('asign3 -> empty','asign3',1,'p_asign3','LUGSTAT.py',568),
  ('escrt -> PRINT OPAREN ID en3 escrt2 CPAREN SCOLON','escrt',7,'p_escrt','LUGSTAT.py',572),
  ('escrt -> PRINT OPAREN expresion en1 CPAREN SCOLON','escrt',6,'p_escrt','LUGSTAT.py',573),
  ('escrt -> PRINT OPAREN STRING CPAREN en2 SCOLON','escrt',6,'p_escrt','LUGSTAT.py',574),
  ('escrt2 -> COMMA escrt3','escrt2',2,'p_escrt2','LUGSTAT.py',578),
  ('escrt2 -> empty','escrt2',1,'p_escrt2','LUGSTAT.py',579),
  ('escrt3 -> ID escrt2','escrt3',2,'p_escrt3','LUGSTAT.py',583),
  ('escrt3 -> ID','escrt3',1,'p_escrt3','LUGSTAT.py',584),
  ('escrt3 -> STRING escrt2 escrt2','escrt3',3,'p_escrt3','LUGSTAT.py',585),
  ('en1 -> empty','en1',1,'p_en1','LUGSTAT.py',589),
  ('en2 -> empty','en2',1,'p_en2','LUGSTAT.py',598),
  ('en3 -> empty','en3',1,'p_en3','LUGSTAT.py',606),
  ('cond -> IF OPAREN expresion cn1 CPAREN ifblock SCOLON cn2','cond',8,'p_cond','LUGSTAT.py',630),
  ('cond -> IF OPAREN expresion cn1 CPAREN ifblock ELSE cn3 ifblock SCOLON cn2','cond',11,'p_cond','LUGSTAT.py',631),
  ('cn1 -> empty','cn1',1,'p_cn1','LUGSTAT.py',635),
  ('cn2 -> empty','cn2',1,'p_cn2','LUGSTAT.py',651),
  ('cn3 -> empty','cn3',1,'p_cn3','LUGSTAT.py',658),
  ('ifblock -> OBRACKET ifblock2 CBRACKET','ifblock',3,'p_ifblock','LUGSTAT.py',671),
  ('ifblock2 -> estatuto','ifblock2',1,'p_ifblock2','LUGSTAT.py',675),
  ('ifblock2 -> estatuto ifblock2','ifblock2',2,'p_ifblock2','LUGSTAT.py',676),
  ('ifblock2 -> empty','ifblock2',1,'p_ifblock2','LUGSTAT.py',677),
  ('count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON','count',9,'p_count','LUGSTAT.py',680),
  ('countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON','countif',11,'p_countif','LUGSTAT.py',683),
  ('plot -> PLOT OPAREN xyfunc CPAREN SCOLON','plot',5,'p_plot','LUGSTAT.py',686),
  ('plot -> PLOT OPAREN plot2 CPAREN SCOLON','plot',5,'p_plot','LUGSTAT.py',687),
  ('plot2 -> LCOR varcte COMMA varcte RCOR','plot2',5,'p_plot2','LUGSTAT.py',691),
  ('plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2','plot2',7,'p_plot2','LUGSTAT.py',692),
  ('plot2 -> empty','plot2',1,'p_plot2','LUGSTAT.py',693),
  ('xyfunc -> FX EQUALS exp SCOLON xyfunc','xyfunc',5,'p_xyfunc','LUGSTAT.py',697),
  ('xyfunc -> FY EQUALS exp SCOLON xyfunc','xyfunc',5,'p_xyfunc','LUGSTAT.py',698),
  ('xyfunc -> empty','xyfunc',1,'p_xyfunc','LUGSTAT.py',699),
  ('expresion -> exp','expresion',1,'p_expresion','LUGSTAT.py',704),
  ('expresion -> expresion RELOP exp','expresion',3,'p_expresion','LUGSTAT.py',705),
  ('exp -> termino','exp',1,'p_exp','LUGSTAT.py',736),
  ('exp -> termino PLUS exp','exp',3,'p_exp','LUGSTAT.py',737),
  ('exp -> termino MINUS exp','exp',3,'p_exp','LUGSTAT.py',738),
  ('termino -> factor','termino',1,'p_termino','LUGSTAT.py',781),
  ('termino -> factor MULT termino','termino',3,'p_termino','LUGSTAT.py',782),
  ('termino -> factor DIV termino','termino',3,'p_termino','LUGSTAT.py',783),
  ('factor -> OPAREN expresion CPAREN','factor',3,'p_factor','LUGSTAT.py',822),
  ('factor -> varcte','factor',1,'p_factor','LUGSTAT.py',823),
  ('varcte -> ID','varcte',1,'p_varcte','LUGSTAT.py',838),
  ('varcte -> ID asign2','varcte',2,'p_varcte','LUGSTAT.py',839),
  ('varcte -> NUMERIC','varcte',1,'p_varcte','LUGSTAT.py',840),
  ('varcte -> NUMBER','varcte',1,'p_varcte','LUGSTAT.py',841),
  ('dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON','dwhile',9,'p_dwhile','LUGSTAT.py',894),
  ('wn1 -> empty','wn1',1,'p_wn1','LUGSTAT.py',897),
  ('wn2 -> empty','wn2',1,'p_wn2','LUGSTAT.py',900),
  ('wblock -> OBRACKET block2 CBRACKET','wblock',3,'p_wblock','LUGSTAT.py',914),
  ('dwhileconds -> expresion dwhileconds','dwhileconds',2,'p_dwhileconds','LUGSTAT.py',919),
  ('dwhileconds -> expresion AND dwhileconds','dwhileconds',3,'p_dwhileconds','LUGSTAT.py',920),
  ('dwhileconds -> expresion OR dwhileconds','dwhileconds',3,'p_dwhileconds','LUGSTAT.py',921),
  ('dwhileconds -> empty','dwhileconds',1,'p_dwhileconds','LUGSTAT.py',922),
  ('readln -> READ OPAREN ID rn1 CPAREN SCOLON','readln',6,'p_readln','LUGSTAT.py',926),
  ('rn1 -> empty','rn1',1,'p_rn1','LUGSTAT.py',929),
  ('metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',951),
  ('metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',952),
  ('metodos -> MODE OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',953),
  ('metodos -> STDV OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',954),
  ('metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON','metodos',7,'p_metodos','LUGSTAT.py',955),
  ('metodos -> DERL OPAREN expfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',956),
  ('metodos -> DBERN OPAREN expfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',957),
  ('metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',958),
  ('metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',959),
  ('metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',960),
  ('metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',961),
  ('metodos -> REF OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',962),
  ('metodos -> RREF OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',963),
  ('metodos -> MONT OPAREN mmmfunc CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',964),
  ('expfunc -> ID COMMA ID COMMA ID','expfunc',5,'p_expfunc','LUGSTAT.py',969),
  ('expfunc -> varcte COMMA varcte COMMA varcte','expfunc',5,'p_expfunc','LUGSTAT.py',970),
  ('expfunc2 -> ID COMMA ID','expfunc2',3,'p_expfunc2','LUGSTAT.py',975),
  ('expfunc2 -> varcte COMMA varcte','expfunc2',3,'p_expfunc2','LUGSTAT.py',976),
  ('mmmfunc -> ID','mmmfunc',1,'p_mmmfunc','LUGSTAT.py',981),
  ('mmmfunc -> OBRACKET mmmarray CBRACKET','mmmfunc',3,'p_mmmfunc','LUGSTAT.py',982),
  ('mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc','mmmfunc',5,'p_mmmfunc','LUGSTAT.py',983),
  ('mmmfunc -> empty','mmmfunc',1,'p_mmmfunc','LUGSTAT.py',984),
  ('mmmarray -> varcte','mmmarray',1,'p_mmmarray','LUGSTAT.py',989),
  ('mmmarray -> varcte COMMA mmmarray','mmmarray',3,'p_mmmarray','LUGSTAT.py',990),
  ('mmmarray -> empty','mmmarray',1,'p_mmmarray','LUGSTAT.py',991),
  ('empty -> <empty>','empty',0,'p_empty','LUGSTAT.py',995),
]
