
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CBRACKET CHAR CHARACTER COLON COMMA COMMENT COUNT COUNTIF CPAREN CTED CTEI DBERN DERL DIFF DIV DO DOUBLE DPOI ELSE EQ EQUALS EULER FUNC FX FY GRE GREATEQ GREATERTHAN ID IF INT INTEGER INVERSE KMEANS LCOR LESSEQ LESSTHAN LOGICAL LUGSTAT MEAN MEDIAN MINUS MODE MONT MULT NUMBER NUMERIC OBRACKET OPAREN OR PER PLOT PLUS PRINT QUOTE RCOR READ REF RELOP RETURN ROTATE RREF SCOLON STDV STRING TIPO TRANSPOSE VAR WHILE\n    lugstat : LUGSTAT ID SCOLON addmain lugstat2 lugstat3 mnv block\n    addmain : empty mnv : empty \n    lugstat2 : vars\n    | empty\n    \n    lugstat3 : modules\n    | modules lugstat3\n    | empty\n    vars : VAR vars1 \n     \n    vars1 : ID COMMA vars1\n    | ID COLON tipo SCOLON lugstat2\n    | ID LCOR NUMBER RCOR COLON tipo SCOLON lugstat2\n    | ID LCOR NUMBER RCOR COLON tipo SCOLON \n    | ID LCOR NUMBER RCOR LCOR NUMBER RCOR COLON tipo SCOLON lugstat2\n    | ID LCOR NUMBER RCOR LCOR NUMBER RCOR COLON tipo SCOLON \n    | ID asign2 COLON tipo SCOLON\n    | ID asign2 COMMA vars1\n    savename : empty\n    modules : FUNC ID COLON tipo mn1 OPAREN  modules2 mn2 CPAREN modules2 mn3 funblock mn7mn1 : emptymn7 : emptymn2 : mn3 : empty funccall : ID OPAREN fcn1 expresion fcn2 funccall2 CPAREN fcn3\n    | ID OPAREN fcn1 ID fcn2 funccall2 CPAREN  fcn1 : empty fcn2 : emptyfcn3 : empty  funccall2 : COMMA expresion fcn2 funccall2\n    | ID fcn2 funccall2\n    | empty \n    modules2 : vars\n    | empty\n    funblock : OBRACKET block2 CBRACKET\n    \n    block : OBRACKET block2 CBRACKET\n    \n    block2 : estatuto\n    | estatuto block2\n    | empty\n    tipo : INT\n    | BOOL \n    | DOUBLE\n    | STRING\n    | CHAR\n    \n    estatuto : asign\n    | cond \n    | escrt\n    | plot\n    | count\n    | countif\n    | metodos\n    | dwhile\n    | readln\n    | funccall\n    | regreso\n     regreso : RETURN OPAREN ID regnum1 CPAREN SCOLON\n    | RETURN OPAREN expresion regnum2 CPAREN SCOLON\n     regnum1 :   regnum2 :  afcn1 : empty \n    asign : ID EQUALS expresion SCOLON\n    | ID EQUALS ID SCOLON\n    | ID EQUALS ID asign2 SCOLON\n    | ID asign2 EQUALS ID SCOLON\n    | ID asign2 EQUALS expresion SCOLON\n    | ID asign2 EQUALS ID asign2 SCOLON\n    | ID EQUALS funccall afcn1\n    \n    asign2 : LCOR expresion RCOR LCOR varcte RCOR\n    | LCOR expresion RCOR LCOR expresion RCOR\n    | LCOR varcte RCOR LCOR expresion RCOR\n    | LCOR varcte RCOR LCOR varcte RCOR\n    | LCOR expresion RCOR\n    | LCOR varcte RCOR \n    \n    asign3 : LCOR expresion RCOR\n    | LCOR varcte RCOR \n    | emptyescrt : PRINT OPAREN ID en3 escrt2 CPAREN SCOLON\n    | PRINT OPAREN expresion en1 CPAREN SCOLON\n    | PRINT OPAREN STRING CPAREN en2 SCOLON\n    | PRINT OPAREN STRING  escrt2 CPAREN en2 SCOLON\n    escrt2 : COMMA escrt3\n    | empty\n    escrt3 : ID escrt2\n    | ID\n    | STRING escrt2 escrt2\n    en1 : emptyen2 : emptyen3 : emptycond : IF OPAREN expresion cn1 CPAREN ifblock SCOLON cn2\n    | IF OPAREN expresion cn1 CPAREN ifblock ELSE cn3 ifblock SCOLON cn2\n    cn1 : emptycn2 : emptycn3 : empty\n    ifblock : OBRACKET ifblock2 CBRACKET\n    \n    ifblock2 : estatuto\n    | estatuto ifblock2\n    | emptycount : COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLONcountif : COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLONplot : PLOT OPAREN xyfunc CPAREN SCOLON\n    | PLOT OPAREN plot2 CPAREN SCOLON\n    \n    plot2 : LCOR varcte COMMA varcte RCOR\n    | LCOR varcte COMMA varcte RCOR COMMA plot2\n    | empty\n    xyfunc : FX EQUALS exp SCOLON xyfunc\n    | FY EQUALS exp SCOLON xyfunc\n    | empty\n    expresion : exp \n    | expresion RELOP exp \n    \n    exp : termino\n    | termino PLUS exp\n    | termino MINUS exp\n    \n    termino : factor\n    | factor MULT termino\n    | factor DIV termino\n    \n    factor : OPAREN expresion CPAREN \n    | varcte\n    \n    varcte : ID\n    | ID asign2\n    | NUMERIC\n    | NUMBER\n    | LOGICAL\n    \n    dwhile : DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON \n    wn1 : emptywn2 : empty\n    wblock : OBRACKET block2 CBRACKET   \n    \n    dwhileconds : expresion dwhileconds\n    | empty\n     readln : READ OPAREN ID rn1 CPAREN SCOLON rn1 : empty \n    metodos : MEAN fe1 OPAREN arrfun CPAREN SCOLON\n    | MEDIAN fe2 OPAREN arrfun CPAREN SCOLON\n    | MODE fe3 OPAREN arrfun CPAREN SCOLON\n    | STDV fe4 OPAREN arrfun CPAREN SCOLON\n    | KMEANS fe5 OPAREN kval CPAREN SCOLON\n    | DERL dmn1 OPAREN expfunc CPAREN SCOLON\n    | DBERN dbrn1 OPAREN expfunc2 CPAREN SCOLON\n    | DPOI dp1 OPAREN expfunc2 CPAREN SCOLON\n    | TRANSPOSE tp1 OPAREN mmmfunc CPAREN SCOLON\n    | INVERSE tp2 OPAREN mmmfunc CPAREN SCOLON\n    | ROTATE tp3 OPAREN mmmfunc CPAREN SCOLON\n    | REF tp4 OPAREN mmmfunc CPAREN SCOLON\n    | RREF tp5 OPAREN mmmfunc CPAREN SCOLON\n    | EULER tp6 OPAREN CPAREN SCOLON\n    fe1 : emptyfe2 : emptyfe3 : emptyfe4 : emptyfe5 : empty kval : varcte COMMA arrfun2 COMMA arrfun3arrfun : LCOR datasetarr RCORarrfun2 : LCOR datasetarr RCORarrfun3 : LCOR datasetarr2 RCOR\n    datasetarr : varcte\n    | varcte COMMA datasetarr\n    \n    datasetarr2 : varcte\n    | varcte COMMA datasetarr2\n    dmn1 : emptydbrn1 : emptydp1 : emptytp1 : emptytp2 : emptytp3 : emptytp4 : emptytp5 : emptytp6 : empty\n    expfunc : ID COMMA ID COMMA ID\n    | varcte COMMA varcte COMMA varcte\n    \n    expfunc2 : ID COMMA ID\n    | varcte COMMA varcte\n    \n    mmmfunc : LCOR RCOR\n\t| LCOR mmmarray RCOR\n    | ID\n    \n    mmmarray : libero LCOR datasetarr4 RCOR COMMA mmmarray\n    | libero LCOR datasetarr4 RCOR\n    libero : empty\n    datasetarr4 : varcte\n    | varcte COMMA datasetarr4\n    empty :'
    
_lr_action_items = {'LUGSTAT':([0,],[2,]),'$end':([1,25,101,],[0,-1,-35,]),'ID':([2,10,14,21,23,26,35,39,40,41,42,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,86,87,89,90,91,92,93,94,95,97,98,103,105,106,107,109,110,141,142,148,149,150,151,152,153,154,155,159,160,161,162,172,179,180,181,182,183,184,185,186,187,190,201,203,204,205,208,209,218,222,223,225,226,228,260,261,262,263,264,266,267,268,269,270,280,281,284,296,297,299,300,311,312,320,321,323,327,329,330,337,338,339,341,342,343,344,345,347,348,351,354,355,357,358,359,360,361,363,365,366,367,370,371,372,373,374,377,379,380,391,392,400,401,402,403,404,413,418,428,434,436,437,440,445,446,],[3,16,20,16,35,61,-117,-107,-119,-121,-109,-112,35,16,61,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-118,35,-71,35,-72,35,35,35,35,-116,-120,157,-178,35,164,173,174,191,192,35,-108,35,-110,-111,-113,-114,-115,-178,206,208,-26,35,35,235,238,238,243,243,243,243,243,61,-61,-60,-66,-59,-117,-178,278,35,35,35,35,35,-68,-67,-70,-69,-62,-63,-64,321,-27,321,-99,-100,35,349,35,352,35,-143,35,-65,-178,35,61,-77,-78,35,35,-130,35,-131,-132,-133,-134,35,-135,-136,-137,-138,35,-139,-140,-141,-142,35,-128,-55,-56,321,-25,-178,-178,-178,61,-76,-79,415,35,321,-24,-28,-88,-91,35,35,-97,-122,61,-178,35,-89,-98,]),'SCOLON':([3,29,30,31,32,33,34,35,39,40,41,42,43,86,89,91,97,98,99,149,151,152,153,154,155,157,158,196,202,206,207,216,220,221,248,260,261,262,263,265,273,274,275,276,282,283,287,290,291,292,293,295,298,301,302,307,308,309,310,314,315,316,326,328,331,369,395,407,410,419,420,425,438,],[4,85,-39,-40,-41,-42,-43,-117,-107,-119,-121,-109,-112,-118,-71,-72,-116,-120,156,-108,-110,-111,-113,-114,-115,201,203,259,264,266,267,-178,280,281,311,-68,-67,-70,-69,320,329,330,-86,-178,334,335,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,374,379,380,398,-178,-93,428,434,-124,437,446,]),'VAR':([4,5,6,85,194,259,368,398,],[-178,10,-2,10,10,10,10,10,]),'FUNC':([4,5,6,7,8,9,12,15,28,85,100,145,156,259,319,398,423,435,442,443,448,],[-178,-178,-2,14,-4,-5,14,-9,-10,-178,-17,-11,-16,-13,-12,-15,-14,-178,-19,-21,-34,]),'OBRACKET':([4,5,6,7,8,9,11,12,13,15,17,18,19,28,81,85,100,139,140,145,156,256,257,259,271,319,368,375,397,398,405,406,421,422,423,435,442,443,448,],[-178,-178,-2,-178,-4,-5,-178,-6,-8,-9,26,-3,-7,-10,-178,-178,-17,190,-123,-11,-16,-32,-33,-13,327,-12,-178,-178,-178,-15,327,-92,436,-23,-14,-178,-19,-21,-34,]),'CPAREN':([8,9,15,28,35,39,40,41,42,43,85,86,89,91,96,97,98,100,108,145,149,151,152,153,154,155,156,163,164,165,166,167,168,171,188,191,192,193,194,208,209,210,211,212,213,214,215,217,219,227,229,230,231,232,234,237,240,241,243,244,245,246,247,251,252,253,254,255,256,257,259,260,261,262,263,268,269,270,272,277,278,279,303,312,317,319,321,322,324,325,332,333,334,335,340,352,353,356,362,363,364,370,372,374,381,382,383,384,385,386,396,398,399,400,403,404,409,412,415,416,423,424,426,427,429,437,439,445,],[-4,-5,-9,-10,-117,-107,-119,-121,-109,-112,-178,-118,-71,-72,155,-116,-120,-17,-178,-11,-108,-110,-111,-113,-114,-115,-16,-178,-117,-178,216,220,221,-103,248,-178,-57,-58,-178,-117,-178,271,-90,-178,-87,273,-85,276,-81,287,290,291,292,293,295,298,301,302,-172,307,308,309,310,314,-129,315,316,-22,-32,-33,-13,-68,-67,-70,-69,-178,-27,-178,328,-80,-83,-178,-170,-178,368,-12,-178,371,-31,373,-82,-178,-178,-178,-150,-168,-169,-171,395,-178,-127,-178,-178,-178,-84,-104,-106,-105,-101,410,-126,-15,-30,-178,-88,-91,-178,-149,-166,-167,-14,-29,-102,-103,438,-178,-152,-89,]),'COMMA':([16,24,35,39,40,41,42,43,86,89,91,97,98,149,151,152,153,154,155,164,166,173,174,208,209,212,213,219,224,233,235,236,238,239,260,261,262,263,268,269,270,277,278,279,285,286,289,321,332,333,346,349,350,370,372,381,385,387,394,400,414,417,431,],[21,46,-117,-107,-119,-121,-109,-112,-118,-71,-72,-116,-120,-108,-110,-111,-113,-114,-115,-178,218,225,226,-117,-178,218,-87,-81,284,294,296,297,299,300,-68,-67,-70,-69,323,-27,323,-80,218,218,337,338,341,-178,-82,218,389,391,392,323,-178,-84,409,411,418,323,-151,432,440,]),'COLON':([16,20,24,88,89,91,258,260,261,262,263,],[22,27,45,147,-71,-72,318,-68,-67,-70,-69,]),'LCOR':([16,35,61,88,89,91,108,157,164,175,176,177,178,183,184,185,186,187,192,206,208,235,238,242,294,305,306,389,409,432,],[23,87,87,146,148,150,172,87,87,228,228,228,228,242,242,242,242,242,87,87,87,87,87,-178,347,357,-175,413,172,-178,]),'INT':([22,27,45,147,318,],[30,30,30,30,30,]),'BOOL':([22,27,45,147,318,],[31,31,31,31,31,]),'DOUBLE':([22,27,45,147,318,],[32,32,32,32,32,]),'STRING':([22,27,45,107,147,218,318,],[33,33,33,166,33,279,33,]),'CHAR':([22,27,45,147,318,],[34,34,34,34,34,]),'NUMBER':([23,35,39,40,41,42,43,44,86,87,89,90,91,92,93,94,95,97,98,103,105,106,107,142,146,148,149,150,151,152,153,154,155,160,161,162,172,179,180,181,182,222,223,225,226,228,260,261,262,263,284,297,300,312,323,337,338,341,347,357,363,392,413,418,440,],[36,-117,-107,-119,-121,-109,-112,98,-118,98,-71,98,-72,98,98,98,98,-116,-120,98,-178,98,98,98,195,98,-108,98,-110,-111,-113,-114,-115,98,98,-26,98,98,98,98,98,98,98,98,98,98,-68,-67,-70,-69,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'NUMERIC':([23,35,39,40,41,42,43,44,86,87,89,90,91,92,93,94,95,97,98,103,105,106,107,142,148,149,150,151,152,153,154,155,160,161,162,172,179,180,181,182,222,223,225,226,228,260,261,262,263,284,297,300,312,323,337,338,341,347,357,363,392,413,418,440,],[40,-117,-107,-119,-121,-109,-112,40,-118,40,-71,40,-72,40,40,40,40,-116,-120,40,-178,40,40,40,40,-108,40,-110,-111,-113,-114,-115,40,40,-26,40,40,40,40,40,40,40,40,40,40,-68,-67,-70,-69,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'LOGICAL':([23,35,39,40,41,42,43,44,86,87,89,90,91,92,93,94,95,97,98,103,105,106,107,142,148,149,150,151,152,153,154,155,160,161,162,172,179,180,181,182,222,223,225,226,228,260,261,262,263,284,297,300,312,323,337,338,341,347,357,363,392,413,418,440,],[41,-117,-107,-119,-121,-109,-112,41,-118,41,-71,41,-72,41,41,41,41,-116,-120,41,-178,41,41,41,41,-108,41,-110,-111,-113,-114,-115,41,41,-26,41,41,41,41,41,41,41,41,41,41,-68,-67,-70,-69,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'OPAREN':([23,30,31,32,33,34,35,39,40,41,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,90,91,92,93,94,95,97,98,103,105,106,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,143,144,148,149,150,151,152,153,154,155,157,160,161,162,222,223,249,260,261,262,263,312,323,363,],[44,-39,-40,-41,-42,-43,-117,-107,-119,-121,-109,-112,44,105,106,107,108,109,110,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,141,142,-178,-118,44,-71,44,-72,44,44,44,44,-116,-120,44,-178,44,44,175,-144,176,-145,177,-146,178,-147,179,-148,180,-157,181,-158,182,-159,183,-160,184,-161,185,-162,186,-163,187,-164,188,-165,44,194,-20,44,-108,44,-110,-111,-113,-114,-115,105,44,44,-26,44,44,312,-68,-67,-70,-69,44,44,44,]),'CBRACKET':([26,47,48,49,50,51,52,53,54,55,56,57,58,59,60,102,159,190,201,203,204,205,250,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,376,377,378,379,380,401,402,403,404,408,428,434,436,437,444,445,446,],[-178,101,-36,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-37,-178,-178,-61,-60,-66,-59,313,-62,-63,-64,-99,-100,-143,-65,-178,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,407,-94,-96,-76,-79,-24,-28,-88,-91,-95,-97,-122,-178,-178,448,-89,-98,]),'IF':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,411,428,434,436,437,445,446,],[62,62,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,62,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,62,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,62,-76,-79,-24,-28,-88,-91,62,-97,-122,62,-178,-89,-98,]),'PRINT':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[63,63,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,63,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,63,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,63,-76,-79,-24,-28,-88,-91,-97,-122,63,-178,-89,-98,]),'PLOT':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[64,64,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,64,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,64,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,64,-76,-79,-24,-28,-88,-91,-97,-122,64,-178,-89,-98,]),'COUNT':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[65,65,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,65,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,65,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,65,-76,-79,-24,-28,-88,-91,-97,-122,65,-178,-89,-98,]),'COUNTIF':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[66,66,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,66,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,66,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,66,-76,-79,-24,-28,-88,-91,-97,-122,66,-178,-89,-98,]),'MEAN':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[67,67,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,67,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,67,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,67,-76,-79,-24,-28,-88,-91,-97,-122,67,-178,-89,-98,]),'MEDIAN':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[68,68,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,68,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,68,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,68,-76,-79,-24,-28,-88,-91,-97,-122,68,-178,-89,-98,]),'MODE':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[69,69,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,69,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,69,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,69,-76,-79,-24,-28,-88,-91,-97,-122,69,-178,-89,-98,]),'STDV':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[70,70,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,70,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,70,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,70,-76,-79,-24,-28,-88,-91,-97,-122,70,-178,-89,-98,]),'KMEANS':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[71,71,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,71,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,71,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,71,-76,-79,-24,-28,-88,-91,-97,-122,71,-178,-89,-98,]),'DERL':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[72,72,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,72,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,72,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,72,-76,-79,-24,-28,-88,-91,-97,-122,72,-178,-89,-98,]),'DBERN':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[73,73,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,73,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,73,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,73,-76,-79,-24,-28,-88,-91,-97,-122,73,-178,-89,-98,]),'DPOI':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[74,74,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,74,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,74,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,74,-76,-79,-24,-28,-88,-91,-97,-122,74,-178,-89,-98,]),'TRANSPOSE':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[75,75,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,75,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,75,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,75,-76,-79,-24,-28,-88,-91,-97,-122,75,-178,-89,-98,]),'INVERSE':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[76,76,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,76,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,76,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,76,-76,-79,-24,-28,-88,-91,-97,-122,76,-178,-89,-98,]),'ROTATE':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[77,77,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,77,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,77,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,77,-76,-79,-24,-28,-88,-91,-97,-122,77,-178,-89,-98,]),'REF':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[78,78,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,78,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,78,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,78,-76,-79,-24,-28,-88,-91,-97,-122,78,-178,-89,-98,]),'RREF':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[79,79,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,79,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,79,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,79,-76,-79,-24,-28,-88,-91,-97,-122,79,-178,-89,-98,]),'EULER':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[80,80,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,80,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,80,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,80,-76,-79,-24,-28,-88,-91,-97,-122,80,-178,-89,-98,]),'DO':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[81,81,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,81,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,81,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,81,-76,-79,-24,-28,-88,-91,-97,-122,81,-178,-89,-98,]),'READ':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[82,82,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,82,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,82,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,82,-76,-79,-24,-28,-88,-91,-97,-122,82,-178,-89,-98,]),'RETURN':([26,48,50,51,52,53,54,55,56,57,58,59,60,159,190,201,203,204,205,264,266,267,280,281,311,320,327,329,330,339,342,343,344,345,348,351,354,355,358,359,360,361,365,366,367,371,373,374,377,379,380,401,402,403,404,428,434,436,437,445,446,],[83,83,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-178,83,-61,-60,-66,-59,-62,-63,-64,-99,-100,-143,-65,83,-77,-78,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-128,-55,-56,-25,-178,-178,83,-76,-79,-24,-28,-88,-91,-97,-122,83,-178,-89,-98,]),'RCOR':([35,36,37,38,39,40,41,42,43,86,89,91,97,98,149,151,152,153,154,155,195,197,198,199,200,242,260,261,262,263,288,289,304,336,388,390,393,394,417,430,431,433,441,447,],[-117,88,89,91,-107,-119,-121,-109,-112,-118,-71,-72,-116,-120,-108,-110,-111,-113,-114,-115,258,260,261,262,263,303,-68,-67,-70,-69,340,-153,356,385,-154,414,417,-176,-174,439,-155,-177,-173,-156,]),'MULT':([35,36,38,40,41,43,86,89,91,97,98,155,157,164,192,198,199,202,206,208,260,261,262,263,265,],[-117,-120,-116,-119,-121,94,-118,-71,-72,-116,-120,-115,-117,-117,-117,-116,-116,-118,-117,-117,-68,-67,-70,-69,-118,]),'DIV':([35,36,38,40,41,43,86,89,91,97,98,155,157,164,192,198,199,202,206,208,260,261,262,263,265,],[-117,-120,-116,-119,-121,95,-118,-71,-72,-116,-120,-115,-117,-117,-117,-116,-116,-118,-117,-117,-68,-67,-70,-69,-118,]),'PLUS':([35,36,38,40,41,42,43,86,89,91,97,98,153,154,155,157,164,192,198,199,202,206,208,260,261,262,263,265,],[-117,-120,-116,-119,-121,92,-112,-118,-71,-72,-116,-120,-113,-114,-115,-117,-117,-117,-116,-116,-118,-117,-117,-68,-67,-70,-69,-118,]),'MINUS':([35,36,38,40,41,42,43,86,89,91,97,98,153,154,155,157,164,192,198,199,202,206,208,260,261,262,263,265,],[-117,-120,-116,-119,-121,93,-112,-118,-71,-72,-116,-120,-113,-114,-115,-117,-117,-117,-116,-116,-118,-117,-117,-68,-67,-70,-69,-118,]),'RELOP':([35,36,37,38,39,40,41,42,43,86,89,91,96,97,98,149,151,152,153,154,155,157,158,163,164,165,192,193,197,198,199,200,202,206,207,208,209,260,261,262,263,265,363,372,],[-117,-120,90,-116,-107,-119,-121,-109,-112,-118,-71,-72,90,-116,-120,-108,-110,-111,-113,-114,-115,-117,90,90,-117,90,-117,90,90,-116,-116,90,-118,-117,90,-117,90,-68,-67,-70,-69,-118,90,90,]),'EQUALS':([61,89,91,104,169,170,260,261,262,263,],[103,-71,-72,160,222,223,-68,-67,-70,-69,]),'FX':([108,334,335,],[169,169,169,]),'FY':([108,334,335,],[170,170,170,]),'WHILE':([189,313,],[249,-125,]),'ELSE':([326,407,],[375,-93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lugstat':([0,],[1,]),'addmain':([4,],[5,]),'empty':([4,5,7,11,12,26,48,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,105,108,159,163,164,165,166,190,191,194,208,209,212,216,242,259,268,270,276,278,279,312,321,327,333,334,335,363,368,370,372,373,374,375,377,395,397,398,400,409,432,435,436,437,],[6,9,13,18,13,49,49,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,144,9,162,171,205,211,213,215,219,49,252,257,269,269,219,275,306,9,324,324,275,219,219,364,269,378,219,383,383,364,257,324,269,402,404,406,378,420,422,9,324,427,306,443,49,404,]),'lugstat2':([5,85,259,398,],[7,145,319,423,]),'vars':([5,85,194,259,368,398,],[8,8,256,8,256,8,]),'lugstat3':([7,12,],[11,19,]),'modules':([7,12,],[12,12,]),'vars1':([10,21,46,],[15,28,100,]),'mnv':([11,],[17,]),'asign2':([16,35,61,157,164,192,206,208,235,238,],[24,86,104,202,86,86,265,86,86,86,]),'block':([17,],[25,]),'tipo':([22,27,45,147,318,],[29,84,99,196,369,]),'expresion':([23,44,87,103,106,107,142,148,150,160,161,312,323,363,],[37,96,37,158,163,165,193,197,200,207,209,363,372,363,]),'varcte':([23,44,87,90,92,93,94,95,103,106,107,142,148,150,160,161,172,179,180,181,182,222,223,225,226,228,284,297,300,312,323,337,338,341,347,357,363,392,413,418,440,],[38,97,38,97,97,97,97,97,97,97,97,97,198,199,97,97,224,233,236,239,239,97,97,285,286,289,336,350,353,97,97,386,387,289,289,394,97,416,431,394,431,]),'exp':([23,44,87,90,92,93,103,106,107,142,148,150,160,161,222,223,312,323,363,],[39,39,39,149,151,152,39,39,39,39,39,39,39,39,282,283,39,39,39,]),'termino':([23,44,87,90,92,93,94,95,103,106,107,142,148,150,160,161,222,223,312,323,363,],[42,42,42,42,42,42,153,154,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'factor':([23,44,87,90,92,93,94,95,103,106,107,142,148,150,160,161,222,223,312,323,363,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'block2':([26,48,190,436,],[47,102,250,444,]),'estatuto':([26,48,190,327,377,436,],[48,48,48,377,377,48,]),'asign':([26,48,190,327,377,436,],[50,50,50,50,50,50,]),'cond':([26,48,190,327,377,411,436,],[51,51,51,51,51,429,51,]),'escrt':([26,48,190,327,377,436,],[52,52,52,52,52,52,]),'plot':([26,48,190,327,377,436,],[53,53,53,53,53,53,]),'count':([26,48,190,327,377,436,],[54,54,54,54,54,54,]),'countif':([26,48,190,327,377,436,],[55,55,55,55,55,55,]),'metodos':([26,48,190,327,377,436,],[56,56,56,56,56,56,]),'dwhile':([26,48,190,327,377,436,],[57,57,57,57,57,57,]),'readln':([26,48,190,327,377,436,],[58,58,58,58,58,58,]),'funccall':([26,48,103,190,327,377,436,],[59,59,159,59,59,59,59,]),'regreso':([26,48,190,327,377,436,],[60,60,60,60,60,60,]),'fe1':([67,],[111,]),'fe2':([68,],[113,]),'fe3':([69,],[115,]),'fe4':([70,],[117,]),'fe5':([71,],[119,]),'dmn1':([72,],[121,]),'dbrn1':([73,],[123,]),'dp1':([74,],[125,]),'tp1':([75,],[127,]),'tp2':([76,],[129,]),'tp3':([77,],[131,]),'tp4':([78,],[133,]),'tp5':([79,],[135,]),'tp6':([80,],[137,]),'wn1':([81,],[139,]),'mn1':([84,],[143,]),'fcn1':([105,],[161,]),'xyfunc':([108,334,335,],[167,382,384,]),'plot2':([108,409,],[168,426,]),'wblock':([139,],[189,]),'afcn1':([159,],[204,]),'cn1':([163,],[210,]),'en3':([164,],[212,]),'en1':([165,],[214,]),'escrt2':([166,212,278,279,333,],[217,272,332,333,381,]),'arrfun':([175,176,177,178,],[227,229,230,231,]),'kval':([179,],[232,]),'expfunc':([180,],[234,]),'expfunc2':([181,182,],[237,240,]),'mmmfunc':([183,184,185,186,187,],[241,244,245,246,247,]),'rn1':([191,],[251,]),'regnum1':([192,],[253,]),'regnum2':([193,],[254,]),'modules2':([194,368,],[255,397,]),'fcn2':([208,209,321,372,],[268,270,370,400,]),'en2':([216,276,],[274,331,]),'escrt3':([218,],[277,]),'datasetarr':([228,341,347,],[288,388,390,]),'mmmarray':([242,432,],[304,441,]),'libero':([242,432,],[305,305,]),'mn2':([255,],[317,]),'funccall2':([268,270,370,400,],[322,325,399,424,]),'ifblock':([271,405,],[326,425,]),'arrfun2':([294,],[346,]),'dwhileconds':([312,363,],[362,396,]),'ifblock2':([327,377,],[376,408,]),'datasetarr4':([357,418,],[393,433,]),'fcn3':([373,],[401,]),'cn2':([374,437,],[403,445,]),'cn3':([375,],[405,]),'arrfun3':([389,],[412,]),'wn2':([395,],[419,]),'mn3':([397,],[421,]),'datasetarr2':([413,440,],[430,447,]),'funblock':([421,],[435,]),'mn7':([435,],[442,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lugstat","S'",1,None,None,None),
  ('lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 mnv block','lugstat',8,'p_lugstat','LUGSTAT.py',251),
  ('addmain -> empty','addmain',1,'p_addmain','LUGSTAT.py',255),
  ('mnv -> empty','mnv',1,'p_mnv','LUGSTAT.py',265),
  ('lugstat2 -> vars','lugstat2',1,'p_lugstat2','LUGSTAT.py',270),
  ('lugstat2 -> empty','lugstat2',1,'p_lugstat2','LUGSTAT.py',271),
  ('lugstat3 -> modules','lugstat3',1,'p_lugstat3','LUGSTAT.py',276),
  ('lugstat3 -> modules lugstat3','lugstat3',2,'p_lugstat3','LUGSTAT.py',277),
  ('lugstat3 -> empty','lugstat3',1,'p_lugstat3','LUGSTAT.py',278),
  ('vars -> VAR vars1','vars',2,'p_vars','LUGSTAT.py',282),
  ('vars1 -> ID COMMA vars1','vars1',3,'p_vars1','LUGSTAT.py',621),
  ('vars1 -> ID COLON tipo SCOLON lugstat2','vars1',5,'p_vars1','LUGSTAT.py',622),
  ('vars1 -> ID LCOR NUMBER RCOR COLON tipo SCOLON lugstat2','vars1',8,'p_vars1','LUGSTAT.py',623),
  ('vars1 -> ID LCOR NUMBER RCOR COLON tipo SCOLON','vars1',7,'p_vars1','LUGSTAT.py',624),
  ('vars1 -> ID LCOR NUMBER RCOR LCOR NUMBER RCOR COLON tipo SCOLON lugstat2','vars1',11,'p_vars1','LUGSTAT.py',625),
  ('vars1 -> ID LCOR NUMBER RCOR LCOR NUMBER RCOR COLON tipo SCOLON','vars1',10,'p_vars1','LUGSTAT.py',626),
  ('vars1 -> ID asign2 COLON tipo SCOLON','vars1',5,'p_vars1','LUGSTAT.py',627),
  ('vars1 -> ID asign2 COMMA vars1','vars1',4,'p_vars1','LUGSTAT.py',628),
  ('savename -> empty','savename',1,'p_savename','LUGSTAT.py',661),
  ('modules -> FUNC ID COLON tipo mn1 OPAREN modules2 mn2 CPAREN modules2 mn3 funblock mn7','modules',13,'p_modules','LUGSTAT.py',665),
  ('mn1 -> empty','mn1',1,'p_mn1','LUGSTAT.py',670),
  ('mn7 -> empty','mn7',1,'p_mn7','LUGSTAT.py',709),
  ('mn2 -> <empty>','mn2',0,'p_mn2','LUGSTAT.py',728),
  ('mn3 -> empty','mn3',1,'p_mn3','LUGSTAT.py',742),
  ('funccall -> ID OPAREN fcn1 expresion fcn2 funccall2 CPAREN fcn3','funccall',8,'p_funccall','LUGSTAT.py',753),
  ('funccall -> ID OPAREN fcn1 ID fcn2 funccall2 CPAREN','funccall',7,'p_funccall','LUGSTAT.py',754),
  ('fcn1 -> empty','fcn1',1,'p_fcn1','LUGSTAT.py',758),
  ('fcn2 -> empty','fcn2',1,'p_fcn2','LUGSTAT.py',780),
  ('fcn3 -> empty','fcn3',1,'p_fcn3','LUGSTAT.py',806),
  ('funccall2 -> COMMA expresion fcn2 funccall2','funccall2',4,'p_funccall2','LUGSTAT.py',824),
  ('funccall2 -> ID fcn2 funccall2','funccall2',3,'p_funccall2','LUGSTAT.py',825),
  ('funccall2 -> empty','funccall2',1,'p_funccall2','LUGSTAT.py',826),
  ('modules2 -> vars','modules2',1,'p_modules2','LUGSTAT.py',831),
  ('modules2 -> empty','modules2',1,'p_modules2','LUGSTAT.py',832),
  ('funblock -> OBRACKET block2 CBRACKET','funblock',3,'p_funblock','LUGSTAT.py',837),
  ('block -> OBRACKET block2 CBRACKET','block',3,'p_block','LUGSTAT.py',841),
  ('block2 -> estatuto','block2',1,'p_block2','LUGSTAT.py',852),
  ('block2 -> estatuto block2','block2',2,'p_block2','LUGSTAT.py',853),
  ('block2 -> empty','block2',1,'p_block2','LUGSTAT.py',854),
  ('tipo -> INT','tipo',1,'p_tipo','LUGSTAT.py',858),
  ('tipo -> BOOL','tipo',1,'p_tipo','LUGSTAT.py',859),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','LUGSTAT.py',860),
  ('tipo -> STRING','tipo',1,'p_tipo','LUGSTAT.py',861),
  ('tipo -> CHAR','tipo',1,'p_tipo','LUGSTAT.py',862),
  ('estatuto -> asign','estatuto',1,'p_estatuto','LUGSTAT.py',868),
  ('estatuto -> cond','estatuto',1,'p_estatuto','LUGSTAT.py',869),
  ('estatuto -> escrt','estatuto',1,'p_estatuto','LUGSTAT.py',870),
  ('estatuto -> plot','estatuto',1,'p_estatuto','LUGSTAT.py',871),
  ('estatuto -> count','estatuto',1,'p_estatuto','LUGSTAT.py',872),
  ('estatuto -> countif','estatuto',1,'p_estatuto','LUGSTAT.py',873),
  ('estatuto -> metodos','estatuto',1,'p_estatuto','LUGSTAT.py',874),
  ('estatuto -> dwhile','estatuto',1,'p_estatuto','LUGSTAT.py',875),
  ('estatuto -> readln','estatuto',1,'p_estatuto','LUGSTAT.py',876),
  ('estatuto -> funccall','estatuto',1,'p_estatuto','LUGSTAT.py',877),
  ('estatuto -> regreso','estatuto',1,'p_estatuto','LUGSTAT.py',878),
  ('regreso -> RETURN OPAREN ID regnum1 CPAREN SCOLON','regreso',6,'p_regreso','LUGSTAT.py',882),
  ('regreso -> RETURN OPAREN expresion regnum2 CPAREN SCOLON','regreso',6,'p_regreso','LUGSTAT.py',883),
  ('regnum1 -> <empty>','regnum1',0,'p_regnum1','LUGSTAT.py',887),
  ('regnum2 -> <empty>','regnum2',0,'p_regnum2','LUGSTAT.py',904),
  ('afcn1 -> empty','afcn1',1,'p_afcn1','LUGSTAT.py',924),
  ('asign -> ID EQUALS expresion SCOLON','asign',4,'p_asign','LUGSTAT.py',929),
  ('asign -> ID EQUALS ID SCOLON','asign',4,'p_asign','LUGSTAT.py',930),
  ('asign -> ID EQUALS ID asign2 SCOLON','asign',5,'p_asign','LUGSTAT.py',931),
  ('asign -> ID asign2 EQUALS ID SCOLON','asign',5,'p_asign','LUGSTAT.py',932),
  ('asign -> ID asign2 EQUALS expresion SCOLON','asign',5,'p_asign','LUGSTAT.py',933),
  ('asign -> ID asign2 EQUALS ID asign2 SCOLON','asign',6,'p_asign','LUGSTAT.py',934),
  ('asign -> ID EQUALS funccall afcn1','asign',4,'p_asign','LUGSTAT.py',935),
  ('asign2 -> LCOR expresion RCOR LCOR varcte RCOR','asign2',6,'p_asign2','LUGSTAT.py',1046),
  ('asign2 -> LCOR expresion RCOR LCOR expresion RCOR','asign2',6,'p_asign2','LUGSTAT.py',1047),
  ('asign2 -> LCOR varcte RCOR LCOR expresion RCOR','asign2',6,'p_asign2','LUGSTAT.py',1048),
  ('asign2 -> LCOR varcte RCOR LCOR varcte RCOR','asign2',6,'p_asign2','LUGSTAT.py',1049),
  ('asign2 -> LCOR expresion RCOR','asign2',3,'p_asign2','LUGSTAT.py',1050),
  ('asign2 -> LCOR varcte RCOR','asign2',3,'p_asign2','LUGSTAT.py',1051),
  ('asign3 -> LCOR expresion RCOR','asign3',3,'p_asign3','LUGSTAT.py',1066),
  ('asign3 -> LCOR varcte RCOR','asign3',3,'p_asign3','LUGSTAT.py',1067),
  ('asign3 -> empty','asign3',1,'p_asign3','LUGSTAT.py',1068),
  ('escrt -> PRINT OPAREN ID en3 escrt2 CPAREN SCOLON','escrt',7,'p_escrt','LUGSTAT.py',1072),
  ('escrt -> PRINT OPAREN expresion en1 CPAREN SCOLON','escrt',6,'p_escrt','LUGSTAT.py',1073),
  ('escrt -> PRINT OPAREN STRING CPAREN en2 SCOLON','escrt',6,'p_escrt','LUGSTAT.py',1074),
  ('escrt -> PRINT OPAREN STRING escrt2 CPAREN en2 SCOLON','escrt',7,'p_escrt','LUGSTAT.py',1075),
  ('escrt2 -> COMMA escrt3','escrt2',2,'p_escrt2','LUGSTAT.py',1079),
  ('escrt2 -> empty','escrt2',1,'p_escrt2','LUGSTAT.py',1080),
  ('escrt3 -> ID escrt2','escrt3',2,'p_escrt3','LUGSTAT.py',1084),
  ('escrt3 -> ID','escrt3',1,'p_escrt3','LUGSTAT.py',1085),
  ('escrt3 -> STRING escrt2 escrt2','escrt3',3,'p_escrt3','LUGSTAT.py',1086),
  ('en1 -> empty','en1',1,'p_en1','LUGSTAT.py',1090),
  ('en2 -> empty','en2',1,'p_en2','LUGSTAT.py',1127),
  ('en3 -> empty','en3',1,'p_en3','LUGSTAT.py',1135),
  ('cond -> IF OPAREN expresion cn1 CPAREN ifblock SCOLON cn2','cond',8,'p_cond','LUGSTAT.py',1161),
  ('cond -> IF OPAREN expresion cn1 CPAREN ifblock ELSE cn3 ifblock SCOLON cn2','cond',11,'p_cond','LUGSTAT.py',1162),
  ('cn1 -> empty','cn1',1,'p_cn1','LUGSTAT.py',1166),
  ('cn2 -> empty','cn2',1,'p_cn2','LUGSTAT.py',1184),
  ('cn3 -> empty','cn3',1,'p_cn3','LUGSTAT.py',1191),
  ('ifblock -> OBRACKET ifblock2 CBRACKET','ifblock',3,'p_ifblock','LUGSTAT.py',1204),
  ('ifblock2 -> estatuto','ifblock2',1,'p_ifblock2','LUGSTAT.py',1208),
  ('ifblock2 -> estatuto ifblock2','ifblock2',2,'p_ifblock2','LUGSTAT.py',1209),
  ('ifblock2 -> empty','ifblock2',1,'p_ifblock2','LUGSTAT.py',1210),
  ('count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON','count',9,'p_count','LUGSTAT.py',1213),
  ('countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON','countif',11,'p_countif','LUGSTAT.py',1216),
  ('plot -> PLOT OPAREN xyfunc CPAREN SCOLON','plot',5,'p_plot','LUGSTAT.py',1219),
  ('plot -> PLOT OPAREN plot2 CPAREN SCOLON','plot',5,'p_plot','LUGSTAT.py',1220),
  ('plot2 -> LCOR varcte COMMA varcte RCOR','plot2',5,'p_plot2','LUGSTAT.py',1224),
  ('plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2','plot2',7,'p_plot2','LUGSTAT.py',1225),
  ('plot2 -> empty','plot2',1,'p_plot2','LUGSTAT.py',1226),
  ('xyfunc -> FX EQUALS exp SCOLON xyfunc','xyfunc',5,'p_xyfunc','LUGSTAT.py',1230),
  ('xyfunc -> FY EQUALS exp SCOLON xyfunc','xyfunc',5,'p_xyfunc','LUGSTAT.py',1231),
  ('xyfunc -> empty','xyfunc',1,'p_xyfunc','LUGSTAT.py',1232),
  ('expresion -> exp','expresion',1,'p_expresion','LUGSTAT.py',1236),
  ('expresion -> expresion RELOP exp','expresion',3,'p_expresion','LUGSTAT.py',1237),
  ('exp -> termino','exp',1,'p_exp','LUGSTAT.py',1306),
  ('exp -> termino PLUS exp','exp',3,'p_exp','LUGSTAT.py',1307),
  ('exp -> termino MINUS exp','exp',3,'p_exp','LUGSTAT.py',1308),
  ('termino -> factor','termino',1,'p_termino','LUGSTAT.py',1386),
  ('termino -> factor MULT termino','termino',3,'p_termino','LUGSTAT.py',1387),
  ('termino -> factor DIV termino','termino',3,'p_termino','LUGSTAT.py',1388),
  ('factor -> OPAREN expresion CPAREN','factor',3,'p_factor','LUGSTAT.py',1445),
  ('factor -> varcte','factor',1,'p_factor','LUGSTAT.py',1446),
  ('varcte -> ID','varcte',1,'p_varcte','LUGSTAT.py',1461),
  ('varcte -> ID asign2','varcte',2,'p_varcte','LUGSTAT.py',1462),
  ('varcte -> NUMERIC','varcte',1,'p_varcte','LUGSTAT.py',1463),
  ('varcte -> NUMBER','varcte',1,'p_varcte','LUGSTAT.py',1464),
  ('varcte -> LOGICAL','varcte',1,'p_varcte','LUGSTAT.py',1465),
  ('dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON','dwhile',9,'p_dwhile','LUGSTAT.py',1525),
  ('wn1 -> empty','wn1',1,'p_wn1','LUGSTAT.py',1528),
  ('wn2 -> empty','wn2',1,'p_wn2','LUGSTAT.py',1535),
  ('wblock -> OBRACKET block2 CBRACKET','wblock',3,'p_wblock','LUGSTAT.py',1550),
  ('dwhileconds -> expresion dwhileconds','dwhileconds',2,'p_dwhileconds','LUGSTAT.py',1555),
  ('dwhileconds -> empty','dwhileconds',1,'p_dwhileconds','LUGSTAT.py',1556),
  ('readln -> READ OPAREN ID rn1 CPAREN SCOLON','readln',6,'p_readln','LUGSTAT.py',1560),
  ('rn1 -> empty','rn1',1,'p_rn1','LUGSTAT.py',1563),
  ('metodos -> MEAN fe1 OPAREN arrfun CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1586),
  ('metodos -> MEDIAN fe2 OPAREN arrfun CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1587),
  ('metodos -> MODE fe3 OPAREN arrfun CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1588),
  ('metodos -> STDV fe4 OPAREN arrfun CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1589),
  ('metodos -> KMEANS fe5 OPAREN kval CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1590),
  ('metodos -> DERL dmn1 OPAREN expfunc CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1591),
  ('metodos -> DBERN dbrn1 OPAREN expfunc2 CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1592),
  ('metodos -> DPOI dp1 OPAREN expfunc2 CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1593),
  ('metodos -> TRANSPOSE tp1 OPAREN mmmfunc CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1594),
  ('metodos -> INVERSE tp2 OPAREN mmmfunc CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1595),
  ('metodos -> ROTATE tp3 OPAREN mmmfunc CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1596),
  ('metodos -> REF tp4 OPAREN mmmfunc CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1597),
  ('metodos -> RREF tp5 OPAREN mmmfunc CPAREN SCOLON','metodos',6,'p_metodos','LUGSTAT.py',1598),
  ('metodos -> EULER tp6 OPAREN CPAREN SCOLON','metodos',5,'p_metodos','LUGSTAT.py',1599),
  ('fe1 -> empty','fe1',1,'p_fe1','LUGSTAT.py',1603),
  ('fe2 -> empty','fe2',1,'p_fe2','LUGSTAT.py',1612),
  ('fe3 -> empty','fe3',1,'p_fe3','LUGSTAT.py',1621),
  ('fe4 -> empty','fe4',1,'p_fe4','LUGSTAT.py',1630),
  ('fe5 -> empty','fe5',1,'p_fe5','LUGSTAT.py',1639),
  ('kval -> varcte COMMA arrfun2 COMMA arrfun3','kval',5,'p_kval','LUGSTAT.py',1649),
  ('arrfun -> LCOR datasetarr RCOR','arrfun',3,'p_arrfun','LUGSTAT.py',1654),
  ('arrfun2 -> LCOR datasetarr RCOR','arrfun2',3,'p_arrfun2','LUGSTAT.py',1659),
  ('arrfun3 -> LCOR datasetarr2 RCOR','arrfun3',3,'p_arrfun3','LUGSTAT.py',1663),
  ('datasetarr -> varcte','datasetarr',1,'p_datasetarr','LUGSTAT.py',1667),
  ('datasetarr -> varcte COMMA datasetarr','datasetarr',3,'p_datasetarr','LUGSTAT.py',1668),
  ('datasetarr2 -> varcte','datasetarr2',1,'p_datasetarr2','LUGSTAT.py',1674),
  ('datasetarr2 -> varcte COMMA datasetarr2','datasetarr2',3,'p_datasetarr2','LUGSTAT.py',1675),
  ('dmn1 -> empty','dmn1',1,'p_dmn1','LUGSTAT.py',1681),
  ('dbrn1 -> empty','dbrn1',1,'p_dbrn1','LUGSTAT.py',1689),
  ('dp1 -> empty','dp1',1,'p_dp1','LUGSTAT.py',1697),
  ('tp1 -> empty','tp1',1,'p_tp1','LUGSTAT.py',1705),
  ('tp2 -> empty','tp2',1,'p_tp2','LUGSTAT.py',1714),
  ('tp3 -> empty','tp3',1,'p_tp3','LUGSTAT.py',1723),
  ('tp4 -> empty','tp4',1,'p_tp4','LUGSTAT.py',1732),
  ('tp5 -> empty','tp5',1,'p_tp5','LUGSTAT.py',1741),
  ('tp6 -> empty','tp6',1,'p_tp6','LUGSTAT.py',1750),
  ('expfunc -> ID COMMA ID COMMA ID','expfunc',5,'p_expfunc','LUGSTAT.py',1758),
  ('expfunc -> varcte COMMA varcte COMMA varcte','expfunc',5,'p_expfunc','LUGSTAT.py',1759),
  ('expfunc2 -> ID COMMA ID','expfunc2',3,'p_expfunc2','LUGSTAT.py',1768),
  ('expfunc2 -> varcte COMMA varcte','expfunc2',3,'p_expfunc2','LUGSTAT.py',1769),
  ('mmmfunc -> LCOR RCOR','mmmfunc',2,'p_mmmfunc','LUGSTAT.py',1777),
  ('mmmfunc -> LCOR mmmarray RCOR','mmmfunc',3,'p_mmmfunc','LUGSTAT.py',1778),
  ('mmmfunc -> ID','mmmfunc',1,'p_mmmfunc','LUGSTAT.py',1779),
  ('mmmarray -> libero LCOR datasetarr4 RCOR COMMA mmmarray','mmmarray',6,'p_mmmarray','LUGSTAT.py',1787),
  ('mmmarray -> libero LCOR datasetarr4 RCOR','mmmarray',4,'p_mmmarray','LUGSTAT.py',1788),
  ('libero -> empty','libero',1,'p_libero','LUGSTAT.py',1793),
  ('datasetarr4 -> varcte','datasetarr4',1,'p_datasetarr4','LUGSTAT.py',1797),
  ('datasetarr4 -> varcte COMMA datasetarr4','datasetarr4',3,'p_datasetarr4','LUGSTAT.py',1798),
  ('empty -> <empty>','empty',0,'p_empty','LUGSTAT.py',1816),
]
