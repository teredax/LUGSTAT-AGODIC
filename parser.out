Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CHARACTER
    COMMENT
    CTED
    CTEI
    DIFF
    EQ
    GRE
    GREATEQ
    GREATERTHAN
    INTEGER
    LESSEQ
    LESSTHAN
    LOGICAL
    OR
    PER
    QUOTE
    TIPO

Grammar

Rule 0     S' -> lugstat
Rule 1     lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block
Rule 2     addmain -> empty
Rule 3     lugstat2 -> vars
Rule 4     lugstat2 -> empty
Rule 5     lugstat3 -> modules
Rule 6     lugstat3 -> modules lugstat3
Rule 7     lugstat3 -> empty
Rule 8     vars -> VAR vars1
Rule 9     vars1 -> ID COMMA vars1
Rule 10    vars1 -> ID COLON tipo SCOLON lugstat2
Rule 11    vars1 -> ID asign2 COLON tipo SCOLON
Rule 12    vars1 -> ID asign2 COMMA vars1
Rule 13    savename -> empty
Rule 14    modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
Rule 15    addfunction -> empty
Rule 16    modules2 -> vars
Rule 17    modules2 -> empty
Rule 18    block -> OBRACKET block2 CBRACKET
Rule 19    block2 -> estatuto
Rule 20    block2 -> estatuto block2
Rule 21    block2 -> empty
Rule 22    tipo -> INT
Rule 23    tipo -> BOOL
Rule 24    tipo -> DOUBLE
Rule 25    tipo -> STRING
Rule 26    tipo -> CHAR
Rule 27    estatuto -> asign
Rule 28    estatuto -> cond
Rule 29    estatuto -> escrt
Rule 30    estatuto -> plot
Rule 31    estatuto -> count
Rule 32    estatuto -> countif
Rule 33    estatuto -> metodos
Rule 34    asign -> ID EQUALS expresion SCOLON
Rule 35    asign -> ID EQUALS ID SCOLON
Rule 36    asign -> ID EQUALS ID asign2 SCOLON
Rule 37    asign -> ID asign2 EQUALS ID SCOLON
Rule 38    asign -> ID asign2 EQUALS expresion SCOLON
Rule 39    asign -> ID asign2 EQUALS ID asign2 SCOLON
Rule 40    asign2 -> LCOR expresion RCOR asign3
Rule 41    asign2 -> LCOR varcte RCOR asign3
Rule 42    asign3 -> LCOR expresion RCOR
Rule 43    asign3 -> LCOR varcte RCOR
Rule 44    asign3 -> empty
Rule 45    escrt -> PRINT OPAREN expresion CPAREN SCOLON
Rule 46    escrt -> PRINT OPAREN CPAREN SCOLON
Rule 47    escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON
Rule 48    escrt -> PRINT OPAREN STRING CPAREN SCOLON
Rule 49    escrt2 -> COMMA escrt3
Rule 50    escrt2 -> empty
Rule 51    escrt3 -> ID escrt2
Rule 52    escrt3 -> ID
Rule 53    escrt3 -> STRING escrt2 escrt2
Rule 54    cond -> IF OPAREN expresion CPAREN block SCOLON
Rule 55    cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON
Rule 56    count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
Rule 57    countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
Rule 58    plot -> PLOT OPAREN xyfunc CPAREN SCOLON
Rule 59    plot -> PLOT OPAREN plot2 CPAREN SCOLON
Rule 60    plot2 -> LCOR varcte COMMA varcte RCOR
Rule 61    plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2
Rule 62    plot2 -> empty
Rule 63    xyfunc -> FX EQUALS exp SCOLON xyfunc
Rule 64    xyfunc -> FY EQUALS exp SCOLON xyfunc
Rule 65    xyfunc -> empty
Rule 66    expresion -> exp
Rule 67    expresion -> expresion RELOP exp
Rule 68    exp -> termino
Rule 69    exp -> termino PLUS exp
Rule 70    exp -> termino MINUS exp
Rule 71    termino -> factor
Rule 72    termino -> factor MULT termino
Rule 73    termino -> factor DIV termino
Rule 74    factor -> OPAREN expresion CPAREN
Rule 75    factor -> varcte
Rule 76    varcte -> ID
Rule 77    varcte -> ID asign2
Rule 78    varcte -> NUMERIC
Rule 79    varcte -> NUMBER
Rule 80    metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON
Rule 81    metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON
Rule 82    metodos -> MODE OPAREN mmmfunc CPAREN SCOLON
Rule 83    metodos -> STDV OPAREN mmmfunc CPAREN SCOLON
Rule 84    metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
Rule 85    metodos -> DERL OPAREN expfunc CPAREN SCOLON
Rule 86    metodos -> DBERN OPAREN expfunc CPAREN SCOLON
Rule 87    metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON
Rule 88    metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
Rule 89    metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON
Rule 90    metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON
Rule 91    metodos -> REF OPAREN mmmfunc CPAREN SCOLON
Rule 92    metodos -> RREF OPAREN mmmfunc CPAREN SCOLON
Rule 93    metodos -> MONT OPAREN mmmfunc CPAREN SCOLON
Rule 94    expfunc -> ID COMMA ID COMMA ID
Rule 95    expfunc -> varcte COMMA varcte COMMA varcte
Rule 96    expfunc2 -> ID COMMA ID
Rule 97    expfunc2 -> varcte COMMA varcte
Rule 98    mmmfunc -> ID
Rule 99    mmmfunc -> OBRACKET mmmarray CBRACKET
Rule 100   mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc
Rule 101   mmmfunc -> empty
Rule 102   mmmarray -> varcte
Rule 103   mmmarray -> varcte COMMA mmmarray
Rule 104   mmmarray -> empty
Rule 105   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOL                 : 23
CBRACKET             : 18 99 100
CHAR                 : 26
CHARACTER            : 
COLON                : 10 11 14
COMMA                : 9 12 49 56 56 57 57 57 60 61 61 84 94 94 95 95 96 97 100 103
COMMENT              : 
COUNT                : 56
COUNTIF              : 57
CPAREN               : 14 45 46 47 48 54 55 56 57 58 59 74 80 81 82 83 84 85 86 87 88 89 90 91 92 93
CTED                 : 
CTEI                 : 
DBERN                : 86
DERL                 : 85
DIFF                 : 
DIV                  : 73
DOUBLE               : 24
DPOI                 : 87
ELSE                 : 55
EQ                   : 
EQUALS               : 34 35 36 37 38 39 63 64
FUNC                 : 14
FX                   : 63
FY                   : 64
GRE                  : 
GREATEQ              : 
GREATERTHAN          : 
ID                   : 1 9 10 11 12 14 34 35 35 36 36 37 37 38 39 39 47 51 52 56 57 76 77 94 94 94 96 96 98
IF                   : 54 55
INT                  : 22
INTEGER              : 
INVERSE              : 89
KMEANS               : 84
LCOR                 : 40 41 42 43 60 61
LESSEQ               : 
LESSTHAN             : 
LOGICAL              : 
LUGSTAT              : 1
MEAN                 : 80
MEDIAN               : 81
MINUS                : 70
MODE                 : 82
MONT                 : 93
MULT                 : 72
NUMBER               : 79
NUMERIC              : 78
OBRACKET             : 18 99 100
OPAREN               : 14 45 46 47 48 54 55 56 57 58 59 74 80 81 82 83 84 85 86 87 88 89 90 91 92 93
OR                   : 
PER                  : 
PLOT                 : 58 59
PLUS                 : 69
PRINT                : 45 46 47 48
QUOTE                : 
RCOR                 : 40 41 42 43 60 61
REF                  : 91
RELOP                : 67
ROTATE               : 90
RREF                 : 92
SCOLON               : 1 10 11 34 35 36 37 38 39 45 46 47 48 54 55 56 57 58 59 63 64 80 81 82 83 84 85 86 87 88 89 90 91 92 93
STDV                 : 83
STRING               : 25 48 53
TIPO                 : 
TRANSPOSE            : 88
VAR                  : 8
error                : 

Nonterminals, with rules where they appear

addfunction          : 14
addmain              : 1
asign                : 27
asign2               : 11 12 36 37 38 39 39 77
asign3               : 40 41
block                : 1 14 54 55 55
block2               : 18 20
cond                 : 28 57
count                : 31
countif              : 32
empty                : 2 4 7 13 15 17 21 44 50 62 65 101 104
escrt                : 29
escrt2               : 47 51 53 53
escrt3               : 49
estatuto             : 19 20
exp                  : 63 64 66 67 69 70
expfunc              : 85 86
expfunc2             : 87
expresion            : 34 38 40 42 45 54 55 67 74
factor               : 71 72 73
lugstat              : 0
lugstat2             : 1 10
lugstat3             : 1 6
metodos              : 33
mmmarray             : 99 100 103
mmmfunc              : 80 81 82 83 84 88 89 90 91 92 93 100
modules              : 5 6
modules2             : 14 14
plot                 : 30
plot2                : 59 61
savename             : 
termino              : 68 69 70 72 73
tipo                 : 10 11 14
varcte               : 41 43 56 56 57 57 60 60 61 61 75 84 95 95 95 97 97 102 103
vars                 : 3 16
vars1                : 8 9 12
xyfunc               : 58 63 64

Parsing method: LALR

state 0

    (0) S' -> . lugstat
    (1) lugstat -> . LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block

    LUGSTAT         shift and go to state 2

    lugstat                        shift and go to state 1

state 1

    (0) S' -> lugstat .



state 2

    (1) lugstat -> LUGSTAT . ID SCOLON addmain lugstat2 lugstat3 block

    ID              shift and go to state 3


state 3

    (1) lugstat -> LUGSTAT ID . SCOLON addmain lugstat2 lugstat3 block

    SCOLON          shift and go to state 4


state 4

    (1) lugstat -> LUGSTAT ID SCOLON . addmain lugstat2 lugstat3 block
    (2) addmain -> . empty
    (105) empty -> .

    VAR             reduce using rule 105 (empty -> .)
    FUNC            reduce using rule 105 (empty -> .)
    OBRACKET        reduce using rule 105 (empty -> .)

    addmain                        shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) lugstat -> LUGSTAT ID SCOLON addmain . lugstat2 lugstat3 block
    (3) lugstat2 -> . vars
    (4) lugstat2 -> . empty
    (8) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 10
    FUNC            reduce using rule 105 (empty -> .)
    OBRACKET        reduce using rule 105 (empty -> .)

    lugstat2                       shift and go to state 7
    vars                           shift and go to state 8
    empty                          shift and go to state 9

state 6

    (2) addmain -> empty .

    VAR             reduce using rule 2 (addmain -> empty .)
    FUNC            reduce using rule 2 (addmain -> empty .)
    OBRACKET        reduce using rule 2 (addmain -> empty .)


state 7

    (1) lugstat -> LUGSTAT ID SCOLON addmain lugstat2 . lugstat3 block
    (5) lugstat3 -> . modules
    (6) lugstat3 -> . modules lugstat3
    (7) lugstat3 -> . empty
    (14) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (105) empty -> .

    FUNC            shift and go to state 14
    OBRACKET        reduce using rule 105 (empty -> .)

    lugstat3                       shift and go to state 11
    modules                        shift and go to state 12
    empty                          shift and go to state 13

state 8

    (3) lugstat2 -> vars .

    FUNC            reduce using rule 3 (lugstat2 -> vars .)
    OBRACKET        reduce using rule 3 (lugstat2 -> vars .)
    CPAREN          reduce using rule 3 (lugstat2 -> vars .)


state 9

    (4) lugstat2 -> empty .

    FUNC            reduce using rule 4 (lugstat2 -> empty .)
    OBRACKET        reduce using rule 4 (lugstat2 -> empty .)
    CPAREN          reduce using rule 4 (lugstat2 -> empty .)


state 10

    (8) vars -> VAR . vars1
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID COLON tipo SCOLON lugstat2
    (11) vars1 -> . ID asign2 COLON tipo SCOLON
    (12) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 16

    vars1                          shift and go to state 15

state 11

    (1) lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 . block
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 17

state 12

    (5) lugstat3 -> modules .
    (6) lugstat3 -> modules . lugstat3
    (5) lugstat3 -> . modules
    (6) lugstat3 -> . modules lugstat3
    (7) lugstat3 -> . empty
    (14) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (105) empty -> .

  ! reduce/reduce conflict for OBRACKET resolved using rule 5 (lugstat3 -> modules .)
    OBRACKET        reduce using rule 5 (lugstat3 -> modules .)
    FUNC            shift and go to state 14

  ! OBRACKET        [ reduce using rule 105 (empty -> .) ]

    modules                        shift and go to state 12
    lugstat3                       shift and go to state 19
    empty                          shift and go to state 13

state 13

    (7) lugstat3 -> empty .

    OBRACKET        reduce using rule 7 (lugstat3 -> empty .)


state 14

    (14) modules -> FUNC . ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    ID              shift and go to state 20


state 15

    (8) vars -> VAR vars1 .

    FUNC            reduce using rule 8 (vars -> VAR vars1 .)
    OBRACKET        reduce using rule 8 (vars -> VAR vars1 .)
    CPAREN          reduce using rule 8 (vars -> VAR vars1 .)


state 16

    (9) vars1 -> ID . COMMA vars1
    (10) vars1 -> ID . COLON tipo SCOLON lugstat2
    (11) vars1 -> ID . asign2 COLON tipo SCOLON
    (12) vars1 -> ID . asign2 COMMA vars1
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

    COMMA           shift and go to state 21
    COLON           shift and go to state 22
    LCOR            shift and go to state 24

    asign2                         shift and go to state 23

state 17

    (1) lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block .

    $end            reduce using rule 1 (lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block .)


state 18

    (18) block -> OBRACKET . block2 CBRACKET
    (19) block2 -> . estatuto
    (20) block2 -> . estatuto block2
    (21) block2 -> . empty
    (27) estatuto -> . asign
    (28) estatuto -> . cond
    (29) estatuto -> . escrt
    (30) estatuto -> . plot
    (31) estatuto -> . count
    (32) estatuto -> . countif
    (33) estatuto -> . metodos
    (105) empty -> .
    (34) asign -> . ID EQUALS expresion SCOLON
    (35) asign -> . ID EQUALS ID SCOLON
    (36) asign -> . ID EQUALS ID asign2 SCOLON
    (37) asign -> . ID asign2 EQUALS ID SCOLON
    (38) asign -> . ID asign2 EQUALS expresion SCOLON
    (39) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (54) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (55) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (45) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (46) escrt -> . PRINT OPAREN CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (48) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (58) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (59) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (56) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (57) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (80) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (81) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (84) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (85) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (86) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (87) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (88) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (89) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

    CBRACKET        reduce using rule 105 (empty -> .)
    ID              shift and go to state 35
    IF              shift and go to state 36
    PRINT           shift and go to state 37
    PLOT            shift and go to state 38
    COUNT           shift and go to state 39
    COUNTIF         shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STDV            shift and go to state 44
    KMEANS          shift and go to state 45
    DERL            shift and go to state 46
    DBERN           shift and go to state 47
    DPOI            shift and go to state 48
    TRANSPOSE       shift and go to state 49
    INVERSE         shift and go to state 50
    ROTATE          shift and go to state 51
    REF             shift and go to state 52
    RREF            shift and go to state 53
    MONT            shift and go to state 54

    block2                         shift and go to state 25
    estatuto                       shift and go to state 26
    empty                          shift and go to state 27
    asign                          shift and go to state 28
    cond                           shift and go to state 29
    escrt                          shift and go to state 30
    plot                           shift and go to state 31
    count                          shift and go to state 32
    countif                        shift and go to state 33
    metodos                        shift and go to state 34

state 19

    (6) lugstat3 -> modules lugstat3 .

    OBRACKET        reduce using rule 6 (lugstat3 -> modules lugstat3 .)


state 20

    (14) modules -> FUNC ID . COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    COLON           shift and go to state 55


state 21

    (9) vars1 -> ID COMMA . vars1
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID COLON tipo SCOLON lugstat2
    (11) vars1 -> . ID asign2 COLON tipo SCOLON
    (12) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 16

    vars1                          shift and go to state 56

state 22

    (10) vars1 -> ID COLON . tipo SCOLON lugstat2
    (22) tipo -> . INT
    (23) tipo -> . BOOL
    (24) tipo -> . DOUBLE
    (25) tipo -> . STRING
    (26) tipo -> . CHAR

    INT             shift and go to state 58
    BOOL            shift and go to state 59
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    tipo                           shift and go to state 57

state 23

    (11) vars1 -> ID asign2 . COLON tipo SCOLON
    (12) vars1 -> ID asign2 . COMMA vars1

    COLON           shift and go to state 63
    COMMA           shift and go to state 64


state 24

    (40) asign2 -> LCOR . expresion RCOR asign3
    (41) asign2 -> LCOR . varcte RCOR asign3
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70
    OPAREN          shift and go to state 73

    expresion                      shift and go to state 65
    varcte                         shift and go to state 66
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72

state 25

    (18) block -> OBRACKET block2 . CBRACKET

    CBRACKET        shift and go to state 74


state 26

    (19) block2 -> estatuto .
    (20) block2 -> estatuto . block2
    (19) block2 -> . estatuto
    (20) block2 -> . estatuto block2
    (21) block2 -> . empty
    (27) estatuto -> . asign
    (28) estatuto -> . cond
    (29) estatuto -> . escrt
    (30) estatuto -> . plot
    (31) estatuto -> . count
    (32) estatuto -> . countif
    (33) estatuto -> . metodos
    (105) empty -> .
    (34) asign -> . ID EQUALS expresion SCOLON
    (35) asign -> . ID EQUALS ID SCOLON
    (36) asign -> . ID EQUALS ID asign2 SCOLON
    (37) asign -> . ID asign2 EQUALS ID SCOLON
    (38) asign -> . ID asign2 EQUALS expresion SCOLON
    (39) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (54) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (55) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (45) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (46) escrt -> . PRINT OPAREN CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (48) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (58) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (59) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (56) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (57) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (80) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (81) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (84) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (85) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (86) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (87) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (88) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (89) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

  ! reduce/reduce conflict for CBRACKET resolved using rule 19 (block2 -> estatuto .)
    CBRACKET        reduce using rule 19 (block2 -> estatuto .)
    ID              shift and go to state 35
    IF              shift and go to state 36
    PRINT           shift and go to state 37
    PLOT            shift and go to state 38
    COUNT           shift and go to state 39
    COUNTIF         shift and go to state 40
    MEAN            shift and go to state 41
    MEDIAN          shift and go to state 42
    MODE            shift and go to state 43
    STDV            shift and go to state 44
    KMEANS          shift and go to state 45
    DERL            shift and go to state 46
    DBERN           shift and go to state 47
    DPOI            shift and go to state 48
    TRANSPOSE       shift and go to state 49
    INVERSE         shift and go to state 50
    ROTATE          shift and go to state 51
    REF             shift and go to state 52
    RREF            shift and go to state 53
    MONT            shift and go to state 54

  ! CBRACKET        [ reduce using rule 105 (empty -> .) ]

    estatuto                       shift and go to state 26
    block2                         shift and go to state 75
    empty                          shift and go to state 27
    asign                          shift and go to state 28
    cond                           shift and go to state 29
    escrt                          shift and go to state 30
    plot                           shift and go to state 31
    count                          shift and go to state 32
    countif                        shift and go to state 33
    metodos                        shift and go to state 34

state 27

    (21) block2 -> empty .

    CBRACKET        reduce using rule 21 (block2 -> empty .)


state 28

    (27) estatuto -> asign .

    ID              reduce using rule 27 (estatuto -> asign .)
    IF              reduce using rule 27 (estatuto -> asign .)
    PRINT           reduce using rule 27 (estatuto -> asign .)
    PLOT            reduce using rule 27 (estatuto -> asign .)
    COUNT           reduce using rule 27 (estatuto -> asign .)
    COUNTIF         reduce using rule 27 (estatuto -> asign .)
    MEAN            reduce using rule 27 (estatuto -> asign .)
    MEDIAN          reduce using rule 27 (estatuto -> asign .)
    MODE            reduce using rule 27 (estatuto -> asign .)
    STDV            reduce using rule 27 (estatuto -> asign .)
    KMEANS          reduce using rule 27 (estatuto -> asign .)
    DERL            reduce using rule 27 (estatuto -> asign .)
    DBERN           reduce using rule 27 (estatuto -> asign .)
    DPOI            reduce using rule 27 (estatuto -> asign .)
    TRANSPOSE       reduce using rule 27 (estatuto -> asign .)
    INVERSE         reduce using rule 27 (estatuto -> asign .)
    ROTATE          reduce using rule 27 (estatuto -> asign .)
    REF             reduce using rule 27 (estatuto -> asign .)
    RREF            reduce using rule 27 (estatuto -> asign .)
    MONT            reduce using rule 27 (estatuto -> asign .)
    CBRACKET        reduce using rule 27 (estatuto -> asign .)


state 29

    (28) estatuto -> cond .

    ID              reduce using rule 28 (estatuto -> cond .)
    IF              reduce using rule 28 (estatuto -> cond .)
    PRINT           reduce using rule 28 (estatuto -> cond .)
    PLOT            reduce using rule 28 (estatuto -> cond .)
    COUNT           reduce using rule 28 (estatuto -> cond .)
    COUNTIF         reduce using rule 28 (estatuto -> cond .)
    MEAN            reduce using rule 28 (estatuto -> cond .)
    MEDIAN          reduce using rule 28 (estatuto -> cond .)
    MODE            reduce using rule 28 (estatuto -> cond .)
    STDV            reduce using rule 28 (estatuto -> cond .)
    KMEANS          reduce using rule 28 (estatuto -> cond .)
    DERL            reduce using rule 28 (estatuto -> cond .)
    DBERN           reduce using rule 28 (estatuto -> cond .)
    DPOI            reduce using rule 28 (estatuto -> cond .)
    TRANSPOSE       reduce using rule 28 (estatuto -> cond .)
    INVERSE         reduce using rule 28 (estatuto -> cond .)
    ROTATE          reduce using rule 28 (estatuto -> cond .)
    REF             reduce using rule 28 (estatuto -> cond .)
    RREF            reduce using rule 28 (estatuto -> cond .)
    MONT            reduce using rule 28 (estatuto -> cond .)
    CBRACKET        reduce using rule 28 (estatuto -> cond .)


state 30

    (29) estatuto -> escrt .

    ID              reduce using rule 29 (estatuto -> escrt .)
    IF              reduce using rule 29 (estatuto -> escrt .)
    PRINT           reduce using rule 29 (estatuto -> escrt .)
    PLOT            reduce using rule 29 (estatuto -> escrt .)
    COUNT           reduce using rule 29 (estatuto -> escrt .)
    COUNTIF         reduce using rule 29 (estatuto -> escrt .)
    MEAN            reduce using rule 29 (estatuto -> escrt .)
    MEDIAN          reduce using rule 29 (estatuto -> escrt .)
    MODE            reduce using rule 29 (estatuto -> escrt .)
    STDV            reduce using rule 29 (estatuto -> escrt .)
    KMEANS          reduce using rule 29 (estatuto -> escrt .)
    DERL            reduce using rule 29 (estatuto -> escrt .)
    DBERN           reduce using rule 29 (estatuto -> escrt .)
    DPOI            reduce using rule 29 (estatuto -> escrt .)
    TRANSPOSE       reduce using rule 29 (estatuto -> escrt .)
    INVERSE         reduce using rule 29 (estatuto -> escrt .)
    ROTATE          reduce using rule 29 (estatuto -> escrt .)
    REF             reduce using rule 29 (estatuto -> escrt .)
    RREF            reduce using rule 29 (estatuto -> escrt .)
    MONT            reduce using rule 29 (estatuto -> escrt .)
    CBRACKET        reduce using rule 29 (estatuto -> escrt .)


state 31

    (30) estatuto -> plot .

    ID              reduce using rule 30 (estatuto -> plot .)
    IF              reduce using rule 30 (estatuto -> plot .)
    PRINT           reduce using rule 30 (estatuto -> plot .)
    PLOT            reduce using rule 30 (estatuto -> plot .)
    COUNT           reduce using rule 30 (estatuto -> plot .)
    COUNTIF         reduce using rule 30 (estatuto -> plot .)
    MEAN            reduce using rule 30 (estatuto -> plot .)
    MEDIAN          reduce using rule 30 (estatuto -> plot .)
    MODE            reduce using rule 30 (estatuto -> plot .)
    STDV            reduce using rule 30 (estatuto -> plot .)
    KMEANS          reduce using rule 30 (estatuto -> plot .)
    DERL            reduce using rule 30 (estatuto -> plot .)
    DBERN           reduce using rule 30 (estatuto -> plot .)
    DPOI            reduce using rule 30 (estatuto -> plot .)
    TRANSPOSE       reduce using rule 30 (estatuto -> plot .)
    INVERSE         reduce using rule 30 (estatuto -> plot .)
    ROTATE          reduce using rule 30 (estatuto -> plot .)
    REF             reduce using rule 30 (estatuto -> plot .)
    RREF            reduce using rule 30 (estatuto -> plot .)
    MONT            reduce using rule 30 (estatuto -> plot .)
    CBRACKET        reduce using rule 30 (estatuto -> plot .)


state 32

    (31) estatuto -> count .

    ID              reduce using rule 31 (estatuto -> count .)
    IF              reduce using rule 31 (estatuto -> count .)
    PRINT           reduce using rule 31 (estatuto -> count .)
    PLOT            reduce using rule 31 (estatuto -> count .)
    COUNT           reduce using rule 31 (estatuto -> count .)
    COUNTIF         reduce using rule 31 (estatuto -> count .)
    MEAN            reduce using rule 31 (estatuto -> count .)
    MEDIAN          reduce using rule 31 (estatuto -> count .)
    MODE            reduce using rule 31 (estatuto -> count .)
    STDV            reduce using rule 31 (estatuto -> count .)
    KMEANS          reduce using rule 31 (estatuto -> count .)
    DERL            reduce using rule 31 (estatuto -> count .)
    DBERN           reduce using rule 31 (estatuto -> count .)
    DPOI            reduce using rule 31 (estatuto -> count .)
    TRANSPOSE       reduce using rule 31 (estatuto -> count .)
    INVERSE         reduce using rule 31 (estatuto -> count .)
    ROTATE          reduce using rule 31 (estatuto -> count .)
    REF             reduce using rule 31 (estatuto -> count .)
    RREF            reduce using rule 31 (estatuto -> count .)
    MONT            reduce using rule 31 (estatuto -> count .)
    CBRACKET        reduce using rule 31 (estatuto -> count .)


state 33

    (32) estatuto -> countif .

    ID              reduce using rule 32 (estatuto -> countif .)
    IF              reduce using rule 32 (estatuto -> countif .)
    PRINT           reduce using rule 32 (estatuto -> countif .)
    PLOT            reduce using rule 32 (estatuto -> countif .)
    COUNT           reduce using rule 32 (estatuto -> countif .)
    COUNTIF         reduce using rule 32 (estatuto -> countif .)
    MEAN            reduce using rule 32 (estatuto -> countif .)
    MEDIAN          reduce using rule 32 (estatuto -> countif .)
    MODE            reduce using rule 32 (estatuto -> countif .)
    STDV            reduce using rule 32 (estatuto -> countif .)
    KMEANS          reduce using rule 32 (estatuto -> countif .)
    DERL            reduce using rule 32 (estatuto -> countif .)
    DBERN           reduce using rule 32 (estatuto -> countif .)
    DPOI            reduce using rule 32 (estatuto -> countif .)
    TRANSPOSE       reduce using rule 32 (estatuto -> countif .)
    INVERSE         reduce using rule 32 (estatuto -> countif .)
    ROTATE          reduce using rule 32 (estatuto -> countif .)
    REF             reduce using rule 32 (estatuto -> countif .)
    RREF            reduce using rule 32 (estatuto -> countif .)
    MONT            reduce using rule 32 (estatuto -> countif .)
    CBRACKET        reduce using rule 32 (estatuto -> countif .)


state 34

    (33) estatuto -> metodos .

    ID              reduce using rule 33 (estatuto -> metodos .)
    IF              reduce using rule 33 (estatuto -> metodos .)
    PRINT           reduce using rule 33 (estatuto -> metodos .)
    PLOT            reduce using rule 33 (estatuto -> metodos .)
    COUNT           reduce using rule 33 (estatuto -> metodos .)
    COUNTIF         reduce using rule 33 (estatuto -> metodos .)
    MEAN            reduce using rule 33 (estatuto -> metodos .)
    MEDIAN          reduce using rule 33 (estatuto -> metodos .)
    MODE            reduce using rule 33 (estatuto -> metodos .)
    STDV            reduce using rule 33 (estatuto -> metodos .)
    KMEANS          reduce using rule 33 (estatuto -> metodos .)
    DERL            reduce using rule 33 (estatuto -> metodos .)
    DBERN           reduce using rule 33 (estatuto -> metodos .)
    DPOI            reduce using rule 33 (estatuto -> metodos .)
    TRANSPOSE       reduce using rule 33 (estatuto -> metodos .)
    INVERSE         reduce using rule 33 (estatuto -> metodos .)
    ROTATE          reduce using rule 33 (estatuto -> metodos .)
    REF             reduce using rule 33 (estatuto -> metodos .)
    RREF            reduce using rule 33 (estatuto -> metodos .)
    MONT            reduce using rule 33 (estatuto -> metodos .)
    CBRACKET        reduce using rule 33 (estatuto -> metodos .)


state 35

    (34) asign -> ID . EQUALS expresion SCOLON
    (35) asign -> ID . EQUALS ID SCOLON
    (36) asign -> ID . EQUALS ID asign2 SCOLON
    (37) asign -> ID . asign2 EQUALS ID SCOLON
    (38) asign -> ID . asign2 EQUALS expresion SCOLON
    (39) asign -> ID . asign2 EQUALS ID asign2 SCOLON
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

    EQUALS          shift and go to state 76
    LCOR            shift and go to state 24

    asign2                         shift and go to state 77

state 36

    (54) cond -> IF . OPAREN expresion CPAREN block SCOLON
    (55) cond -> IF . OPAREN expresion CPAREN block ELSE block SCOLON

    OPAREN          shift and go to state 78


state 37

    (45) escrt -> PRINT . OPAREN expresion CPAREN SCOLON
    (46) escrt -> PRINT . OPAREN CPAREN SCOLON
    (47) escrt -> PRINT . OPAREN ID escrt2 CPAREN SCOLON
    (48) escrt -> PRINT . OPAREN STRING CPAREN SCOLON

    OPAREN          shift and go to state 79


state 38

    (58) plot -> PLOT . OPAREN xyfunc CPAREN SCOLON
    (59) plot -> PLOT . OPAREN plot2 CPAREN SCOLON

    OPAREN          shift and go to state 80


state 39

    (56) count -> COUNT . OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON

    OPAREN          shift and go to state 81


state 40

    (57) countif -> COUNTIF . OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    OPAREN          shift and go to state 82


state 41

    (80) metodos -> MEAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 83


state 42

    (81) metodos -> MEDIAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 84


state 43

    (82) metodos -> MODE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 85


state 44

    (83) metodos -> STDV . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 86


state 45

    (84) metodos -> KMEANS . OPAREN varcte COMMA mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 87


state 46

    (85) metodos -> DERL . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 88


state 47

    (86) metodos -> DBERN . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 89


state 48

    (87) metodos -> DPOI . OPAREN expfunc2 CPAREN SCOLON

    OPAREN          shift and go to state 90


state 49

    (88) metodos -> TRANSPOSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 91


state 50

    (89) metodos -> INVERSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 92


state 51

    (90) metodos -> ROTATE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 93


state 52

    (91) metodos -> REF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 94


state 53

    (92) metodos -> RREF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 95


state 54

    (93) metodos -> MONT . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 96


state 55

    (14) modules -> FUNC ID COLON . tipo addfunction OPAREN modules2 CPAREN modules2 block
    (22) tipo -> . INT
    (23) tipo -> . BOOL
    (24) tipo -> . DOUBLE
    (25) tipo -> . STRING
    (26) tipo -> . CHAR

    INT             shift and go to state 58
    BOOL            shift and go to state 59
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    tipo                           shift and go to state 97

state 56

    (9) vars1 -> ID COMMA vars1 .

    FUNC            reduce using rule 9 (vars1 -> ID COMMA vars1 .)
    OBRACKET        reduce using rule 9 (vars1 -> ID COMMA vars1 .)
    CPAREN          reduce using rule 9 (vars1 -> ID COMMA vars1 .)


state 57

    (10) vars1 -> ID COLON tipo . SCOLON lugstat2

    SCOLON          shift and go to state 98


state 58

    (22) tipo -> INT .

    SCOLON          reduce using rule 22 (tipo -> INT .)
    OPAREN          reduce using rule 22 (tipo -> INT .)


state 59

    (23) tipo -> BOOL .

    SCOLON          reduce using rule 23 (tipo -> BOOL .)
    OPAREN          reduce using rule 23 (tipo -> BOOL .)


state 60

    (24) tipo -> DOUBLE .

    SCOLON          reduce using rule 24 (tipo -> DOUBLE .)
    OPAREN          reduce using rule 24 (tipo -> DOUBLE .)


state 61

    (25) tipo -> STRING .

    SCOLON          reduce using rule 25 (tipo -> STRING .)
    OPAREN          reduce using rule 25 (tipo -> STRING .)


state 62

    (26) tipo -> CHAR .

    SCOLON          reduce using rule 26 (tipo -> CHAR .)
    OPAREN          reduce using rule 26 (tipo -> CHAR .)


state 63

    (11) vars1 -> ID asign2 COLON . tipo SCOLON
    (22) tipo -> . INT
    (23) tipo -> . BOOL
    (24) tipo -> . DOUBLE
    (25) tipo -> . STRING
    (26) tipo -> . CHAR

    INT             shift and go to state 58
    BOOL            shift and go to state 59
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61
    CHAR            shift and go to state 62

    tipo                           shift and go to state 99

state 64

    (12) vars1 -> ID asign2 COMMA . vars1
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID COLON tipo SCOLON lugstat2
    (11) vars1 -> . ID asign2 COLON tipo SCOLON
    (12) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 16

    vars1                          shift and go to state 100

state 65

    (40) asign2 -> LCOR expresion . RCOR asign3
    (67) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 101
    RELOP           shift and go to state 102


state 66

    (41) asign2 -> LCOR varcte . RCOR asign3
    (75) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 103
    MULT            reduce using rule 75 (factor -> varcte .)
    DIV             reduce using rule 75 (factor -> varcte .)
    PLUS            reduce using rule 75 (factor -> varcte .)
    MINUS           reduce using rule 75 (factor -> varcte .)
    RELOP           reduce using rule 75 (factor -> varcte .)

  ! RCOR            [ reduce using rule 75 (factor -> varcte .) ]


state 67

    (66) expresion -> exp .

    RCOR            reduce using rule 66 (expresion -> exp .)
    RELOP           reduce using rule 66 (expresion -> exp .)
    CPAREN          reduce using rule 66 (expresion -> exp .)
    SCOLON          reduce using rule 66 (expresion -> exp .)


state 68

    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

    RCOR            reduce using rule 76 (varcte -> ID .)
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    CPAREN          reduce using rule 76 (varcte -> ID .)
    COMMA           reduce using rule 76 (varcte -> ID .)
    SCOLON          reduce using rule 76 (varcte -> ID .)
    CBRACKET        reduce using rule 76 (varcte -> ID .)
    LCOR            shift and go to state 24

    asign2                         shift and go to state 104

state 69

    (78) varcte -> NUMERIC .

    RCOR            reduce using rule 78 (varcte -> NUMERIC .)
    MULT            reduce using rule 78 (varcte -> NUMERIC .)
    DIV             reduce using rule 78 (varcte -> NUMERIC .)
    PLUS            reduce using rule 78 (varcte -> NUMERIC .)
    MINUS           reduce using rule 78 (varcte -> NUMERIC .)
    RELOP           reduce using rule 78 (varcte -> NUMERIC .)
    CPAREN          reduce using rule 78 (varcte -> NUMERIC .)
    SCOLON          reduce using rule 78 (varcte -> NUMERIC .)
    COMMA           reduce using rule 78 (varcte -> NUMERIC .)
    CBRACKET        reduce using rule 78 (varcte -> NUMERIC .)


state 70

    (79) varcte -> NUMBER .

    RCOR            reduce using rule 79 (varcte -> NUMBER .)
    MULT            reduce using rule 79 (varcte -> NUMBER .)
    DIV             reduce using rule 79 (varcte -> NUMBER .)
    PLUS            reduce using rule 79 (varcte -> NUMBER .)
    MINUS           reduce using rule 79 (varcte -> NUMBER .)
    RELOP           reduce using rule 79 (varcte -> NUMBER .)
    CPAREN          reduce using rule 79 (varcte -> NUMBER .)
    SCOLON          reduce using rule 79 (varcte -> NUMBER .)
    COMMA           reduce using rule 79 (varcte -> NUMBER .)
    CBRACKET        reduce using rule 79 (varcte -> NUMBER .)


state 71

    (68) exp -> termino .
    (69) exp -> termino . PLUS exp
    (70) exp -> termino . MINUS exp

    RCOR            reduce using rule 68 (exp -> termino .)
    RELOP           reduce using rule 68 (exp -> termino .)
    CPAREN          reduce using rule 68 (exp -> termino .)
    SCOLON          reduce using rule 68 (exp -> termino .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106


state 72

    (71) termino -> factor .
    (72) termino -> factor . MULT termino
    (73) termino -> factor . DIV termino

    PLUS            reduce using rule 71 (termino -> factor .)
    MINUS           reduce using rule 71 (termino -> factor .)
    RCOR            reduce using rule 71 (termino -> factor .)
    RELOP           reduce using rule 71 (termino -> factor .)
    CPAREN          reduce using rule 71 (termino -> factor .)
    SCOLON          reduce using rule 71 (termino -> factor .)
    MULT            shift and go to state 107
    DIV             shift and go to state 108


state 73

    (74) factor -> OPAREN . expresion CPAREN
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expresion                      shift and go to state 109
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 74

    (18) block -> OBRACKET block2 CBRACKET .

    $end            reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    SCOLON          reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    ELSE            reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    FUNC            reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    OBRACKET        reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)


state 75

    (20) block2 -> estatuto block2 .

    CBRACKET        reduce using rule 20 (block2 -> estatuto block2 .)


state 76

    (34) asign -> ID EQUALS . expresion SCOLON
    (35) asign -> ID EQUALS . ID SCOLON
    (36) asign -> ID EQUALS . ID asign2 SCOLON
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 111
    OPAREN          shift and go to state 73
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expresion                      shift and go to state 112
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 77

    (37) asign -> ID asign2 . EQUALS ID SCOLON
    (38) asign -> ID asign2 . EQUALS expresion SCOLON
    (39) asign -> ID asign2 . EQUALS ID asign2 SCOLON

    EQUALS          shift and go to state 113


state 78

    (54) cond -> IF OPAREN . expresion CPAREN block SCOLON
    (55) cond -> IF OPAREN . expresion CPAREN block ELSE block SCOLON
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expresion                      shift and go to state 114
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 79

    (45) escrt -> PRINT OPAREN . expresion CPAREN SCOLON
    (46) escrt -> PRINT OPAREN . CPAREN SCOLON
    (47) escrt -> PRINT OPAREN . ID escrt2 CPAREN SCOLON
    (48) escrt -> PRINT OPAREN . STRING CPAREN SCOLON
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    CPAREN          shift and go to state 116
    ID              shift and go to state 117
    STRING          shift and go to state 118
    OPAREN          shift and go to state 73
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expresion                      shift and go to state 115
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 80

    (58) plot -> PLOT OPAREN . xyfunc CPAREN SCOLON
    (59) plot -> PLOT OPAREN . plot2 CPAREN SCOLON
    (63) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (64) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (65) xyfunc -> . empty
    (60) plot2 -> . LCOR varcte COMMA varcte RCOR
    (61) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (62) plot2 -> . empty
    (105) empty -> .

    FX              shift and go to state 121
    FY              shift and go to state 122
    LCOR            shift and go to state 124
    CPAREN          reduce using rule 105 (empty -> .)

    xyfunc                         shift and go to state 119
    plot2                          shift and go to state 120
    empty                          shift and go to state 123

state 81

    (56) count -> COUNT OPAREN . ID COMMA varcte COMMA varcte CPAREN SCOLON

    ID              shift and go to state 125


state 82

    (57) countif -> COUNTIF OPAREN . ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    ID              shift and go to state 126


state 83

    (80) metodos -> MEAN OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 127
    empty                          shift and go to state 130

state 84

    (81) metodos -> MEDIAN OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 131
    empty                          shift and go to state 130

state 85

    (82) metodos -> MODE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 132
    empty                          shift and go to state 130

state 86

    (83) metodos -> STDV OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 133
    empty                          shift and go to state 130

state 87

    (84) metodos -> KMEANS OPAREN . varcte COMMA mmmfunc CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 134

state 88

    (85) metodos -> DERL OPAREN . expfunc CPAREN SCOLON
    (94) expfunc -> . ID COMMA ID COMMA ID
    (95) expfunc -> . varcte COMMA varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 136
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expfunc                        shift and go to state 135
    varcte                         shift and go to state 137

state 89

    (86) metodos -> DBERN OPAREN . expfunc CPAREN SCOLON
    (94) expfunc -> . ID COMMA ID COMMA ID
    (95) expfunc -> . varcte COMMA varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 136
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expfunc                        shift and go to state 138
    varcte                         shift and go to state 137

state 90

    (87) metodos -> DPOI OPAREN . expfunc2 CPAREN SCOLON
    (96) expfunc2 -> . ID COMMA ID
    (97) expfunc2 -> . varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 140
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expfunc2                       shift and go to state 139
    varcte                         shift and go to state 141

state 91

    (88) metodos -> TRANSPOSE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 142
    empty                          shift and go to state 130

state 92

    (89) metodos -> INVERSE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 143
    empty                          shift and go to state 130

state 93

    (90) metodos -> ROTATE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 144
    empty                          shift and go to state 130

state 94

    (91) metodos -> REF OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 145
    empty                          shift and go to state 130

state 95

    (92) metodos -> RREF OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 146
    empty                          shift and go to state 130

state 96

    (93) metodos -> MONT OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 147
    empty                          shift and go to state 130

state 97

    (14) modules -> FUNC ID COLON tipo . addfunction OPAREN modules2 CPAREN modules2 block
    (15) addfunction -> . empty
    (105) empty -> .

    OPAREN          reduce using rule 105 (empty -> .)

    addfunction                    shift and go to state 148
    empty                          shift and go to state 149

state 98

    (10) vars1 -> ID COLON tipo SCOLON . lugstat2
    (3) lugstat2 -> . vars
    (4) lugstat2 -> . empty
    (8) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 10
    FUNC            reduce using rule 105 (empty -> .)
    OBRACKET        reduce using rule 105 (empty -> .)
    CPAREN          reduce using rule 105 (empty -> .)

    lugstat2                       shift and go to state 150
    vars                           shift and go to state 8
    empty                          shift and go to state 9

state 99

    (11) vars1 -> ID asign2 COLON tipo . SCOLON

    SCOLON          shift and go to state 151


state 100

    (12) vars1 -> ID asign2 COMMA vars1 .

    FUNC            reduce using rule 12 (vars1 -> ID asign2 COMMA vars1 .)
    OBRACKET        reduce using rule 12 (vars1 -> ID asign2 COMMA vars1 .)
    CPAREN          reduce using rule 12 (vars1 -> ID asign2 COMMA vars1 .)


state 101

    (40) asign2 -> LCOR expresion RCOR . asign3
    (42) asign3 -> . LCOR expresion RCOR
    (43) asign3 -> . LCOR varcte RCOR
    (44) asign3 -> . empty
    (105) empty -> .

    LCOR            shift and go to state 152
    COLON           reduce using rule 105 (empty -> .)
    COMMA           reduce using rule 105 (empty -> .)
    EQUALS          reduce using rule 105 (empty -> .)
    RCOR            reduce using rule 105 (empty -> .)
    MULT            reduce using rule 105 (empty -> .)
    DIV             reduce using rule 105 (empty -> .)
    PLUS            reduce using rule 105 (empty -> .)
    MINUS           reduce using rule 105 (empty -> .)
    RELOP           reduce using rule 105 (empty -> .)
    CPAREN          reduce using rule 105 (empty -> .)
    SCOLON          reduce using rule 105 (empty -> .)
    CBRACKET        reduce using rule 105 (empty -> .)

    asign3                         shift and go to state 153
    empty                          shift and go to state 154

state 102

    (67) expresion -> expresion RELOP . exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    exp                            shift and go to state 155
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 103

    (41) asign2 -> LCOR varcte RCOR . asign3
    (42) asign3 -> . LCOR expresion RCOR
    (43) asign3 -> . LCOR varcte RCOR
    (44) asign3 -> . empty
    (105) empty -> .

    LCOR            shift and go to state 152
    COLON           reduce using rule 105 (empty -> .)
    COMMA           reduce using rule 105 (empty -> .)
    EQUALS          reduce using rule 105 (empty -> .)
    RCOR            reduce using rule 105 (empty -> .)
    MULT            reduce using rule 105 (empty -> .)
    DIV             reduce using rule 105 (empty -> .)
    PLUS            reduce using rule 105 (empty -> .)
    MINUS           reduce using rule 105 (empty -> .)
    RELOP           reduce using rule 105 (empty -> .)
    CPAREN          reduce using rule 105 (empty -> .)
    SCOLON          reduce using rule 105 (empty -> .)
    CBRACKET        reduce using rule 105 (empty -> .)

    asign3                         shift and go to state 156
    empty                          shift and go to state 154

state 104

    (77) varcte -> ID asign2 .

    RCOR            reduce using rule 77 (varcte -> ID asign2 .)
    MULT            reduce using rule 77 (varcte -> ID asign2 .)
    DIV             reduce using rule 77 (varcte -> ID asign2 .)
    PLUS            reduce using rule 77 (varcte -> ID asign2 .)
    MINUS           reduce using rule 77 (varcte -> ID asign2 .)
    RELOP           reduce using rule 77 (varcte -> ID asign2 .)
    CPAREN          reduce using rule 77 (varcte -> ID asign2 .)
    COMMA           reduce using rule 77 (varcte -> ID asign2 .)
    SCOLON          reduce using rule 77 (varcte -> ID asign2 .)
    CBRACKET        reduce using rule 77 (varcte -> ID asign2 .)


state 105

    (69) exp -> termino PLUS . exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    termino                        shift and go to state 71
    exp                            shift and go to state 157
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 106

    (70) exp -> termino MINUS . exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    termino                        shift and go to state 71
    exp                            shift and go to state 158
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 107

    (72) termino -> factor MULT . termino
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    factor                         shift and go to state 72
    termino                        shift and go to state 159
    varcte                         shift and go to state 110

state 108

    (73) termino -> factor DIV . termino
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    factor                         shift and go to state 72
    termino                        shift and go to state 160
    varcte                         shift and go to state 110

state 109

    (74) factor -> OPAREN expresion . CPAREN
    (67) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 161
    RELOP           shift and go to state 102


state 110

    (75) factor -> varcte .

    MULT            reduce using rule 75 (factor -> varcte .)
    DIV             reduce using rule 75 (factor -> varcte .)
    PLUS            reduce using rule 75 (factor -> varcte .)
    MINUS           reduce using rule 75 (factor -> varcte .)
    CPAREN          reduce using rule 75 (factor -> varcte .)
    RELOP           reduce using rule 75 (factor -> varcte .)
    SCOLON          reduce using rule 75 (factor -> varcte .)
    RCOR            reduce using rule 75 (factor -> varcte .)


state 111

    (35) asign -> ID EQUALS ID . SCOLON
    (36) asign -> ID EQUALS ID . asign2 SCOLON
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 162
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    LCOR            shift and go to state 24

  ! SCOLON          [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 163

state 112

    (34) asign -> ID EQUALS expresion . SCOLON
    (67) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 164
    RELOP           shift and go to state 102


state 113

    (37) asign -> ID asign2 EQUALS . ID SCOLON
    (38) asign -> ID asign2 EQUALS . expresion SCOLON
    (39) asign -> ID asign2 EQUALS . ID asign2 SCOLON
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 165
    OPAREN          shift and go to state 73
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    expresion                      shift and go to state 166
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 114

    (54) cond -> IF OPAREN expresion . CPAREN block SCOLON
    (55) cond -> IF OPAREN expresion . CPAREN block ELSE block SCOLON
    (67) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 167
    RELOP           shift and go to state 102


state 115

    (45) escrt -> PRINT OPAREN expresion . CPAREN SCOLON
    (67) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 168
    RELOP           shift and go to state 102


state 116

    (46) escrt -> PRINT OPAREN CPAREN . SCOLON

    SCOLON          shift and go to state 169


state 117

    (47) escrt -> PRINT OPAREN ID . escrt2 CPAREN SCOLON
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (49) escrt2 -> . COMMA escrt3
    (50) escrt2 -> . empty
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3
    (105) empty -> .

  ! reduce/reduce conflict for CPAREN resolved using rule 76 (varcte -> ID .)
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    CPAREN          reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    COMMA           shift and go to state 171
    LCOR            shift and go to state 24

  ! CPAREN          [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 170
    asign2                         shift and go to state 104
    empty                          shift and go to state 172

state 118

    (48) escrt -> PRINT OPAREN STRING . CPAREN SCOLON

    CPAREN          shift and go to state 173


state 119

    (58) plot -> PLOT OPAREN xyfunc . CPAREN SCOLON

    CPAREN          shift and go to state 174


state 120

    (59) plot -> PLOT OPAREN plot2 . CPAREN SCOLON

    CPAREN          shift and go to state 175


state 121

    (63) xyfunc -> FX . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 176


state 122

    (64) xyfunc -> FY . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 177


state 123

    (65) xyfunc -> empty .
    (62) plot2 -> empty .

  ! reduce/reduce conflict for CPAREN resolved using rule 62 (plot2 -> empty .)
    CPAREN          reduce using rule 62 (plot2 -> empty .)

  ! CPAREN          [ reduce using rule 65 (xyfunc -> empty .) ]


state 124

    (60) plot2 -> LCOR . varcte COMMA varcte RCOR
    (61) plot2 -> LCOR . varcte COMMA varcte RCOR COMMA plot2
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 178

state 125

    (56) count -> COUNT OPAREN ID . COMMA varcte COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 179


state 126

    (57) countif -> COUNTIF OPAREN ID . COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 180


state 127

    (80) metodos -> MEAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 181


state 128

    (98) mmmfunc -> ID .

    CPAREN          reduce using rule 98 (mmmfunc -> ID .)


state 129

    (99) mmmfunc -> OBRACKET . mmmarray CBRACKET
    (100) mmmfunc -> OBRACKET . mmmarray CBRACKET COMMA mmmfunc
    (102) mmmarray -> . varcte
    (103) mmmarray -> . varcte COMMA mmmarray
    (104) mmmarray -> . empty
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (105) empty -> .

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70
    CBRACKET        reduce using rule 105 (empty -> .)

    mmmarray                       shift and go to state 182
    varcte                         shift and go to state 183
    empty                          shift and go to state 184

state 130

    (101) mmmfunc -> empty .

    CPAREN          reduce using rule 101 (mmmfunc -> empty .)


state 131

    (81) metodos -> MEDIAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 185


state 132

    (82) metodos -> MODE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 186


state 133

    (83) metodos -> STDV OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 187


state 134

    (84) metodos -> KMEANS OPAREN varcte . COMMA mmmfunc CPAREN SCOLON

    COMMA           shift and go to state 188


state 135

    (85) metodos -> DERL OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 189


state 136

    (94) expfunc -> ID . COMMA ID COMMA ID
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 190
    LCOR            shift and go to state 24

  ! COMMA           [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 104

state 137

    (95) expfunc -> varcte . COMMA varcte COMMA varcte

    COMMA           shift and go to state 191


state 138

    (86) metodos -> DBERN OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 192


state 139

    (87) metodos -> DPOI OPAREN expfunc2 . CPAREN SCOLON

    CPAREN          shift and go to state 193


state 140

    (96) expfunc2 -> ID . COMMA ID
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 194
    LCOR            shift and go to state 24

  ! COMMA           [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 104

state 141

    (97) expfunc2 -> varcte . COMMA varcte

    COMMA           shift and go to state 195


state 142

    (88) metodos -> TRANSPOSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 196


state 143

    (89) metodos -> INVERSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 197


state 144

    (90) metodos -> ROTATE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 198


state 145

    (91) metodos -> REF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 199


state 146

    (92) metodos -> RREF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 200


state 147

    (93) metodos -> MONT OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 201


state 148

    (14) modules -> FUNC ID COLON tipo addfunction . OPAREN modules2 CPAREN modules2 block

    OPAREN          shift and go to state 202


state 149

    (15) addfunction -> empty .

    OPAREN          reduce using rule 15 (addfunction -> empty .)


state 150

    (10) vars1 -> ID COLON tipo SCOLON lugstat2 .

    FUNC            reduce using rule 10 (vars1 -> ID COLON tipo SCOLON lugstat2 .)
    OBRACKET        reduce using rule 10 (vars1 -> ID COLON tipo SCOLON lugstat2 .)
    CPAREN          reduce using rule 10 (vars1 -> ID COLON tipo SCOLON lugstat2 .)


state 151

    (11) vars1 -> ID asign2 COLON tipo SCOLON .

    FUNC            reduce using rule 11 (vars1 -> ID asign2 COLON tipo SCOLON .)
    OBRACKET        reduce using rule 11 (vars1 -> ID asign2 COLON tipo SCOLON .)
    CPAREN          reduce using rule 11 (vars1 -> ID asign2 COLON tipo SCOLON .)


state 152

    (42) asign3 -> LCOR . expresion RCOR
    (43) asign3 -> LCOR . varcte RCOR
    (66) expresion -> . exp
    (67) expresion -> . expresion RELOP exp
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70
    OPAREN          shift and go to state 73

    expresion                      shift and go to state 203
    varcte                         shift and go to state 204
    exp                            shift and go to state 67
    termino                        shift and go to state 71
    factor                         shift and go to state 72

state 153

    (40) asign2 -> LCOR expresion RCOR asign3 .

    COLON           reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    COMMA           reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    EQUALS          reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    RCOR            reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    MULT            reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    DIV             reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    PLUS            reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    MINUS           reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    RELOP           reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    CPAREN          reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    SCOLON          reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)
    CBRACKET        reduce using rule 40 (asign2 -> LCOR expresion RCOR asign3 .)


state 154

    (44) asign3 -> empty .

    COLON           reduce using rule 44 (asign3 -> empty .)
    COMMA           reduce using rule 44 (asign3 -> empty .)
    EQUALS          reduce using rule 44 (asign3 -> empty .)
    RCOR            reduce using rule 44 (asign3 -> empty .)
    MULT            reduce using rule 44 (asign3 -> empty .)
    DIV             reduce using rule 44 (asign3 -> empty .)
    PLUS            reduce using rule 44 (asign3 -> empty .)
    MINUS           reduce using rule 44 (asign3 -> empty .)
    RELOP           reduce using rule 44 (asign3 -> empty .)
    CPAREN          reduce using rule 44 (asign3 -> empty .)
    SCOLON          reduce using rule 44 (asign3 -> empty .)
    CBRACKET        reduce using rule 44 (asign3 -> empty .)


state 155

    (67) expresion -> expresion RELOP exp .

    RCOR            reduce using rule 67 (expresion -> expresion RELOP exp .)
    RELOP           reduce using rule 67 (expresion -> expresion RELOP exp .)
    CPAREN          reduce using rule 67 (expresion -> expresion RELOP exp .)
    SCOLON          reduce using rule 67 (expresion -> expresion RELOP exp .)


state 156

    (41) asign2 -> LCOR varcte RCOR asign3 .

    COLON           reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    COMMA           reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    EQUALS          reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    RCOR            reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    MULT            reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    DIV             reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    PLUS            reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    MINUS           reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    RELOP           reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    CPAREN          reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    SCOLON          reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)
    CBRACKET        reduce using rule 41 (asign2 -> LCOR varcte RCOR asign3 .)


state 157

    (69) exp -> termino PLUS exp .

    RCOR            reduce using rule 69 (exp -> termino PLUS exp .)
    RELOP           reduce using rule 69 (exp -> termino PLUS exp .)
    CPAREN          reduce using rule 69 (exp -> termino PLUS exp .)
    SCOLON          reduce using rule 69 (exp -> termino PLUS exp .)


state 158

    (70) exp -> termino MINUS exp .

    RCOR            reduce using rule 70 (exp -> termino MINUS exp .)
    RELOP           reduce using rule 70 (exp -> termino MINUS exp .)
    CPAREN          reduce using rule 70 (exp -> termino MINUS exp .)
    SCOLON          reduce using rule 70 (exp -> termino MINUS exp .)


state 159

    (72) termino -> factor MULT termino .

    PLUS            reduce using rule 72 (termino -> factor MULT termino .)
    MINUS           reduce using rule 72 (termino -> factor MULT termino .)
    RCOR            reduce using rule 72 (termino -> factor MULT termino .)
    RELOP           reduce using rule 72 (termino -> factor MULT termino .)
    CPAREN          reduce using rule 72 (termino -> factor MULT termino .)
    SCOLON          reduce using rule 72 (termino -> factor MULT termino .)


state 160

    (73) termino -> factor DIV termino .

    PLUS            reduce using rule 73 (termino -> factor DIV termino .)
    MINUS           reduce using rule 73 (termino -> factor DIV termino .)
    RCOR            reduce using rule 73 (termino -> factor DIV termino .)
    RELOP           reduce using rule 73 (termino -> factor DIV termino .)
    CPAREN          reduce using rule 73 (termino -> factor DIV termino .)
    SCOLON          reduce using rule 73 (termino -> factor DIV termino .)


state 161

    (74) factor -> OPAREN expresion CPAREN .

    MULT            reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    DIV             reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    RCOR            reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    RELOP           reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 74 (factor -> OPAREN expresion CPAREN .)
    SCOLON          reduce using rule 74 (factor -> OPAREN expresion CPAREN .)


state 162

    (35) asign -> ID EQUALS ID SCOLON .

    ID              reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    IF              reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    PRINT           reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    PLOT            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    COUNT           reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    MEAN            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    MODE            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    STDV            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    KMEANS          reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    DERL            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    DBERN           reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    DPOI            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    INVERSE         reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    ROTATE          reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    REF             reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    RREF            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    MONT            reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 35 (asign -> ID EQUALS ID SCOLON .)


state 163

    (36) asign -> ID EQUALS ID asign2 . SCOLON
    (77) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 205
    MULT            reduce using rule 77 (varcte -> ID asign2 .)
    DIV             reduce using rule 77 (varcte -> ID asign2 .)
    PLUS            reduce using rule 77 (varcte -> ID asign2 .)
    MINUS           reduce using rule 77 (varcte -> ID asign2 .)
    RELOP           reduce using rule 77 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 77 (varcte -> ID asign2 .) ]


state 164

    (34) asign -> ID EQUALS expresion SCOLON .

    ID              reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    IF              reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    PRINT           reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    PLOT            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    COUNT           reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    MEAN            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    MODE            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    STDV            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    DERL            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    DBERN           reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    DPOI            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    REF             reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    RREF            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    MONT            reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 34 (asign -> ID EQUALS expresion SCOLON .)


state 165

    (37) asign -> ID asign2 EQUALS ID . SCOLON
    (39) asign -> ID asign2 EQUALS ID . asign2 SCOLON
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (40) asign2 -> . LCOR expresion RCOR asign3
    (41) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 207
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    LCOR            shift and go to state 24

  ! SCOLON          [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 206

state 166

    (38) asign -> ID asign2 EQUALS expresion . SCOLON
    (67) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 208
    RELOP           shift and go to state 102


state 167

    (54) cond -> IF OPAREN expresion CPAREN . block SCOLON
    (55) cond -> IF OPAREN expresion CPAREN . block ELSE block SCOLON
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 209

state 168

    (45) escrt -> PRINT OPAREN expresion CPAREN . SCOLON

    SCOLON          shift and go to state 210


state 169

    (46) escrt -> PRINT OPAREN CPAREN SCOLON .

    ID              reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    IF              reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PRINT           reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PLOT            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNT           reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNTIF         reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEAN            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEDIAN          reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MODE            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    STDV            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    KMEANS          reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DERL            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DBERN           reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DPOI            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    INVERSE         reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    ROTATE          reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    REF             reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    RREF            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MONT            reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    CBRACKET        reduce using rule 46 (escrt -> PRINT OPAREN CPAREN SCOLON .)


state 170

    (47) escrt -> PRINT OPAREN ID escrt2 . CPAREN SCOLON

    CPAREN          shift and go to state 211


state 171

    (49) escrt2 -> COMMA . escrt3
    (51) escrt3 -> . ID escrt2
    (52) escrt3 -> . ID
    (53) escrt3 -> . STRING escrt2 escrt2

    ID              shift and go to state 213
    STRING          shift and go to state 214

    escrt3                         shift and go to state 212

state 172

    (50) escrt2 -> empty .

    CPAREN          reduce using rule 50 (escrt2 -> empty .)
    COMMA           reduce using rule 50 (escrt2 -> empty .)


state 173

    (48) escrt -> PRINT OPAREN STRING CPAREN . SCOLON

    SCOLON          shift and go to state 215


state 174

    (58) plot -> PLOT OPAREN xyfunc CPAREN . SCOLON

    SCOLON          shift and go to state 216


state 175

    (59) plot -> PLOT OPAREN plot2 CPAREN . SCOLON

    SCOLON          shift and go to state 217


state 176

    (63) xyfunc -> FX EQUALS . exp SCOLON xyfunc
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    exp                            shift and go to state 218
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 177

    (64) xyfunc -> FY EQUALS . exp SCOLON xyfunc
    (68) exp -> . termino
    (69) exp -> . termino PLUS exp
    (70) exp -> . termino MINUS exp
    (71) termino -> . factor
    (72) termino -> . factor MULT termino
    (73) termino -> . factor DIV termino
    (74) factor -> . OPAREN expresion CPAREN
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    exp                            shift and go to state 219
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    varcte                         shift and go to state 110

state 178

    (60) plot2 -> LCOR varcte . COMMA varcte RCOR
    (61) plot2 -> LCOR varcte . COMMA varcte RCOR COMMA plot2

    COMMA           shift and go to state 220


state 179

    (56) count -> COUNT OPAREN ID COMMA . varcte COMMA varcte CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 221

state 180

    (57) countif -> COUNTIF OPAREN ID COMMA . varcte COMMA varcte COMMA cond CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 222

state 181

    (80) metodos -> MEAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 223


state 182

    (99) mmmfunc -> OBRACKET mmmarray . CBRACKET
    (100) mmmfunc -> OBRACKET mmmarray . CBRACKET COMMA mmmfunc

    CBRACKET        shift and go to state 224


state 183

    (102) mmmarray -> varcte .
    (103) mmmarray -> varcte . COMMA mmmarray

    CBRACKET        reduce using rule 102 (mmmarray -> varcte .)
    COMMA           shift and go to state 225


state 184

    (104) mmmarray -> empty .

    CBRACKET        reduce using rule 104 (mmmarray -> empty .)


state 185

    (81) metodos -> MEDIAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 226


state 186

    (82) metodos -> MODE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 227


state 187

    (83) metodos -> STDV OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 228


state 188

    (84) metodos -> KMEANS OPAREN varcte COMMA . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 229
    empty                          shift and go to state 130

state 189

    (85) metodos -> DERL OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 230


state 190

    (94) expfunc -> ID COMMA . ID COMMA ID

    ID              shift and go to state 231


state 191

    (95) expfunc -> varcte COMMA . varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 232

state 192

    (86) metodos -> DBERN OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 233


state 193

    (87) metodos -> DPOI OPAREN expfunc2 CPAREN . SCOLON

    SCOLON          shift and go to state 234


state 194

    (96) expfunc2 -> ID COMMA . ID

    ID              shift and go to state 235


state 195

    (97) expfunc2 -> varcte COMMA . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 236

state 196

    (88) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 237


state 197

    (89) metodos -> INVERSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 238


state 198

    (90) metodos -> ROTATE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 239


state 199

    (91) metodos -> REF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 240


state 200

    (92) metodos -> RREF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 241


state 201

    (93) metodos -> MONT OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 242


state 202

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN . modules2 CPAREN modules2 block
    (16) modules2 -> . vars
    (17) modules2 -> . empty
    (8) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 10
    CPAREN          reduce using rule 105 (empty -> .)

    modules2                       shift and go to state 243
    vars                           shift and go to state 244
    empty                          shift and go to state 245

state 203

    (42) asign3 -> LCOR expresion . RCOR
    (67) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 246
    RELOP           shift and go to state 102


state 204

    (43) asign3 -> LCOR varcte . RCOR
    (75) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 247
    MULT            reduce using rule 75 (factor -> varcte .)
    DIV             reduce using rule 75 (factor -> varcte .)
    PLUS            reduce using rule 75 (factor -> varcte .)
    MINUS           reduce using rule 75 (factor -> varcte .)
    RELOP           reduce using rule 75 (factor -> varcte .)

  ! RCOR            [ reduce using rule 75 (factor -> varcte .) ]


state 205

    (36) asign -> ID EQUALS ID asign2 SCOLON .

    ID              reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 36 (asign -> ID EQUALS ID asign2 SCOLON .)


state 206

    (39) asign -> ID asign2 EQUALS ID asign2 . SCOLON
    (77) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 248
    MULT            reduce using rule 77 (varcte -> ID asign2 .)
    DIV             reduce using rule 77 (varcte -> ID asign2 .)
    PLUS            reduce using rule 77 (varcte -> ID asign2 .)
    MINUS           reduce using rule 77 (varcte -> ID asign2 .)
    RELOP           reduce using rule 77 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 77 (varcte -> ID asign2 .) ]


state 207

    (37) asign -> ID asign2 EQUALS ID SCOLON .

    ID              reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    IF              reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    PRINT           reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    PLOT            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNT           reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEAN            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    MODE            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    STDV            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    KMEANS          reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    DERL            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    DBERN           reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    DPOI            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    INVERSE         reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    ROTATE          reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    REF             reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    RREF            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    MONT            reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 37 (asign -> ID asign2 EQUALS ID SCOLON .)


state 208

    (38) asign -> ID asign2 EQUALS expresion SCOLON .

    ID              reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    IF              reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PRINT           reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PLOT            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNT           reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEAN            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MODE            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    STDV            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DERL            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DBERN           reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DPOI            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    REF             reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    RREF            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MONT            reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 38 (asign -> ID asign2 EQUALS expresion SCOLON .)


state 209

    (54) cond -> IF OPAREN expresion CPAREN block . SCOLON
    (55) cond -> IF OPAREN expresion CPAREN block . ELSE block SCOLON

    SCOLON          shift and go to state 249
    ELSE            shift and go to state 250


state 210

    (45) escrt -> PRINT OPAREN expresion CPAREN SCOLON .

    ID              reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    IF              reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PRINT           reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PLOT            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNT           reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNTIF         reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEAN            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEDIAN          reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MODE            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    STDV            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    KMEANS          reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DERL            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DBERN           reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DPOI            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    INVERSE         reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    ROTATE          reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    REF             reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    RREF            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MONT            reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    CBRACKET        reduce using rule 45 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)


state 211

    (47) escrt -> PRINT OPAREN ID escrt2 CPAREN . SCOLON

    SCOLON          shift and go to state 251


state 212

    (49) escrt2 -> COMMA escrt3 .

    CPAREN          reduce using rule 49 (escrt2 -> COMMA escrt3 .)
    COMMA           reduce using rule 49 (escrt2 -> COMMA escrt3 .)


state 213

    (51) escrt3 -> ID . escrt2
    (52) escrt3 -> ID .
    (49) escrt2 -> . COMMA escrt3
    (50) escrt2 -> . empty
    (105) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CPAREN resolved using rule 52 (escrt3 -> ID .)
  ! shift/reduce conflict for COMMA resolved as shift
    CPAREN          reduce using rule 52 (escrt3 -> ID .)
    COMMA           shift and go to state 171

  ! COMMA           [ reduce using rule 52 (escrt3 -> ID .) ]
  ! CPAREN          [ reduce using rule 105 (empty -> .) ]
  ! COMMA           [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 252
    empty                          shift and go to state 172

state 214

    (53) escrt3 -> STRING . escrt2 escrt2
    (49) escrt2 -> . COMMA escrt3
    (50) escrt2 -> . empty
    (105) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 171
    CPAREN          reduce using rule 105 (empty -> .)

  ! COMMA           [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 253
    empty                          shift and go to state 172

state 215

    (48) escrt -> PRINT OPAREN STRING CPAREN SCOLON .

    ID              reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    IF              reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PRINT           reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PLOT            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNT           reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNTIF         reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEAN            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEDIAN          reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MODE            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    STDV            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    KMEANS          reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DERL            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DBERN           reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DPOI            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    INVERSE         reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    ROTATE          reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    REF             reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    RREF            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MONT            reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    CBRACKET        reduce using rule 48 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)


state 216

    (58) plot -> PLOT OPAREN xyfunc CPAREN SCOLON .

    ID              reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    IF              reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PRINT           reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PLOT            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNT           reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEAN            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MODE            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    STDV            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DERL            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DBERN           reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DPOI            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    REF             reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    RREF            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MONT            reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 58 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)


state 217

    (59) plot -> PLOT OPAREN plot2 CPAREN SCOLON .

    ID              reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    IF              reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PRINT           reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PLOT            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNT           reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEAN            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MODE            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    STDV            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    KMEANS          reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DERL            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DBERN           reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DPOI            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    INVERSE         reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    ROTATE          reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    REF             reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    RREF            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MONT            reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 59 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)


state 218

    (63) xyfunc -> FX EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 254


state 219

    (64) xyfunc -> FY EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 255


state 220

    (60) plot2 -> LCOR varcte COMMA . varcte RCOR
    (61) plot2 -> LCOR varcte COMMA . varcte RCOR COMMA plot2
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 256

state 221

    (56) count -> COUNT OPAREN ID COMMA varcte . COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 257


state 222

    (57) countif -> COUNTIF OPAREN ID COMMA varcte . COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 258


state 223

    (80) metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)


state 224

    (99) mmmfunc -> OBRACKET mmmarray CBRACKET .
    (100) mmmfunc -> OBRACKET mmmarray CBRACKET . COMMA mmmfunc

    CPAREN          reduce using rule 99 (mmmfunc -> OBRACKET mmmarray CBRACKET .)
    COMMA           shift and go to state 259


state 225

    (103) mmmarray -> varcte COMMA . mmmarray
    (102) mmmarray -> . varcte
    (103) mmmarray -> . varcte COMMA mmmarray
    (104) mmmarray -> . empty
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (105) empty -> .

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70
    CBRACKET        reduce using rule 105 (empty -> .)

    varcte                         shift and go to state 183
    mmmarray                       shift and go to state 260
    empty                          shift and go to state 184

state 226

    (81) metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)


state 227

    (82) metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)


state 228

    (83) metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)


state 229

    (84) metodos -> KMEANS OPAREN varcte COMMA mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 261


state 230

    (85) metodos -> DERL OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)


state 231

    (94) expfunc -> ID COMMA ID . COMMA ID

    COMMA           shift and go to state 262


state 232

    (95) expfunc -> varcte COMMA varcte . COMMA varcte

    COMMA           shift and go to state 263


state 233

    (86) metodos -> DBERN OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)


state 234

    (87) metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .

    ID              reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    IF              reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PRINT           reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PLOT            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNT           reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEAN            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MODE            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    STDV            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    KMEANS          reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DERL            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DBERN           reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DPOI            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    INVERSE         reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    ROTATE          reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    REF             reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    RREF            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MONT            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)


state 235

    (96) expfunc2 -> ID COMMA ID .

    CPAREN          reduce using rule 96 (expfunc2 -> ID COMMA ID .)


state 236

    (97) expfunc2 -> varcte COMMA varcte .

    CPAREN          reduce using rule 97 (expfunc2 -> varcte COMMA varcte .)


state 237

    (88) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)


state 238

    (89) metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)


state 239

    (90) metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)


state 240

    (91) metodos -> REF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)


state 241

    (92) metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)


state 242

    (93) metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)


state 243

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 . CPAREN modules2 block

    CPAREN          shift and go to state 264


state 244

    (16) modules2 -> vars .

    CPAREN          reduce using rule 16 (modules2 -> vars .)
    OBRACKET        reduce using rule 16 (modules2 -> vars .)


state 245

    (17) modules2 -> empty .

    CPAREN          reduce using rule 17 (modules2 -> empty .)
    OBRACKET        reduce using rule 17 (modules2 -> empty .)


state 246

    (42) asign3 -> LCOR expresion RCOR .

    COLON           reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    COMMA           reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    EQUALS          reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    RCOR            reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    MULT            reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    DIV             reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    PLUS            reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    MINUS           reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    RELOP           reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    CPAREN          reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    SCOLON          reduce using rule 42 (asign3 -> LCOR expresion RCOR .)
    CBRACKET        reduce using rule 42 (asign3 -> LCOR expresion RCOR .)


state 247

    (43) asign3 -> LCOR varcte RCOR .

    COLON           reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    COMMA           reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    EQUALS          reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    RCOR            reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    MULT            reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    DIV             reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    PLUS            reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    MINUS           reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    RELOP           reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    CPAREN          reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    SCOLON          reduce using rule 43 (asign3 -> LCOR varcte RCOR .)
    CBRACKET        reduce using rule 43 (asign3 -> LCOR varcte RCOR .)


state 248

    (39) asign -> ID asign2 EQUALS ID asign2 SCOLON .

    ID              reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 39 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)


state 249

    (54) cond -> IF OPAREN expresion CPAREN block SCOLON .

    ID              reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    IF              reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PRINT           reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PLOT            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNT           reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNTIF         reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEAN            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEDIAN          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MODE            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    STDV            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    KMEANS          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DERL            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DBERN           reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DPOI            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    TRANSPOSE       reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    INVERSE         reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    ROTATE          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    REF             reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    RREF            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MONT            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CBRACKET        reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CPAREN          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block SCOLON .)


state 250

    (55) cond -> IF OPAREN expresion CPAREN block ELSE . block SCOLON
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 265

state 251

    (47) escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .

    ID              reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    IF              reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PRINT           reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PLOT            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNT           reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEAN            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MODE            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    STDV            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    KMEANS          reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DERL            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DBERN           reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DPOI            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    INVERSE         reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    ROTATE          reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    REF             reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    RREF            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MONT            reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 47 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)


state 252

    (51) escrt3 -> ID escrt2 .

    CPAREN          reduce using rule 51 (escrt3 -> ID escrt2 .)
    COMMA           reduce using rule 51 (escrt3 -> ID escrt2 .)


state 253

    (53) escrt3 -> STRING escrt2 . escrt2
    (49) escrt2 -> . COMMA escrt3
    (50) escrt2 -> . empty
    (105) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 171
    CPAREN          reduce using rule 105 (empty -> .)

  ! COMMA           [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 266
    empty                          shift and go to state 172

state 254

    (63) xyfunc -> FX EQUALS exp SCOLON . xyfunc
    (63) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (64) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (65) xyfunc -> . empty
    (105) empty -> .

    FX              shift and go to state 121
    FY              shift and go to state 122
    CPAREN          reduce using rule 105 (empty -> .)

    xyfunc                         shift and go to state 267
    empty                          shift and go to state 268

state 255

    (64) xyfunc -> FY EQUALS exp SCOLON . xyfunc
    (63) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (64) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (65) xyfunc -> . empty
    (105) empty -> .

    FX              shift and go to state 121
    FY              shift and go to state 122
    CPAREN          reduce using rule 105 (empty -> .)

    xyfunc                         shift and go to state 269
    empty                          shift and go to state 268

state 256

    (60) plot2 -> LCOR varcte COMMA varcte . RCOR
    (61) plot2 -> LCOR varcte COMMA varcte . RCOR COMMA plot2

    RCOR            shift and go to state 270


state 257

    (56) count -> COUNT OPAREN ID COMMA varcte COMMA . varcte CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 271

state 258

    (57) countif -> COUNTIF OPAREN ID COMMA varcte COMMA . varcte COMMA cond CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 272

state 259

    (100) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA . mmmfunc
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 128
    OBRACKET        shift and go to state 129
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 273
    empty                          shift and go to state 130

state 260

    (103) mmmarray -> varcte COMMA mmmarray .

    CBRACKET        reduce using rule 103 (mmmarray -> varcte COMMA mmmarray .)


state 261

    (84) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 274


state 262

    (94) expfunc -> ID COMMA ID COMMA . ID

    ID              shift and go to state 275


state 263

    (95) expfunc -> varcte COMMA varcte COMMA . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 68
    NUMERIC         shift and go to state 69
    NUMBER          shift and go to state 70

    varcte                         shift and go to state 276

state 264

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN . modules2 block
    (16) modules2 -> . vars
    (17) modules2 -> . empty
    (8) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 10
    OBRACKET        reduce using rule 105 (empty -> .)

    modules2                       shift and go to state 277
    vars                           shift and go to state 244
    empty                          shift and go to state 245

state 265

    (55) cond -> IF OPAREN expresion CPAREN block ELSE block . SCOLON

    SCOLON          shift and go to state 278


state 266

    (53) escrt3 -> STRING escrt2 escrt2 .

    CPAREN          reduce using rule 53 (escrt3 -> STRING escrt2 escrt2 .)
    COMMA           reduce using rule 53 (escrt3 -> STRING escrt2 escrt2 .)


state 267

    (63) xyfunc -> FX EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 63 (xyfunc -> FX EQUALS exp SCOLON xyfunc .)


state 268

    (65) xyfunc -> empty .

    CPAREN          reduce using rule 65 (xyfunc -> empty .)


state 269

    (64) xyfunc -> FY EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 64 (xyfunc -> FY EQUALS exp SCOLON xyfunc .)


state 270

    (60) plot2 -> LCOR varcte COMMA varcte RCOR .
    (61) plot2 -> LCOR varcte COMMA varcte RCOR . COMMA plot2

    CPAREN          reduce using rule 60 (plot2 -> LCOR varcte COMMA varcte RCOR .)
    COMMA           shift and go to state 279


state 271

    (56) count -> COUNT OPAREN ID COMMA varcte COMMA varcte . CPAREN SCOLON

    CPAREN          shift and go to state 280


state 272

    (57) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte . COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 281


state 273

    (100) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .

    CPAREN          reduce using rule 100 (mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .)


state 274

    (84) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .

    ID              reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)


state 275

    (94) expfunc -> ID COMMA ID COMMA ID .

    CPAREN          reduce using rule 94 (expfunc -> ID COMMA ID COMMA ID .)


state 276

    (95) expfunc -> varcte COMMA varcte COMMA varcte .

    CPAREN          reduce using rule 95 (expfunc -> varcte COMMA varcte COMMA varcte .)


state 277

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 . block
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 282

state 278

    (55) cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .

    ID              reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    IF              reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PRINT           reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PLOT            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNT           reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNTIF         reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEAN            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEDIAN          reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MODE            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    STDV            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    KMEANS          reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DERL            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DBERN           reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DPOI            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    TRANSPOSE       reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    INVERSE         reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    ROTATE          reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    REF             reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    RREF            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MONT            reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CBRACKET        reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CPAREN          reduce using rule 55 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)


state 279

    (61) plot2 -> LCOR varcte COMMA varcte RCOR COMMA . plot2
    (60) plot2 -> . LCOR varcte COMMA varcte RCOR
    (61) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (62) plot2 -> . empty
    (105) empty -> .

    LCOR            shift and go to state 124
    CPAREN          reduce using rule 105 (empty -> .)

    plot2                          shift and go to state 283
    empty                          shift and go to state 284

state 280

    (56) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN . SCOLON

    SCOLON          shift and go to state 285


state 281

    (57) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA . cond CPAREN SCOLON
    (54) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (55) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON

    IF              shift and go to state 36

    cond                           shift and go to state 286

state 282

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .

    FUNC            reduce using rule 14 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)
    OBRACKET        reduce using rule 14 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)


state 283

    (61) plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .

    CPAREN          reduce using rule 61 (plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .)


state 284

    (62) plot2 -> empty .

    CPAREN          reduce using rule 62 (plot2 -> empty .)


state 285

    (56) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .

    ID              reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    IF              reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PRINT           reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PLOT            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNT           reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNTIF         reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEAN            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEDIAN          reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MODE            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    STDV            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    KMEANS          reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DERL            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DBERN           reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DPOI            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    INVERSE         reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    ROTATE          reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    REF             reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    RREF            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MONT            reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    CBRACKET        reduce using rule 56 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)


state 286

    (57) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond . CPAREN SCOLON

    CPAREN          shift and go to state 287


state 287

    (57) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN . SCOLON

    SCOLON          shift and go to state 288


state 288

    (57) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .

    ID              reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    IF              reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PRINT           reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PLOT            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNT           reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNTIF         reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEAN            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEDIAN          reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MODE            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    STDV            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    KMEANS          reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DERL            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DBERN           reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DPOI            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    INVERSE         reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    ROTATE          reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    REF             reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    RREF            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MONT            reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    CBRACKET        reduce using rule 57 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOR in state 66 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 136 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 140 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 163 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 165 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 204 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 206 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 214 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 253 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (lugstat3 -> modules)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 26 resolved using rule (block2 -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 117 resolved using rule (varcte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 123 resolved using rule (plot2 -> empty)
WARNING: rejected rule (xyfunc -> empty) in state 123
WARNING: reduce/reduce conflict in state 213 resolved using rule (escrt3 -> ID)
WARNING: rejected rule (empty -> <empty>) in state 213
