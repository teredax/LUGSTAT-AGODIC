Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CHARACTER
    COMMENT
    CTED
    CTEI
    DIFF
    EQ
    GRE
    GREATEQ
    GREATERTHAN
    INTEGER
    LESSEQ
    LESSTHAN
    LOGICAL
    OR
    PER
    QUOTE
    TIPO

Grammar

Rule 0     S' -> lugstat
Rule 1     lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block
Rule 2     lugstat2 -> vars
Rule 3     lugstat2 -> empty
Rule 4     lugstat3 -> modules
Rule 5     lugstat3 -> modules lugstat3
Rule 6     lugstat3 -> empty
Rule 7     vars -> VAR vars1
Rule 8     vars1 -> ID COLON tipo SCOLON
Rule 9     vars1 -> ID COMMA savename vars1
Rule 10    vars1 -> ID asign2 COLON tipo SCOLON
Rule 11    vars1 -> ID asign2 COMMA vars1
Rule 12    savename -> empty
Rule 13    modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
Rule 14    addfunction -> empty
Rule 15    modules2 -> vars
Rule 16    modules2 -> empty
Rule 17    block -> OBRACKET block2 CBRACKET
Rule 18    block2 -> estatuto
Rule 19    block2 -> estatuto block2
Rule 20    block2 -> empty
Rule 21    tipo -> INT
Rule 22    tipo -> BOOL
Rule 23    tipo -> DOUBLE
Rule 24    tipo -> STRING
Rule 25    tipo -> CHAR
Rule 26    estatuto -> asign
Rule 27    estatuto -> cond
Rule 28    estatuto -> escrt
Rule 29    estatuto -> plot
Rule 30    estatuto -> count
Rule 31    estatuto -> countif
Rule 32    estatuto -> metodos
Rule 33    asign -> ID EQUALS expresion SCOLON
Rule 34    asign -> ID EQUALS ID SCOLON
Rule 35    asign -> ID EQUALS ID asign2 SCOLON
Rule 36    asign -> ID asign2 EQUALS ID SCOLON
Rule 37    asign -> ID asign2 EQUALS expresion SCOLON
Rule 38    asign -> ID asign2 EQUALS ID asign2 SCOLON
Rule 39    asign2 -> LCOR expresion RCOR asign3
Rule 40    asign2 -> LCOR varcte RCOR asign3
Rule 41    asign3 -> LCOR expresion RCOR
Rule 42    asign3 -> LCOR varcte RCOR
Rule 43    asign3 -> empty
Rule 44    escrt -> PRINT OPAREN expresion CPAREN SCOLON
Rule 45    escrt -> PRINT OPAREN CPAREN SCOLON
Rule 46    escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON
Rule 47    escrt -> PRINT OPAREN STRING CPAREN SCOLON
Rule 48    escrt2 -> COMMA escrt3
Rule 49    escrt2 -> empty
Rule 50    escrt3 -> ID escrt2
Rule 51    escrt3 -> ID
Rule 52    escrt3 -> STRING escrt2 escrt2
Rule 53    cond -> IF OPAREN expresion CPAREN block SCOLON
Rule 54    cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON
Rule 55    count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
Rule 56    countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
Rule 57    plot -> PLOT OPAREN xyfunc CPAREN SCOLON
Rule 58    plot -> PLOT OPAREN plot2 CPAREN SCOLON
Rule 59    plot2 -> LCOR varcte COMMA varcte RCOR
Rule 60    plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2
Rule 61    plot2 -> empty
Rule 62    xyfunc -> FX EQUALS exp SCOLON xyfunc
Rule 63    xyfunc -> FY EQUALS exp SCOLON xyfunc
Rule 64    xyfunc -> empty
Rule 65    expresion -> exp
Rule 66    expresion -> expresion RELOP exp
Rule 67    exp -> termino
Rule 68    exp -> termino PLUS exp
Rule 69    exp -> termino MINUS exp
Rule 70    termino -> factor
Rule 71    termino -> factor MULT termino
Rule 72    termino -> factor DIV termino
Rule 73    factor -> OPAREN expresion CPAREN
Rule 74    factor -> PLUS varcte
Rule 75    factor -> MINUS varcte
Rule 76    factor -> varcte
Rule 77    varcte -> ID
Rule 78    varcte -> ID asign2
Rule 79    varcte -> NUMERIC
Rule 80    varcte -> NUMBER
Rule 81    metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON
Rule 82    metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON
Rule 83    metodos -> MODE OPAREN mmmfunc CPAREN SCOLON
Rule 84    metodos -> STDV OPAREN mmmfunc CPAREN SCOLON
Rule 85    metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
Rule 86    metodos -> DERL OPAREN expfunc CPAREN SCOLON
Rule 87    metodos -> DBERN OPAREN expfunc CPAREN SCOLON
Rule 88    metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON
Rule 89    metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
Rule 90    metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON
Rule 91    metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON
Rule 92    metodos -> REF OPAREN mmmfunc CPAREN SCOLON
Rule 93    metodos -> RREF OPAREN mmmfunc CPAREN SCOLON
Rule 94    metodos -> MONT OPAREN mmmfunc CPAREN SCOLON
Rule 95    expfunc -> ID COMMA ID COMMA ID
Rule 96    expfunc -> varcte COMMA varcte COMMA varcte
Rule 97    expfunc2 -> ID COMMA ID
Rule 98    expfunc2 -> varcte COMMA varcte
Rule 99    mmmfunc -> ID
Rule 100   mmmfunc -> OBRACKET mmmarray CBRACKET
Rule 101   mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc
Rule 102   mmmfunc -> empty
Rule 103   mmmarray -> varcte
Rule 104   mmmarray -> varcte COMMA mmmarray
Rule 105   mmmarray -> empty
Rule 106   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOL                 : 22
CBRACKET             : 17 100 101
CHAR                 : 25
CHARACTER            : 
COLON                : 8 10 13
COMMA                : 9 11 48 55 55 56 56 56 59 60 60 85 95 95 96 96 97 98 101 104
COMMENT              : 
COUNT                : 55
COUNTIF              : 56
CPAREN               : 13 44 45 46 47 53 54 55 56 57 58 73 81 82 83 84 85 86 87 88 89 90 91 92 93 94
CTED                 : 
CTEI                 : 
DBERN                : 87
DERL                 : 86
DIFF                 : 
DIV                  : 72
DOUBLE               : 23
DPOI                 : 88
ELSE                 : 54
EQ                   : 
EQUALS               : 33 34 35 36 37 38 62 63
FUNC                 : 13
FX                   : 62
FY                   : 63
GRE                  : 
GREATEQ              : 
GREATERTHAN          : 
ID                   : 1 8 9 10 11 13 33 34 34 35 35 36 36 37 38 38 46 50 51 55 56 77 78 95 95 95 97 97 99
IF                   : 53 54
INT                  : 21
INTEGER              : 
INVERSE              : 90
KMEANS               : 85
LCOR                 : 39 40 41 42 59 60
LESSEQ               : 
LESSTHAN             : 
LOGICAL              : 
LUGSTAT              : 1
MEAN                 : 81
MEDIAN               : 82
MINUS                : 69 75
MODE                 : 83
MONT                 : 94
MULT                 : 71
NUMBER               : 80
NUMERIC              : 79
OBRACKET             : 17 100 101
OPAREN               : 13 44 45 46 47 53 54 55 56 57 58 73 81 82 83 84 85 86 87 88 89 90 91 92 93 94
OR                   : 
PER                  : 
PLOT                 : 57 58
PLUS                 : 68 74
PRINT                : 44 45 46 47
QUOTE                : 
RCOR                 : 39 40 41 42 59 60
REF                  : 92
RELOP                : 66
ROTATE               : 91
RREF                 : 93
SCOLON               : 1 8 10 33 34 35 36 37 38 44 45 46 47 53 54 55 56 57 58 62 63 81 82 83 84 85 86 87 88 89 90 91 92 93 94
STDV                 : 84
STRING               : 24 47 52
TIPO                 : 
TRANSPOSE            : 89
VAR                  : 7
error                : 

Nonterminals, with rules where they appear

addfunction          : 13
asign                : 26
asign2               : 10 11 35 36 37 38 38 78
asign3               : 39 40
block                : 1 13 53 54 54
block2               : 17 19
cond                 : 27 56
count                : 30
countif              : 31
empty                : 3 6 12 14 16 20 43 49 61 64 102 105
escrt                : 28
escrt2               : 46 50 52 52
escrt3               : 48
estatuto             : 18 19
exp                  : 62 63 65 66 68 69
expfunc              : 86 87
expfunc2             : 88
expresion            : 33 37 39 41 44 53 54 66 73
factor               : 70 71 72
lugstat              : 0
lugstat2             : 1
lugstat3             : 1 5
metodos              : 32
mmmarray             : 100 101 104
mmmfunc              : 81 82 83 84 85 89 90 91 92 93 94 101
modules              : 4 5
modules2             : 13 13
plot                 : 29
plot2                : 58 60
savename             : 9
termino              : 67 68 69 71 72
tipo                 : 8 10 13
varcte               : 40 42 55 55 56 56 59 59 60 60 74 75 76 85 96 96 96 98 98 103 104
vars                 : 2 15
vars1                : 7 9 11
xyfunc               : 57 62 63

Parsing method: LALR

state 0

    (0) S' -> . lugstat
    (1) lugstat -> . LUGSTAT ID SCOLON lugstat2 lugstat3 block

    LUGSTAT         shift and go to state 2

    lugstat                        shift and go to state 1

state 1

    (0) S' -> lugstat .



state 2

    (1) lugstat -> LUGSTAT . ID SCOLON lugstat2 lugstat3 block

    ID              shift and go to state 3


state 3

    (1) lugstat -> LUGSTAT ID . SCOLON lugstat2 lugstat3 block

    SCOLON          shift and go to state 4


state 4

    (1) lugstat -> LUGSTAT ID SCOLON . lugstat2 lugstat3 block
    (2) lugstat2 -> . vars
    (3) lugstat2 -> . empty
    (7) vars -> . VAR vars1
    (106) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 106 (empty -> .)
    OBRACKET        reduce using rule 106 (empty -> .)

    lugstat2                       shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 . lugstat3 block
    (4) lugstat3 -> . modules
    (5) lugstat3 -> . modules lugstat3
    (6) lugstat3 -> . empty
    (13) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (106) empty -> .

    FUNC            shift and go to state 12
    OBRACKET        reduce using rule 106 (empty -> .)

    lugstat3                       shift and go to state 9
    modules                        shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) lugstat2 -> vars .

    FUNC            reduce using rule 2 (lugstat2 -> vars .)
    OBRACKET        reduce using rule 2 (lugstat2 -> vars .)


state 7

    (3) lugstat2 -> empty .

    FUNC            reduce using rule 3 (lugstat2 -> empty .)
    OBRACKET        reduce using rule 3 (lugstat2 -> empty .)


state 8

    (7) vars -> VAR . vars1
    (8) vars1 -> . ID COLON tipo SCOLON
    (9) vars1 -> . ID COMMA savename vars1
    (10) vars1 -> . ID asign2 COLON tipo SCOLON
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 13

state 9

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 . block
    (17) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 15

state 10

    (4) lugstat3 -> modules .
    (5) lugstat3 -> modules . lugstat3
    (4) lugstat3 -> . modules
    (5) lugstat3 -> . modules lugstat3
    (6) lugstat3 -> . empty
    (13) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (106) empty -> .

  ! reduce/reduce conflict for OBRACKET resolved using rule 4 (lugstat3 -> modules .)
    OBRACKET        reduce using rule 4 (lugstat3 -> modules .)
    FUNC            shift and go to state 12

  ! OBRACKET        [ reduce using rule 106 (empty -> .) ]

    modules                        shift and go to state 10
    lugstat3                       shift and go to state 17
    empty                          shift and go to state 11

state 11

    (6) lugstat3 -> empty .

    OBRACKET        reduce using rule 6 (lugstat3 -> empty .)


state 12

    (13) modules -> FUNC . ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    ID              shift and go to state 18


state 13

    (7) vars -> VAR vars1 .

    FUNC            reduce using rule 7 (vars -> VAR vars1 .)
    OBRACKET        reduce using rule 7 (vars -> VAR vars1 .)
    CPAREN          reduce using rule 7 (vars -> VAR vars1 .)


state 14

    (8) vars1 -> ID . COLON tipo SCOLON
    (9) vars1 -> ID . COMMA savename vars1
    (10) vars1 -> ID . asign2 COLON tipo SCOLON
    (11) vars1 -> ID . asign2 COMMA vars1
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

    COLON           shift and go to state 19
    COMMA           shift and go to state 20
    LCOR            shift and go to state 22

    asign2                         shift and go to state 21

state 15

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block .

    $end            reduce using rule 1 (lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block .)


state 16

    (17) block -> OBRACKET . block2 CBRACKET
    (18) block2 -> . estatuto
    (19) block2 -> . estatuto block2
    (20) block2 -> . empty
    (26) estatuto -> . asign
    (27) estatuto -> . cond
    (28) estatuto -> . escrt
    (29) estatuto -> . plot
    (30) estatuto -> . count
    (31) estatuto -> . countif
    (32) estatuto -> . metodos
    (106) empty -> .
    (33) asign -> . ID EQUALS expresion SCOLON
    (34) asign -> . ID EQUALS ID SCOLON
    (35) asign -> . ID EQUALS ID asign2 SCOLON
    (36) asign -> . ID asign2 EQUALS ID SCOLON
    (37) asign -> . ID asign2 EQUALS expresion SCOLON
    (38) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (53) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (54) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (44) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (45) escrt -> . PRINT OPAREN CPAREN SCOLON
    (46) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (57) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (58) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (55) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (56) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (81) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (84) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (85) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (86) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (87) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (88) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (89) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (94) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

    CBRACKET        reduce using rule 106 (empty -> .)
    ID              shift and go to state 33
    IF              shift and go to state 34
    PRINT           shift and go to state 35
    PLOT            shift and go to state 36
    COUNT           shift and go to state 37
    COUNTIF         shift and go to state 38
    MEAN            shift and go to state 39
    MEDIAN          shift and go to state 40
    MODE            shift and go to state 41
    STDV            shift and go to state 42
    KMEANS          shift and go to state 43
    DERL            shift and go to state 44
    DBERN           shift and go to state 45
    DPOI            shift and go to state 46
    TRANSPOSE       shift and go to state 47
    INVERSE         shift and go to state 48
    ROTATE          shift and go to state 49
    REF             shift and go to state 50
    RREF            shift and go to state 51
    MONT            shift and go to state 52

    block2                         shift and go to state 23
    estatuto                       shift and go to state 24
    empty                          shift and go to state 25
    asign                          shift and go to state 26
    cond                           shift and go to state 27
    escrt                          shift and go to state 28
    plot                           shift and go to state 29
    count                          shift and go to state 30
    countif                        shift and go to state 31
    metodos                        shift and go to state 32

state 17

    (5) lugstat3 -> modules lugstat3 .

    OBRACKET        reduce using rule 5 (lugstat3 -> modules lugstat3 .)


state 18

    (13) modules -> FUNC ID . COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    COLON           shift and go to state 53


state 19

    (8) vars1 -> ID COLON . tipo SCOLON
    (21) tipo -> . INT
    (22) tipo -> . BOOL
    (23) tipo -> . DOUBLE
    (24) tipo -> . STRING
    (25) tipo -> . CHAR

    INT             shift and go to state 55
    BOOL            shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59

    tipo                           shift and go to state 54

state 20

    (9) vars1 -> ID COMMA . savename vars1
    (12) savename -> . empty
    (106) empty -> .

    ID              reduce using rule 106 (empty -> .)

    savename                       shift and go to state 60
    empty                          shift and go to state 61

state 21

    (10) vars1 -> ID asign2 . COLON tipo SCOLON
    (11) vars1 -> ID asign2 . COMMA vars1

    COLON           shift and go to state 62
    COMMA           shift and go to state 63


state 22

    (39) asign2 -> LCOR . expresion RCOR asign3
    (40) asign2 -> LCOR . varcte RCOR asign3
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69
    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72

    expresion                      shift and go to state 64
    varcte                         shift and go to state 65
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73

state 23

    (17) block -> OBRACKET block2 . CBRACKET

    CBRACKET        shift and go to state 75


state 24

    (18) block2 -> estatuto .
    (19) block2 -> estatuto . block2
    (18) block2 -> . estatuto
    (19) block2 -> . estatuto block2
    (20) block2 -> . empty
    (26) estatuto -> . asign
    (27) estatuto -> . cond
    (28) estatuto -> . escrt
    (29) estatuto -> . plot
    (30) estatuto -> . count
    (31) estatuto -> . countif
    (32) estatuto -> . metodos
    (106) empty -> .
    (33) asign -> . ID EQUALS expresion SCOLON
    (34) asign -> . ID EQUALS ID SCOLON
    (35) asign -> . ID EQUALS ID asign2 SCOLON
    (36) asign -> . ID asign2 EQUALS ID SCOLON
    (37) asign -> . ID asign2 EQUALS expresion SCOLON
    (38) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (53) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (54) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (44) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (45) escrt -> . PRINT OPAREN CPAREN SCOLON
    (46) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (57) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (58) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (55) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (56) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (81) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (84) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (85) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (86) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (87) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (88) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (89) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (94) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

  ! reduce/reduce conflict for CBRACKET resolved using rule 18 (block2 -> estatuto .)
    CBRACKET        reduce using rule 18 (block2 -> estatuto .)
    ID              shift and go to state 33
    IF              shift and go to state 34
    PRINT           shift and go to state 35
    PLOT            shift and go to state 36
    COUNT           shift and go to state 37
    COUNTIF         shift and go to state 38
    MEAN            shift and go to state 39
    MEDIAN          shift and go to state 40
    MODE            shift and go to state 41
    STDV            shift and go to state 42
    KMEANS          shift and go to state 43
    DERL            shift and go to state 44
    DBERN           shift and go to state 45
    DPOI            shift and go to state 46
    TRANSPOSE       shift and go to state 47
    INVERSE         shift and go to state 48
    ROTATE          shift and go to state 49
    REF             shift and go to state 50
    RREF            shift and go to state 51
    MONT            shift and go to state 52

  ! CBRACKET        [ reduce using rule 106 (empty -> .) ]

    estatuto                       shift and go to state 24
    block2                         shift and go to state 76
    empty                          shift and go to state 25
    asign                          shift and go to state 26
    cond                           shift and go to state 27
    escrt                          shift and go to state 28
    plot                           shift and go to state 29
    count                          shift and go to state 30
    countif                        shift and go to state 31
    metodos                        shift and go to state 32

state 25

    (20) block2 -> empty .

    CBRACKET        reduce using rule 20 (block2 -> empty .)


state 26

    (26) estatuto -> asign .

    ID              reduce using rule 26 (estatuto -> asign .)
    IF              reduce using rule 26 (estatuto -> asign .)
    PRINT           reduce using rule 26 (estatuto -> asign .)
    PLOT            reduce using rule 26 (estatuto -> asign .)
    COUNT           reduce using rule 26 (estatuto -> asign .)
    COUNTIF         reduce using rule 26 (estatuto -> asign .)
    MEAN            reduce using rule 26 (estatuto -> asign .)
    MEDIAN          reduce using rule 26 (estatuto -> asign .)
    MODE            reduce using rule 26 (estatuto -> asign .)
    STDV            reduce using rule 26 (estatuto -> asign .)
    KMEANS          reduce using rule 26 (estatuto -> asign .)
    DERL            reduce using rule 26 (estatuto -> asign .)
    DBERN           reduce using rule 26 (estatuto -> asign .)
    DPOI            reduce using rule 26 (estatuto -> asign .)
    TRANSPOSE       reduce using rule 26 (estatuto -> asign .)
    INVERSE         reduce using rule 26 (estatuto -> asign .)
    ROTATE          reduce using rule 26 (estatuto -> asign .)
    REF             reduce using rule 26 (estatuto -> asign .)
    RREF            reduce using rule 26 (estatuto -> asign .)
    MONT            reduce using rule 26 (estatuto -> asign .)
    CBRACKET        reduce using rule 26 (estatuto -> asign .)


state 27

    (27) estatuto -> cond .

    ID              reduce using rule 27 (estatuto -> cond .)
    IF              reduce using rule 27 (estatuto -> cond .)
    PRINT           reduce using rule 27 (estatuto -> cond .)
    PLOT            reduce using rule 27 (estatuto -> cond .)
    COUNT           reduce using rule 27 (estatuto -> cond .)
    COUNTIF         reduce using rule 27 (estatuto -> cond .)
    MEAN            reduce using rule 27 (estatuto -> cond .)
    MEDIAN          reduce using rule 27 (estatuto -> cond .)
    MODE            reduce using rule 27 (estatuto -> cond .)
    STDV            reduce using rule 27 (estatuto -> cond .)
    KMEANS          reduce using rule 27 (estatuto -> cond .)
    DERL            reduce using rule 27 (estatuto -> cond .)
    DBERN           reduce using rule 27 (estatuto -> cond .)
    DPOI            reduce using rule 27 (estatuto -> cond .)
    TRANSPOSE       reduce using rule 27 (estatuto -> cond .)
    INVERSE         reduce using rule 27 (estatuto -> cond .)
    ROTATE          reduce using rule 27 (estatuto -> cond .)
    REF             reduce using rule 27 (estatuto -> cond .)
    RREF            reduce using rule 27 (estatuto -> cond .)
    MONT            reduce using rule 27 (estatuto -> cond .)
    CBRACKET        reduce using rule 27 (estatuto -> cond .)


state 28

    (28) estatuto -> escrt .

    ID              reduce using rule 28 (estatuto -> escrt .)
    IF              reduce using rule 28 (estatuto -> escrt .)
    PRINT           reduce using rule 28 (estatuto -> escrt .)
    PLOT            reduce using rule 28 (estatuto -> escrt .)
    COUNT           reduce using rule 28 (estatuto -> escrt .)
    COUNTIF         reduce using rule 28 (estatuto -> escrt .)
    MEAN            reduce using rule 28 (estatuto -> escrt .)
    MEDIAN          reduce using rule 28 (estatuto -> escrt .)
    MODE            reduce using rule 28 (estatuto -> escrt .)
    STDV            reduce using rule 28 (estatuto -> escrt .)
    KMEANS          reduce using rule 28 (estatuto -> escrt .)
    DERL            reduce using rule 28 (estatuto -> escrt .)
    DBERN           reduce using rule 28 (estatuto -> escrt .)
    DPOI            reduce using rule 28 (estatuto -> escrt .)
    TRANSPOSE       reduce using rule 28 (estatuto -> escrt .)
    INVERSE         reduce using rule 28 (estatuto -> escrt .)
    ROTATE          reduce using rule 28 (estatuto -> escrt .)
    REF             reduce using rule 28 (estatuto -> escrt .)
    RREF            reduce using rule 28 (estatuto -> escrt .)
    MONT            reduce using rule 28 (estatuto -> escrt .)
    CBRACKET        reduce using rule 28 (estatuto -> escrt .)


state 29

    (29) estatuto -> plot .

    ID              reduce using rule 29 (estatuto -> plot .)
    IF              reduce using rule 29 (estatuto -> plot .)
    PRINT           reduce using rule 29 (estatuto -> plot .)
    PLOT            reduce using rule 29 (estatuto -> plot .)
    COUNT           reduce using rule 29 (estatuto -> plot .)
    COUNTIF         reduce using rule 29 (estatuto -> plot .)
    MEAN            reduce using rule 29 (estatuto -> plot .)
    MEDIAN          reduce using rule 29 (estatuto -> plot .)
    MODE            reduce using rule 29 (estatuto -> plot .)
    STDV            reduce using rule 29 (estatuto -> plot .)
    KMEANS          reduce using rule 29 (estatuto -> plot .)
    DERL            reduce using rule 29 (estatuto -> plot .)
    DBERN           reduce using rule 29 (estatuto -> plot .)
    DPOI            reduce using rule 29 (estatuto -> plot .)
    TRANSPOSE       reduce using rule 29 (estatuto -> plot .)
    INVERSE         reduce using rule 29 (estatuto -> plot .)
    ROTATE          reduce using rule 29 (estatuto -> plot .)
    REF             reduce using rule 29 (estatuto -> plot .)
    RREF            reduce using rule 29 (estatuto -> plot .)
    MONT            reduce using rule 29 (estatuto -> plot .)
    CBRACKET        reduce using rule 29 (estatuto -> plot .)


state 30

    (30) estatuto -> count .

    ID              reduce using rule 30 (estatuto -> count .)
    IF              reduce using rule 30 (estatuto -> count .)
    PRINT           reduce using rule 30 (estatuto -> count .)
    PLOT            reduce using rule 30 (estatuto -> count .)
    COUNT           reduce using rule 30 (estatuto -> count .)
    COUNTIF         reduce using rule 30 (estatuto -> count .)
    MEAN            reduce using rule 30 (estatuto -> count .)
    MEDIAN          reduce using rule 30 (estatuto -> count .)
    MODE            reduce using rule 30 (estatuto -> count .)
    STDV            reduce using rule 30 (estatuto -> count .)
    KMEANS          reduce using rule 30 (estatuto -> count .)
    DERL            reduce using rule 30 (estatuto -> count .)
    DBERN           reduce using rule 30 (estatuto -> count .)
    DPOI            reduce using rule 30 (estatuto -> count .)
    TRANSPOSE       reduce using rule 30 (estatuto -> count .)
    INVERSE         reduce using rule 30 (estatuto -> count .)
    ROTATE          reduce using rule 30 (estatuto -> count .)
    REF             reduce using rule 30 (estatuto -> count .)
    RREF            reduce using rule 30 (estatuto -> count .)
    MONT            reduce using rule 30 (estatuto -> count .)
    CBRACKET        reduce using rule 30 (estatuto -> count .)


state 31

    (31) estatuto -> countif .

    ID              reduce using rule 31 (estatuto -> countif .)
    IF              reduce using rule 31 (estatuto -> countif .)
    PRINT           reduce using rule 31 (estatuto -> countif .)
    PLOT            reduce using rule 31 (estatuto -> countif .)
    COUNT           reduce using rule 31 (estatuto -> countif .)
    COUNTIF         reduce using rule 31 (estatuto -> countif .)
    MEAN            reduce using rule 31 (estatuto -> countif .)
    MEDIAN          reduce using rule 31 (estatuto -> countif .)
    MODE            reduce using rule 31 (estatuto -> countif .)
    STDV            reduce using rule 31 (estatuto -> countif .)
    KMEANS          reduce using rule 31 (estatuto -> countif .)
    DERL            reduce using rule 31 (estatuto -> countif .)
    DBERN           reduce using rule 31 (estatuto -> countif .)
    DPOI            reduce using rule 31 (estatuto -> countif .)
    TRANSPOSE       reduce using rule 31 (estatuto -> countif .)
    INVERSE         reduce using rule 31 (estatuto -> countif .)
    ROTATE          reduce using rule 31 (estatuto -> countif .)
    REF             reduce using rule 31 (estatuto -> countif .)
    RREF            reduce using rule 31 (estatuto -> countif .)
    MONT            reduce using rule 31 (estatuto -> countif .)
    CBRACKET        reduce using rule 31 (estatuto -> countif .)


state 32

    (32) estatuto -> metodos .

    ID              reduce using rule 32 (estatuto -> metodos .)
    IF              reduce using rule 32 (estatuto -> metodos .)
    PRINT           reduce using rule 32 (estatuto -> metodos .)
    PLOT            reduce using rule 32 (estatuto -> metodos .)
    COUNT           reduce using rule 32 (estatuto -> metodos .)
    COUNTIF         reduce using rule 32 (estatuto -> metodos .)
    MEAN            reduce using rule 32 (estatuto -> metodos .)
    MEDIAN          reduce using rule 32 (estatuto -> metodos .)
    MODE            reduce using rule 32 (estatuto -> metodos .)
    STDV            reduce using rule 32 (estatuto -> metodos .)
    KMEANS          reduce using rule 32 (estatuto -> metodos .)
    DERL            reduce using rule 32 (estatuto -> metodos .)
    DBERN           reduce using rule 32 (estatuto -> metodos .)
    DPOI            reduce using rule 32 (estatuto -> metodos .)
    TRANSPOSE       reduce using rule 32 (estatuto -> metodos .)
    INVERSE         reduce using rule 32 (estatuto -> metodos .)
    ROTATE          reduce using rule 32 (estatuto -> metodos .)
    REF             reduce using rule 32 (estatuto -> metodos .)
    RREF            reduce using rule 32 (estatuto -> metodos .)
    MONT            reduce using rule 32 (estatuto -> metodos .)
    CBRACKET        reduce using rule 32 (estatuto -> metodos .)


state 33

    (33) asign -> ID . EQUALS expresion SCOLON
    (34) asign -> ID . EQUALS ID SCOLON
    (35) asign -> ID . EQUALS ID asign2 SCOLON
    (36) asign -> ID . asign2 EQUALS ID SCOLON
    (37) asign -> ID . asign2 EQUALS expresion SCOLON
    (38) asign -> ID . asign2 EQUALS ID asign2 SCOLON
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

    EQUALS          shift and go to state 77
    LCOR            shift and go to state 22

    asign2                         shift and go to state 78

state 34

    (53) cond -> IF . OPAREN expresion CPAREN block SCOLON
    (54) cond -> IF . OPAREN expresion CPAREN block ELSE block SCOLON

    OPAREN          shift and go to state 79


state 35

    (44) escrt -> PRINT . OPAREN expresion CPAREN SCOLON
    (45) escrt -> PRINT . OPAREN CPAREN SCOLON
    (46) escrt -> PRINT . OPAREN ID escrt2 CPAREN SCOLON
    (47) escrt -> PRINT . OPAREN STRING CPAREN SCOLON

    OPAREN          shift and go to state 80


state 36

    (57) plot -> PLOT . OPAREN xyfunc CPAREN SCOLON
    (58) plot -> PLOT . OPAREN plot2 CPAREN SCOLON

    OPAREN          shift and go to state 81


state 37

    (55) count -> COUNT . OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON

    OPAREN          shift and go to state 82


state 38

    (56) countif -> COUNTIF . OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    OPAREN          shift and go to state 83


state 39

    (81) metodos -> MEAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 84


state 40

    (82) metodos -> MEDIAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 85


state 41

    (83) metodos -> MODE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 86


state 42

    (84) metodos -> STDV . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 87


state 43

    (85) metodos -> KMEANS . OPAREN varcte COMMA mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 88


state 44

    (86) metodos -> DERL . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 89


state 45

    (87) metodos -> DBERN . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 90


state 46

    (88) metodos -> DPOI . OPAREN expfunc2 CPAREN SCOLON

    OPAREN          shift and go to state 91


state 47

    (89) metodos -> TRANSPOSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 92


state 48

    (90) metodos -> INVERSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 93


state 49

    (91) metodos -> ROTATE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 94


state 50

    (92) metodos -> REF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 95


state 51

    (93) metodos -> RREF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 96


state 52

    (94) metodos -> MONT . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 97


state 53

    (13) modules -> FUNC ID COLON . tipo addfunction OPAREN modules2 CPAREN modules2 block
    (21) tipo -> . INT
    (22) tipo -> . BOOL
    (23) tipo -> . DOUBLE
    (24) tipo -> . STRING
    (25) tipo -> . CHAR

    INT             shift and go to state 55
    BOOL            shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59

    tipo                           shift and go to state 98

state 54

    (8) vars1 -> ID COLON tipo . SCOLON

    SCOLON          shift and go to state 99


state 55

    (21) tipo -> INT .

    SCOLON          reduce using rule 21 (tipo -> INT .)
    OPAREN          reduce using rule 21 (tipo -> INT .)


state 56

    (22) tipo -> BOOL .

    SCOLON          reduce using rule 22 (tipo -> BOOL .)
    OPAREN          reduce using rule 22 (tipo -> BOOL .)


state 57

    (23) tipo -> DOUBLE .

    SCOLON          reduce using rule 23 (tipo -> DOUBLE .)
    OPAREN          reduce using rule 23 (tipo -> DOUBLE .)


state 58

    (24) tipo -> STRING .

    SCOLON          reduce using rule 24 (tipo -> STRING .)
    OPAREN          reduce using rule 24 (tipo -> STRING .)


state 59

    (25) tipo -> CHAR .

    SCOLON          reduce using rule 25 (tipo -> CHAR .)
    OPAREN          reduce using rule 25 (tipo -> CHAR .)


state 60

    (9) vars1 -> ID COMMA savename . vars1
    (8) vars1 -> . ID COLON tipo SCOLON
    (9) vars1 -> . ID COMMA savename vars1
    (10) vars1 -> . ID asign2 COLON tipo SCOLON
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 100

state 61

    (12) savename -> empty .

    ID              reduce using rule 12 (savename -> empty .)


state 62

    (10) vars1 -> ID asign2 COLON . tipo SCOLON
    (21) tipo -> . INT
    (22) tipo -> . BOOL
    (23) tipo -> . DOUBLE
    (24) tipo -> . STRING
    (25) tipo -> . CHAR

    INT             shift and go to state 55
    BOOL            shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59

    tipo                           shift and go to state 101

state 63

    (11) vars1 -> ID asign2 COMMA . vars1
    (8) vars1 -> . ID COLON tipo SCOLON
    (9) vars1 -> . ID COMMA savename vars1
    (10) vars1 -> . ID asign2 COLON tipo SCOLON
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 102

state 64

    (39) asign2 -> LCOR expresion . RCOR asign3
    (66) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 103
    RELOP           shift and go to state 104


state 65

    (40) asign2 -> LCOR varcte . RCOR asign3
    (76) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 105
    MULT            reduce using rule 76 (factor -> varcte .)
    DIV             reduce using rule 76 (factor -> varcte .)
    PLUS            reduce using rule 76 (factor -> varcte .)
    MINUS           reduce using rule 76 (factor -> varcte .)
    RELOP           reduce using rule 76 (factor -> varcte .)

  ! RCOR            [ reduce using rule 76 (factor -> varcte .) ]


state 66

    (65) expresion -> exp .

    RCOR            reduce using rule 65 (expresion -> exp .)
    RELOP           reduce using rule 65 (expresion -> exp .)
    CPAREN          reduce using rule 65 (expresion -> exp .)
    SCOLON          reduce using rule 65 (expresion -> exp .)


state 67

    (77) varcte -> ID .
    (78) varcte -> ID . asign2
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

    RCOR            reduce using rule 77 (varcte -> ID .)
    MULT            reduce using rule 77 (varcte -> ID .)
    DIV             reduce using rule 77 (varcte -> ID .)
    PLUS            reduce using rule 77 (varcte -> ID .)
    MINUS           reduce using rule 77 (varcte -> ID .)
    RELOP           reduce using rule 77 (varcte -> ID .)
    CPAREN          reduce using rule 77 (varcte -> ID .)
    SCOLON          reduce using rule 77 (varcte -> ID .)
    COMMA           reduce using rule 77 (varcte -> ID .)
    CBRACKET        reduce using rule 77 (varcte -> ID .)
    LCOR            shift and go to state 22

    asign2                         shift and go to state 106

state 68

    (79) varcte -> NUMERIC .

    RCOR            reduce using rule 79 (varcte -> NUMERIC .)
    MULT            reduce using rule 79 (varcte -> NUMERIC .)
    DIV             reduce using rule 79 (varcte -> NUMERIC .)
    PLUS            reduce using rule 79 (varcte -> NUMERIC .)
    MINUS           reduce using rule 79 (varcte -> NUMERIC .)
    RELOP           reduce using rule 79 (varcte -> NUMERIC .)
    CPAREN          reduce using rule 79 (varcte -> NUMERIC .)
    SCOLON          reduce using rule 79 (varcte -> NUMERIC .)
    COMMA           reduce using rule 79 (varcte -> NUMERIC .)
    CBRACKET        reduce using rule 79 (varcte -> NUMERIC .)


state 69

    (80) varcte -> NUMBER .

    RCOR            reduce using rule 80 (varcte -> NUMBER .)
    MULT            reduce using rule 80 (varcte -> NUMBER .)
    DIV             reduce using rule 80 (varcte -> NUMBER .)
    PLUS            reduce using rule 80 (varcte -> NUMBER .)
    MINUS           reduce using rule 80 (varcte -> NUMBER .)
    RELOP           reduce using rule 80 (varcte -> NUMBER .)
    CPAREN          reduce using rule 80 (varcte -> NUMBER .)
    SCOLON          reduce using rule 80 (varcte -> NUMBER .)
    COMMA           reduce using rule 80 (varcte -> NUMBER .)
    CBRACKET        reduce using rule 80 (varcte -> NUMBER .)


state 70

    (67) exp -> termino .
    (68) exp -> termino . PLUS exp
    (69) exp -> termino . MINUS exp

    RCOR            reduce using rule 67 (exp -> termino .)
    RELOP           reduce using rule 67 (exp -> termino .)
    CPAREN          reduce using rule 67 (exp -> termino .)
    SCOLON          reduce using rule 67 (exp -> termino .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108


state 71

    (74) factor -> PLUS . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 109

state 72

    (75) factor -> MINUS . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 110

state 73

    (70) termino -> factor .
    (71) termino -> factor . MULT termino
    (72) termino -> factor . DIV termino

    PLUS            reduce using rule 70 (termino -> factor .)
    MINUS           reduce using rule 70 (termino -> factor .)
    RCOR            reduce using rule 70 (termino -> factor .)
    RELOP           reduce using rule 70 (termino -> factor .)
    CPAREN          reduce using rule 70 (termino -> factor .)
    SCOLON          reduce using rule 70 (termino -> factor .)
    MULT            shift and go to state 111
    DIV             shift and go to state 112


state 74

    (73) factor -> OPAREN . expresion CPAREN
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expresion                      shift and go to state 113
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 75

    (17) block -> OBRACKET block2 CBRACKET .

    $end            reduce using rule 17 (block -> OBRACKET block2 CBRACKET .)
    SCOLON          reduce using rule 17 (block -> OBRACKET block2 CBRACKET .)
    ELSE            reduce using rule 17 (block -> OBRACKET block2 CBRACKET .)
    FUNC            reduce using rule 17 (block -> OBRACKET block2 CBRACKET .)
    OBRACKET        reduce using rule 17 (block -> OBRACKET block2 CBRACKET .)


state 76

    (19) block2 -> estatuto block2 .

    CBRACKET        reduce using rule 19 (block2 -> estatuto block2 .)


state 77

    (33) asign -> ID EQUALS . expresion SCOLON
    (34) asign -> ID EQUALS . ID SCOLON
    (35) asign -> ID EQUALS . ID asign2 SCOLON
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 115
    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expresion                      shift and go to state 116
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 78

    (36) asign -> ID asign2 . EQUALS ID SCOLON
    (37) asign -> ID asign2 . EQUALS expresion SCOLON
    (38) asign -> ID asign2 . EQUALS ID asign2 SCOLON

    EQUALS          shift and go to state 117


state 79

    (53) cond -> IF OPAREN . expresion CPAREN block SCOLON
    (54) cond -> IF OPAREN . expresion CPAREN block ELSE block SCOLON
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expresion                      shift and go to state 118
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 80

    (44) escrt -> PRINT OPAREN . expresion CPAREN SCOLON
    (45) escrt -> PRINT OPAREN . CPAREN SCOLON
    (46) escrt -> PRINT OPAREN . ID escrt2 CPAREN SCOLON
    (47) escrt -> PRINT OPAREN . STRING CPAREN SCOLON
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    CPAREN          shift and go to state 120
    ID              shift and go to state 121
    STRING          shift and go to state 122
    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expresion                      shift and go to state 119
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 81

    (57) plot -> PLOT OPAREN . xyfunc CPAREN SCOLON
    (58) plot -> PLOT OPAREN . plot2 CPAREN SCOLON
    (62) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (63) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (64) xyfunc -> . empty
    (59) plot2 -> . LCOR varcte COMMA varcte RCOR
    (60) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (61) plot2 -> . empty
    (106) empty -> .

    FX              shift and go to state 125
    FY              shift and go to state 126
    LCOR            shift and go to state 128
    CPAREN          reduce using rule 106 (empty -> .)

    xyfunc                         shift and go to state 123
    plot2                          shift and go to state 124
    empty                          shift and go to state 127

state 82

    (55) count -> COUNT OPAREN . ID COMMA varcte COMMA varcte CPAREN SCOLON

    ID              shift and go to state 129


state 83

    (56) countif -> COUNTIF OPAREN . ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    ID              shift and go to state 130


state 84

    (81) metodos -> MEAN OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 131
    empty                          shift and go to state 134

state 85

    (82) metodos -> MEDIAN OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 135
    empty                          shift and go to state 134

state 86

    (83) metodos -> MODE OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 136
    empty                          shift and go to state 134

state 87

    (84) metodos -> STDV OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 137
    empty                          shift and go to state 134

state 88

    (85) metodos -> KMEANS OPAREN . varcte COMMA mmmfunc CPAREN SCOLON
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 138

state 89

    (86) metodos -> DERL OPAREN . expfunc CPAREN SCOLON
    (95) expfunc -> . ID COMMA ID COMMA ID
    (96) expfunc -> . varcte COMMA varcte COMMA varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 140
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expfunc                        shift and go to state 139
    varcte                         shift and go to state 141

state 90

    (87) metodos -> DBERN OPAREN . expfunc CPAREN SCOLON
    (95) expfunc -> . ID COMMA ID COMMA ID
    (96) expfunc -> . varcte COMMA varcte COMMA varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 140
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expfunc                        shift and go to state 142
    varcte                         shift and go to state 141

state 91

    (88) metodos -> DPOI OPAREN . expfunc2 CPAREN SCOLON
    (97) expfunc2 -> . ID COMMA ID
    (98) expfunc2 -> . varcte COMMA varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 144
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expfunc2                       shift and go to state 143
    varcte                         shift and go to state 145

state 92

    (89) metodos -> TRANSPOSE OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 146
    empty                          shift and go to state 134

state 93

    (90) metodos -> INVERSE OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 147
    empty                          shift and go to state 134

state 94

    (91) metodos -> ROTATE OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 148
    empty                          shift and go to state 134

state 95

    (92) metodos -> REF OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 149
    empty                          shift and go to state 134

state 96

    (93) metodos -> RREF OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 150
    empty                          shift and go to state 134

state 97

    (94) metodos -> MONT OPAREN . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 151
    empty                          shift and go to state 134

state 98

    (13) modules -> FUNC ID COLON tipo . addfunction OPAREN modules2 CPAREN modules2 block
    (14) addfunction -> . empty
    (106) empty -> .

    OPAREN          reduce using rule 106 (empty -> .)

    addfunction                    shift and go to state 152
    empty                          shift and go to state 153

state 99

    (8) vars1 -> ID COLON tipo SCOLON .

    FUNC            reduce using rule 8 (vars1 -> ID COLON tipo SCOLON .)
    OBRACKET        reduce using rule 8 (vars1 -> ID COLON tipo SCOLON .)
    CPAREN          reduce using rule 8 (vars1 -> ID COLON tipo SCOLON .)


state 100

    (9) vars1 -> ID COMMA savename vars1 .

    FUNC            reduce using rule 9 (vars1 -> ID COMMA savename vars1 .)
    OBRACKET        reduce using rule 9 (vars1 -> ID COMMA savename vars1 .)
    CPAREN          reduce using rule 9 (vars1 -> ID COMMA savename vars1 .)


state 101

    (10) vars1 -> ID asign2 COLON tipo . SCOLON

    SCOLON          shift and go to state 154


state 102

    (11) vars1 -> ID asign2 COMMA vars1 .

    FUNC            reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)
    OBRACKET        reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)
    CPAREN          reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)


state 103

    (39) asign2 -> LCOR expresion RCOR . asign3
    (41) asign3 -> . LCOR expresion RCOR
    (42) asign3 -> . LCOR varcte RCOR
    (43) asign3 -> . empty
    (106) empty -> .

    LCOR            shift and go to state 155
    COLON           reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    EQUALS          reduce using rule 106 (empty -> .)
    RCOR            reduce using rule 106 (empty -> .)
    MULT            reduce using rule 106 (empty -> .)
    DIV             reduce using rule 106 (empty -> .)
    PLUS            reduce using rule 106 (empty -> .)
    MINUS           reduce using rule 106 (empty -> .)
    RELOP           reduce using rule 106 (empty -> .)
    CPAREN          reduce using rule 106 (empty -> .)
    SCOLON          reduce using rule 106 (empty -> .)
    CBRACKET        reduce using rule 106 (empty -> .)

    asign3                         shift and go to state 156
    empty                          shift and go to state 157

state 104

    (66) expresion -> expresion RELOP . exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    exp                            shift and go to state 158
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 105

    (40) asign2 -> LCOR varcte RCOR . asign3
    (41) asign3 -> . LCOR expresion RCOR
    (42) asign3 -> . LCOR varcte RCOR
    (43) asign3 -> . empty
    (106) empty -> .

    LCOR            shift and go to state 155
    COLON           reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    EQUALS          reduce using rule 106 (empty -> .)
    RCOR            reduce using rule 106 (empty -> .)
    MULT            reduce using rule 106 (empty -> .)
    DIV             reduce using rule 106 (empty -> .)
    PLUS            reduce using rule 106 (empty -> .)
    MINUS           reduce using rule 106 (empty -> .)
    RELOP           reduce using rule 106 (empty -> .)
    CPAREN          reduce using rule 106 (empty -> .)
    SCOLON          reduce using rule 106 (empty -> .)
    CBRACKET        reduce using rule 106 (empty -> .)

    asign3                         shift and go to state 159
    empty                          shift and go to state 157

state 106

    (78) varcte -> ID asign2 .

    RCOR            reduce using rule 78 (varcte -> ID asign2 .)
    MULT            reduce using rule 78 (varcte -> ID asign2 .)
    DIV             reduce using rule 78 (varcte -> ID asign2 .)
    PLUS            reduce using rule 78 (varcte -> ID asign2 .)
    MINUS           reduce using rule 78 (varcte -> ID asign2 .)
    RELOP           reduce using rule 78 (varcte -> ID asign2 .)
    CPAREN          reduce using rule 78 (varcte -> ID asign2 .)
    SCOLON          reduce using rule 78 (varcte -> ID asign2 .)
    COMMA           reduce using rule 78 (varcte -> ID asign2 .)
    CBRACKET        reduce using rule 78 (varcte -> ID asign2 .)


state 107

    (68) exp -> termino PLUS . exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    termino                        shift and go to state 70
    exp                            shift and go to state 160
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 108

    (69) exp -> termino MINUS . exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    termino                        shift and go to state 70
    exp                            shift and go to state 161
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 109

    (74) factor -> PLUS varcte .

    MULT            reduce using rule 74 (factor -> PLUS varcte .)
    DIV             reduce using rule 74 (factor -> PLUS varcte .)
    PLUS            reduce using rule 74 (factor -> PLUS varcte .)
    MINUS           reduce using rule 74 (factor -> PLUS varcte .)
    RCOR            reduce using rule 74 (factor -> PLUS varcte .)
    RELOP           reduce using rule 74 (factor -> PLUS varcte .)
    CPAREN          reduce using rule 74 (factor -> PLUS varcte .)
    SCOLON          reduce using rule 74 (factor -> PLUS varcte .)


state 110

    (75) factor -> MINUS varcte .

    MULT            reduce using rule 75 (factor -> MINUS varcte .)
    DIV             reduce using rule 75 (factor -> MINUS varcte .)
    PLUS            reduce using rule 75 (factor -> MINUS varcte .)
    MINUS           reduce using rule 75 (factor -> MINUS varcte .)
    RCOR            reduce using rule 75 (factor -> MINUS varcte .)
    RELOP           reduce using rule 75 (factor -> MINUS varcte .)
    CPAREN          reduce using rule 75 (factor -> MINUS varcte .)
    SCOLON          reduce using rule 75 (factor -> MINUS varcte .)


state 111

    (71) termino -> factor MULT . termino
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    factor                         shift and go to state 73
    termino                        shift and go to state 162
    varcte                         shift and go to state 114

state 112

    (72) termino -> factor DIV . termino
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    factor                         shift and go to state 73
    termino                        shift and go to state 163
    varcte                         shift and go to state 114

state 113

    (73) factor -> OPAREN expresion . CPAREN
    (66) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 164
    RELOP           shift and go to state 104


state 114

    (76) factor -> varcte .

    MULT            reduce using rule 76 (factor -> varcte .)
    DIV             reduce using rule 76 (factor -> varcte .)
    PLUS            reduce using rule 76 (factor -> varcte .)
    MINUS           reduce using rule 76 (factor -> varcte .)
    CPAREN          reduce using rule 76 (factor -> varcte .)
    RELOP           reduce using rule 76 (factor -> varcte .)
    SCOLON          reduce using rule 76 (factor -> varcte .)
    RCOR            reduce using rule 76 (factor -> varcte .)


state 115

    (34) asign -> ID EQUALS ID . SCOLON
    (35) asign -> ID EQUALS ID . asign2 SCOLON
    (77) varcte -> ID .
    (78) varcte -> ID . asign2
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 165
    MULT            reduce using rule 77 (varcte -> ID .)
    DIV             reduce using rule 77 (varcte -> ID .)
    PLUS            reduce using rule 77 (varcte -> ID .)
    MINUS           reduce using rule 77 (varcte -> ID .)
    RELOP           reduce using rule 77 (varcte -> ID .)
    LCOR            shift and go to state 22

  ! SCOLON          [ reduce using rule 77 (varcte -> ID .) ]

    asign2                         shift and go to state 166

state 116

    (33) asign -> ID EQUALS expresion . SCOLON
    (66) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 167
    RELOP           shift and go to state 104


state 117

    (36) asign -> ID asign2 EQUALS . ID SCOLON
    (37) asign -> ID asign2 EQUALS . expresion SCOLON
    (38) asign -> ID asign2 EQUALS . ID asign2 SCOLON
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 168
    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    expresion                      shift and go to state 169
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 118

    (53) cond -> IF OPAREN expresion . CPAREN block SCOLON
    (54) cond -> IF OPAREN expresion . CPAREN block ELSE block SCOLON
    (66) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 170
    RELOP           shift and go to state 104


state 119

    (44) escrt -> PRINT OPAREN expresion . CPAREN SCOLON
    (66) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 171
    RELOP           shift and go to state 104


state 120

    (45) escrt -> PRINT OPAREN CPAREN . SCOLON

    SCOLON          shift and go to state 172


state 121

    (46) escrt -> PRINT OPAREN ID . escrt2 CPAREN SCOLON
    (77) varcte -> ID .
    (78) varcte -> ID . asign2
    (48) escrt2 -> . COMMA escrt3
    (49) escrt2 -> . empty
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3
    (106) empty -> .

  ! reduce/reduce conflict for CPAREN resolved using rule 77 (varcte -> ID .)
    MULT            reduce using rule 77 (varcte -> ID .)
    DIV             reduce using rule 77 (varcte -> ID .)
    PLUS            reduce using rule 77 (varcte -> ID .)
    MINUS           reduce using rule 77 (varcte -> ID .)
    CPAREN          reduce using rule 77 (varcte -> ID .)
    RELOP           reduce using rule 77 (varcte -> ID .)
    COMMA           shift and go to state 174
    LCOR            shift and go to state 22

  ! CPAREN          [ reduce using rule 106 (empty -> .) ]

    escrt2                         shift and go to state 173
    asign2                         shift and go to state 106
    empty                          shift and go to state 175

state 122

    (47) escrt -> PRINT OPAREN STRING . CPAREN SCOLON

    CPAREN          shift and go to state 176


state 123

    (57) plot -> PLOT OPAREN xyfunc . CPAREN SCOLON

    CPAREN          shift and go to state 177


state 124

    (58) plot -> PLOT OPAREN plot2 . CPAREN SCOLON

    CPAREN          shift and go to state 178


state 125

    (62) xyfunc -> FX . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 179


state 126

    (63) xyfunc -> FY . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 180


state 127

    (64) xyfunc -> empty .
    (61) plot2 -> empty .

  ! reduce/reduce conflict for CPAREN resolved using rule 61 (plot2 -> empty .)
    CPAREN          reduce using rule 61 (plot2 -> empty .)

  ! CPAREN          [ reduce using rule 64 (xyfunc -> empty .) ]


state 128

    (59) plot2 -> LCOR . varcte COMMA varcte RCOR
    (60) plot2 -> LCOR . varcte COMMA varcte RCOR COMMA plot2
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 181

state 129

    (55) count -> COUNT OPAREN ID . COMMA varcte COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 182


state 130

    (56) countif -> COUNTIF OPAREN ID . COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 183


state 131

    (81) metodos -> MEAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 184


state 132

    (99) mmmfunc -> ID .

    CPAREN          reduce using rule 99 (mmmfunc -> ID .)


state 133

    (100) mmmfunc -> OBRACKET . mmmarray CBRACKET
    (101) mmmfunc -> OBRACKET . mmmarray CBRACKET COMMA mmmfunc
    (103) mmmarray -> . varcte
    (104) mmmarray -> . varcte COMMA mmmarray
    (105) mmmarray -> . empty
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER
    (106) empty -> .

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69
    CBRACKET        reduce using rule 106 (empty -> .)

    mmmarray                       shift and go to state 185
    varcte                         shift and go to state 186
    empty                          shift and go to state 187

state 134

    (102) mmmfunc -> empty .

    CPAREN          reduce using rule 102 (mmmfunc -> empty .)


state 135

    (82) metodos -> MEDIAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 188


state 136

    (83) metodos -> MODE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 189


state 137

    (84) metodos -> STDV OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 190


state 138

    (85) metodos -> KMEANS OPAREN varcte . COMMA mmmfunc CPAREN SCOLON

    COMMA           shift and go to state 191


state 139

    (86) metodos -> DERL OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 192


state 140

    (95) expfunc -> ID . COMMA ID COMMA ID
    (77) varcte -> ID .
    (78) varcte -> ID . asign2
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 193
    LCOR            shift and go to state 22

  ! COMMA           [ reduce using rule 77 (varcte -> ID .) ]

    asign2                         shift and go to state 106

state 141

    (96) expfunc -> varcte . COMMA varcte COMMA varcte

    COMMA           shift and go to state 194


state 142

    (87) metodos -> DBERN OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 195


state 143

    (88) metodos -> DPOI OPAREN expfunc2 . CPAREN SCOLON

    CPAREN          shift and go to state 196


state 144

    (97) expfunc2 -> ID . COMMA ID
    (77) varcte -> ID .
    (78) varcte -> ID . asign2
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 197
    LCOR            shift and go to state 22

  ! COMMA           [ reduce using rule 77 (varcte -> ID .) ]

    asign2                         shift and go to state 106

state 145

    (98) expfunc2 -> varcte . COMMA varcte

    COMMA           shift and go to state 198


state 146

    (89) metodos -> TRANSPOSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 199


state 147

    (90) metodos -> INVERSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 200


state 148

    (91) metodos -> ROTATE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 201


state 149

    (92) metodos -> REF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 202


state 150

    (93) metodos -> RREF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 203


state 151

    (94) metodos -> MONT OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 204


state 152

    (13) modules -> FUNC ID COLON tipo addfunction . OPAREN modules2 CPAREN modules2 block

    OPAREN          shift and go to state 205


state 153

    (14) addfunction -> empty .

    OPAREN          reduce using rule 14 (addfunction -> empty .)


state 154

    (10) vars1 -> ID asign2 COLON tipo SCOLON .

    FUNC            reduce using rule 10 (vars1 -> ID asign2 COLON tipo SCOLON .)
    OBRACKET        reduce using rule 10 (vars1 -> ID asign2 COLON tipo SCOLON .)
    CPAREN          reduce using rule 10 (vars1 -> ID asign2 COLON tipo SCOLON .)


state 155

    (41) asign3 -> LCOR . expresion RCOR
    (42) asign3 -> LCOR . varcte RCOR
    (65) expresion -> . exp
    (66) expresion -> . expresion RELOP exp
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69
    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72

    expresion                      shift and go to state 206
    varcte                         shift and go to state 207
    exp                            shift and go to state 66
    termino                        shift and go to state 70
    factor                         shift and go to state 73

state 156

    (39) asign2 -> LCOR expresion RCOR asign3 .

    COLON           reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    COMMA           reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    EQUALS          reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    RCOR            reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    MULT            reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    DIV             reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    PLUS            reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    MINUS           reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    RELOP           reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    CPAREN          reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    SCOLON          reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)
    CBRACKET        reduce using rule 39 (asign2 -> LCOR expresion RCOR asign3 .)


state 157

    (43) asign3 -> empty .

    COLON           reduce using rule 43 (asign3 -> empty .)
    COMMA           reduce using rule 43 (asign3 -> empty .)
    EQUALS          reduce using rule 43 (asign3 -> empty .)
    RCOR            reduce using rule 43 (asign3 -> empty .)
    MULT            reduce using rule 43 (asign3 -> empty .)
    DIV             reduce using rule 43 (asign3 -> empty .)
    PLUS            reduce using rule 43 (asign3 -> empty .)
    MINUS           reduce using rule 43 (asign3 -> empty .)
    RELOP           reduce using rule 43 (asign3 -> empty .)
    CPAREN          reduce using rule 43 (asign3 -> empty .)
    SCOLON          reduce using rule 43 (asign3 -> empty .)
    CBRACKET        reduce using rule 43 (asign3 -> empty .)


state 158

    (66) expresion -> expresion RELOP exp .

    RCOR            reduce using rule 66 (expresion -> expresion RELOP exp .)
    RELOP           reduce using rule 66 (expresion -> expresion RELOP exp .)
    CPAREN          reduce using rule 66 (expresion -> expresion RELOP exp .)
    SCOLON          reduce using rule 66 (expresion -> expresion RELOP exp .)


state 159

    (40) asign2 -> LCOR varcte RCOR asign3 .

    COLON           reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    COMMA           reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    EQUALS          reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    RCOR            reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    MULT            reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    DIV             reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    PLUS            reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    MINUS           reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    RELOP           reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    CPAREN          reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    SCOLON          reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)
    CBRACKET        reduce using rule 40 (asign2 -> LCOR varcte RCOR asign3 .)


state 160

    (68) exp -> termino PLUS exp .

    RCOR            reduce using rule 68 (exp -> termino PLUS exp .)
    RELOP           reduce using rule 68 (exp -> termino PLUS exp .)
    CPAREN          reduce using rule 68 (exp -> termino PLUS exp .)
    SCOLON          reduce using rule 68 (exp -> termino PLUS exp .)


state 161

    (69) exp -> termino MINUS exp .

    RCOR            reduce using rule 69 (exp -> termino MINUS exp .)
    RELOP           reduce using rule 69 (exp -> termino MINUS exp .)
    CPAREN          reduce using rule 69 (exp -> termino MINUS exp .)
    SCOLON          reduce using rule 69 (exp -> termino MINUS exp .)


state 162

    (71) termino -> factor MULT termino .

    PLUS            reduce using rule 71 (termino -> factor MULT termino .)
    MINUS           reduce using rule 71 (termino -> factor MULT termino .)
    RCOR            reduce using rule 71 (termino -> factor MULT termino .)
    RELOP           reduce using rule 71 (termino -> factor MULT termino .)
    CPAREN          reduce using rule 71 (termino -> factor MULT termino .)
    SCOLON          reduce using rule 71 (termino -> factor MULT termino .)


state 163

    (72) termino -> factor DIV termino .

    PLUS            reduce using rule 72 (termino -> factor DIV termino .)
    MINUS           reduce using rule 72 (termino -> factor DIV termino .)
    RCOR            reduce using rule 72 (termino -> factor DIV termino .)
    RELOP           reduce using rule 72 (termino -> factor DIV termino .)
    CPAREN          reduce using rule 72 (termino -> factor DIV termino .)
    SCOLON          reduce using rule 72 (termino -> factor DIV termino .)


state 164

    (73) factor -> OPAREN expresion CPAREN .

    MULT            reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    DIV             reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    RCOR            reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    RELOP           reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 73 (factor -> OPAREN expresion CPAREN .)
    SCOLON          reduce using rule 73 (factor -> OPAREN expresion CPAREN .)


state 165

    (34) asign -> ID EQUALS ID SCOLON .

    ID              reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    IF              reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    PRINT           reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    PLOT            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    COUNT           reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    MEAN            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    MODE            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    STDV            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    KMEANS          reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    DERL            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    DBERN           reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    DPOI            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    INVERSE         reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    ROTATE          reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    REF             reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    RREF            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    MONT            reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 34 (asign -> ID EQUALS ID SCOLON .)


state 166

    (35) asign -> ID EQUALS ID asign2 . SCOLON
    (78) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 208
    MULT            reduce using rule 78 (varcte -> ID asign2 .)
    DIV             reduce using rule 78 (varcte -> ID asign2 .)
    PLUS            reduce using rule 78 (varcte -> ID asign2 .)
    MINUS           reduce using rule 78 (varcte -> ID asign2 .)
    RELOP           reduce using rule 78 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 78 (varcte -> ID asign2 .) ]


state 167

    (33) asign -> ID EQUALS expresion SCOLON .

    ID              reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    IF              reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    PRINT           reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    PLOT            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    COUNT           reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    MEAN            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    MODE            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    STDV            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    DERL            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    DBERN           reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    DPOI            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    REF             reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    RREF            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    MONT            reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 33 (asign -> ID EQUALS expresion SCOLON .)


state 168

    (36) asign -> ID asign2 EQUALS ID . SCOLON
    (38) asign -> ID asign2 EQUALS ID . asign2 SCOLON
    (77) varcte -> ID .
    (78) varcte -> ID . asign2
    (39) asign2 -> . LCOR expresion RCOR asign3
    (40) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 210
    MULT            reduce using rule 77 (varcte -> ID .)
    DIV             reduce using rule 77 (varcte -> ID .)
    PLUS            reduce using rule 77 (varcte -> ID .)
    MINUS           reduce using rule 77 (varcte -> ID .)
    RELOP           reduce using rule 77 (varcte -> ID .)
    LCOR            shift and go to state 22

  ! SCOLON          [ reduce using rule 77 (varcte -> ID .) ]

    asign2                         shift and go to state 209

state 169

    (37) asign -> ID asign2 EQUALS expresion . SCOLON
    (66) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 211
    RELOP           shift and go to state 104


state 170

    (53) cond -> IF OPAREN expresion CPAREN . block SCOLON
    (54) cond -> IF OPAREN expresion CPAREN . block ELSE block SCOLON
    (17) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 212

state 171

    (44) escrt -> PRINT OPAREN expresion CPAREN . SCOLON

    SCOLON          shift and go to state 213


state 172

    (45) escrt -> PRINT OPAREN CPAREN SCOLON .

    ID              reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    IF              reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PRINT           reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PLOT            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNT           reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNTIF         reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEAN            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEDIAN          reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MODE            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    STDV            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    KMEANS          reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DERL            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DBERN           reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DPOI            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    INVERSE         reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    ROTATE          reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    REF             reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    RREF            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MONT            reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    CBRACKET        reduce using rule 45 (escrt -> PRINT OPAREN CPAREN SCOLON .)


state 173

    (46) escrt -> PRINT OPAREN ID escrt2 . CPAREN SCOLON

    CPAREN          shift and go to state 214


state 174

    (48) escrt2 -> COMMA . escrt3
    (50) escrt3 -> . ID escrt2
    (51) escrt3 -> . ID
    (52) escrt3 -> . STRING escrt2 escrt2

    ID              shift and go to state 216
    STRING          shift and go to state 217

    escrt3                         shift and go to state 215

state 175

    (49) escrt2 -> empty .

    CPAREN          reduce using rule 49 (escrt2 -> empty .)
    COMMA           reduce using rule 49 (escrt2 -> empty .)


state 176

    (47) escrt -> PRINT OPAREN STRING CPAREN . SCOLON

    SCOLON          shift and go to state 218


state 177

    (57) plot -> PLOT OPAREN xyfunc CPAREN . SCOLON

    SCOLON          shift and go to state 219


state 178

    (58) plot -> PLOT OPAREN plot2 CPAREN . SCOLON

    SCOLON          shift and go to state 220


state 179

    (62) xyfunc -> FX EQUALS . exp SCOLON xyfunc
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    exp                            shift and go to state 221
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 180

    (63) xyfunc -> FY EQUALS . exp SCOLON xyfunc
    (67) exp -> . termino
    (68) exp -> . termino PLUS exp
    (69) exp -> . termino MINUS exp
    (70) termino -> . factor
    (71) termino -> . factor MULT termino
    (72) termino -> . factor DIV termino
    (73) factor -> . OPAREN expresion CPAREN
    (74) factor -> . PLUS varcte
    (75) factor -> . MINUS varcte
    (76) factor -> . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    OPAREN          shift and go to state 74
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    exp                            shift and go to state 222
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    varcte                         shift and go to state 114

state 181

    (59) plot2 -> LCOR varcte . COMMA varcte RCOR
    (60) plot2 -> LCOR varcte . COMMA varcte RCOR COMMA plot2

    COMMA           shift and go to state 223


state 182

    (55) count -> COUNT OPAREN ID COMMA . varcte COMMA varcte CPAREN SCOLON
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 224

state 183

    (56) countif -> COUNTIF OPAREN ID COMMA . varcte COMMA varcte COMMA cond CPAREN SCOLON
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 225

state 184

    (81) metodos -> MEAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 226


state 185

    (100) mmmfunc -> OBRACKET mmmarray . CBRACKET
    (101) mmmfunc -> OBRACKET mmmarray . CBRACKET COMMA mmmfunc

    CBRACKET        shift and go to state 227


state 186

    (103) mmmarray -> varcte .
    (104) mmmarray -> varcte . COMMA mmmarray

    CBRACKET        reduce using rule 103 (mmmarray -> varcte .)
    COMMA           shift and go to state 228


state 187

    (105) mmmarray -> empty .

    CBRACKET        reduce using rule 105 (mmmarray -> empty .)


state 188

    (82) metodos -> MEDIAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 229


state 189

    (83) metodos -> MODE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 230


state 190

    (84) metodos -> STDV OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 231


state 191

    (85) metodos -> KMEANS OPAREN varcte COMMA . mmmfunc CPAREN SCOLON
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 232
    empty                          shift and go to state 134

state 192

    (86) metodos -> DERL OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 233


state 193

    (95) expfunc -> ID COMMA . ID COMMA ID

    ID              shift and go to state 234


state 194

    (96) expfunc -> varcte COMMA . varcte COMMA varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 235

state 195

    (87) metodos -> DBERN OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 236


state 196

    (88) metodos -> DPOI OPAREN expfunc2 CPAREN . SCOLON

    SCOLON          shift and go to state 237


state 197

    (97) expfunc2 -> ID COMMA . ID

    ID              shift and go to state 238


state 198

    (98) expfunc2 -> varcte COMMA . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 239

state 199

    (89) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 240


state 200

    (90) metodos -> INVERSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 241


state 201

    (91) metodos -> ROTATE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 242


state 202

    (92) metodos -> REF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 243


state 203

    (93) metodos -> RREF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 244


state 204

    (94) metodos -> MONT OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 245


state 205

    (13) modules -> FUNC ID COLON tipo addfunction OPAREN . modules2 CPAREN modules2 block
    (15) modules2 -> . vars
    (16) modules2 -> . empty
    (7) vars -> . VAR vars1
    (106) empty -> .

    VAR             shift and go to state 8
    CPAREN          reduce using rule 106 (empty -> .)

    modules2                       shift and go to state 246
    vars                           shift and go to state 247
    empty                          shift and go to state 248

state 206

    (41) asign3 -> LCOR expresion . RCOR
    (66) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 249
    RELOP           shift and go to state 104


state 207

    (42) asign3 -> LCOR varcte . RCOR
    (76) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 250
    MULT            reduce using rule 76 (factor -> varcte .)
    DIV             reduce using rule 76 (factor -> varcte .)
    PLUS            reduce using rule 76 (factor -> varcte .)
    MINUS           reduce using rule 76 (factor -> varcte .)
    RELOP           reduce using rule 76 (factor -> varcte .)

  ! RCOR            [ reduce using rule 76 (factor -> varcte .) ]


state 208

    (35) asign -> ID EQUALS ID asign2 SCOLON .

    ID              reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 35 (asign -> ID EQUALS ID asign2 SCOLON .)


state 209

    (38) asign -> ID asign2 EQUALS ID asign2 . SCOLON
    (78) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 251
    MULT            reduce using rule 78 (varcte -> ID asign2 .)
    DIV             reduce using rule 78 (varcte -> ID asign2 .)
    PLUS            reduce using rule 78 (varcte -> ID asign2 .)
    MINUS           reduce using rule 78 (varcte -> ID asign2 .)
    RELOP           reduce using rule 78 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 78 (varcte -> ID asign2 .) ]


state 210

    (36) asign -> ID asign2 EQUALS ID SCOLON .

    ID              reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    IF              reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    PRINT           reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    PLOT            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNT           reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEAN            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    MODE            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    STDV            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    KMEANS          reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    DERL            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    DBERN           reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    DPOI            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    INVERSE         reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    ROTATE          reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    REF             reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    RREF            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    MONT            reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 36 (asign -> ID asign2 EQUALS ID SCOLON .)


state 211

    (37) asign -> ID asign2 EQUALS expresion SCOLON .

    ID              reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    IF              reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PRINT           reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PLOT            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNT           reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEAN            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MODE            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    STDV            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DERL            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DBERN           reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DPOI            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    REF             reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    RREF            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MONT            reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 37 (asign -> ID asign2 EQUALS expresion SCOLON .)


state 212

    (53) cond -> IF OPAREN expresion CPAREN block . SCOLON
    (54) cond -> IF OPAREN expresion CPAREN block . ELSE block SCOLON

    SCOLON          shift and go to state 252
    ELSE            shift and go to state 253


state 213

    (44) escrt -> PRINT OPAREN expresion CPAREN SCOLON .

    ID              reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    IF              reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PRINT           reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PLOT            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNT           reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNTIF         reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEAN            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEDIAN          reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MODE            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    STDV            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    KMEANS          reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DERL            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DBERN           reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DPOI            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    INVERSE         reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    ROTATE          reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    REF             reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    RREF            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MONT            reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    CBRACKET        reduce using rule 44 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)


state 214

    (46) escrt -> PRINT OPAREN ID escrt2 CPAREN . SCOLON

    SCOLON          shift and go to state 254


state 215

    (48) escrt2 -> COMMA escrt3 .

    CPAREN          reduce using rule 48 (escrt2 -> COMMA escrt3 .)
    COMMA           reduce using rule 48 (escrt2 -> COMMA escrt3 .)


state 216

    (50) escrt3 -> ID . escrt2
    (51) escrt3 -> ID .
    (48) escrt2 -> . COMMA escrt3
    (49) escrt2 -> . empty
    (106) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CPAREN resolved using rule 51 (escrt3 -> ID .)
  ! shift/reduce conflict for COMMA resolved as shift
    CPAREN          reduce using rule 51 (escrt3 -> ID .)
    COMMA           shift and go to state 174

  ! COMMA           [ reduce using rule 51 (escrt3 -> ID .) ]
  ! CPAREN          [ reduce using rule 106 (empty -> .) ]
  ! COMMA           [ reduce using rule 106 (empty -> .) ]

    escrt2                         shift and go to state 255
    empty                          shift and go to state 175

state 217

    (52) escrt3 -> STRING . escrt2 escrt2
    (48) escrt2 -> . COMMA escrt3
    (49) escrt2 -> . empty
    (106) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 174
    CPAREN          reduce using rule 106 (empty -> .)

  ! COMMA           [ reduce using rule 106 (empty -> .) ]

    escrt2                         shift and go to state 256
    empty                          shift and go to state 175

state 218

    (47) escrt -> PRINT OPAREN STRING CPAREN SCOLON .

    ID              reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    IF              reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PRINT           reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PLOT            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNT           reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNTIF         reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEAN            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEDIAN          reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MODE            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    STDV            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    KMEANS          reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DERL            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DBERN           reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DPOI            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    INVERSE         reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    ROTATE          reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    REF             reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    RREF            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MONT            reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    CBRACKET        reduce using rule 47 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)


state 219

    (57) plot -> PLOT OPAREN xyfunc CPAREN SCOLON .

    ID              reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    IF              reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PRINT           reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PLOT            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNT           reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEAN            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MODE            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    STDV            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DERL            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DBERN           reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DPOI            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    REF             reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    RREF            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MONT            reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 57 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)


state 220

    (58) plot -> PLOT OPAREN plot2 CPAREN SCOLON .

    ID              reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    IF              reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PRINT           reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PLOT            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNT           reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEAN            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MODE            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    STDV            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    KMEANS          reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DERL            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DBERN           reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DPOI            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    INVERSE         reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    ROTATE          reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    REF             reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    RREF            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MONT            reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 58 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)


state 221

    (62) xyfunc -> FX EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 257


state 222

    (63) xyfunc -> FY EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 258


state 223

    (59) plot2 -> LCOR varcte COMMA . varcte RCOR
    (60) plot2 -> LCOR varcte COMMA . varcte RCOR COMMA plot2
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 259

state 224

    (55) count -> COUNT OPAREN ID COMMA varcte . COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 260


state 225

    (56) countif -> COUNTIF OPAREN ID COMMA varcte . COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 261


state 226

    (81) metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 81 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)


state 227

    (100) mmmfunc -> OBRACKET mmmarray CBRACKET .
    (101) mmmfunc -> OBRACKET mmmarray CBRACKET . COMMA mmmfunc

    CPAREN          reduce using rule 100 (mmmfunc -> OBRACKET mmmarray CBRACKET .)
    COMMA           shift and go to state 262


state 228

    (104) mmmarray -> varcte COMMA . mmmarray
    (103) mmmarray -> . varcte
    (104) mmmarray -> . varcte COMMA mmmarray
    (105) mmmarray -> . empty
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER
    (106) empty -> .

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69
    CBRACKET        reduce using rule 106 (empty -> .)

    varcte                         shift and go to state 186
    mmmarray                       shift and go to state 263
    empty                          shift and go to state 187

state 229

    (82) metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 82 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)


state 230

    (83) metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 83 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)


state 231

    (84) metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 84 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)


state 232

    (85) metodos -> KMEANS OPAREN varcte COMMA mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 264


state 233

    (86) metodos -> DERL OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 86 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)


state 234

    (95) expfunc -> ID COMMA ID . COMMA ID

    COMMA           shift and go to state 265


state 235

    (96) expfunc -> varcte COMMA varcte . COMMA varcte

    COMMA           shift and go to state 266


state 236

    (87) metodos -> DBERN OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 87 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)


state 237

    (88) metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .

    ID              reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    IF              reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PRINT           reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PLOT            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNT           reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEAN            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MODE            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    STDV            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    KMEANS          reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DERL            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DBERN           reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DPOI            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    INVERSE         reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    ROTATE          reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    REF             reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    RREF            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MONT            reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 88 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)


state 238

    (97) expfunc2 -> ID COMMA ID .

    CPAREN          reduce using rule 97 (expfunc2 -> ID COMMA ID .)


state 239

    (98) expfunc2 -> varcte COMMA varcte .

    CPAREN          reduce using rule 98 (expfunc2 -> varcte COMMA varcte .)


state 240

    (89) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 89 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)


state 241

    (90) metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 90 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)


state 242

    (91) metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 91 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)


state 243

    (92) metodos -> REF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 92 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)


state 244

    (93) metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 93 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)


state 245

    (94) metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 94 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)


state 246

    (13) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 . CPAREN modules2 block

    CPAREN          shift and go to state 267


state 247

    (15) modules2 -> vars .

    CPAREN          reduce using rule 15 (modules2 -> vars .)
    OBRACKET        reduce using rule 15 (modules2 -> vars .)


state 248

    (16) modules2 -> empty .

    CPAREN          reduce using rule 16 (modules2 -> empty .)
    OBRACKET        reduce using rule 16 (modules2 -> empty .)


state 249

    (41) asign3 -> LCOR expresion RCOR .

    COLON           reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    COMMA           reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    EQUALS          reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    RCOR            reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    MULT            reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    DIV             reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    PLUS            reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    MINUS           reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    RELOP           reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    CPAREN          reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    SCOLON          reduce using rule 41 (asign3 -> LCOR expresion RCOR .)
    CBRACKET        reduce using rule 41 (asign3 -> LCOR expresion RCOR .)


state 250

    (42) asign3 -> LCOR varcte RCOR .

    COLON           reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    COMMA           reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    EQUALS          reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    RCOR            reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    MULT            reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    DIV             reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    PLUS            reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    MINUS           reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    RELOP           reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    CPAREN          reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    SCOLON          reduce using rule 42 (asign3 -> LCOR varcte RCOR .)
    CBRACKET        reduce using rule 42 (asign3 -> LCOR varcte RCOR .)


state 251

    (38) asign -> ID asign2 EQUALS ID asign2 SCOLON .

    ID              reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 38 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)


state 252

    (53) cond -> IF OPAREN expresion CPAREN block SCOLON .

    ID              reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    IF              reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PRINT           reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PLOT            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNT           reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNTIF         reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEAN            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEDIAN          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MODE            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    STDV            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    KMEANS          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DERL            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DBERN           reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DPOI            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    TRANSPOSE       reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    INVERSE         reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    ROTATE          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    REF             reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    RREF            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MONT            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CBRACKET        reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CPAREN          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block SCOLON .)


state 253

    (54) cond -> IF OPAREN expresion CPAREN block ELSE . block SCOLON
    (17) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 268

state 254

    (46) escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .

    ID              reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    IF              reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PRINT           reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PLOT            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNT           reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEAN            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MODE            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    STDV            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    KMEANS          reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DERL            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DBERN           reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DPOI            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    INVERSE         reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    ROTATE          reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    REF             reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    RREF            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MONT            reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 46 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)


state 255

    (50) escrt3 -> ID escrt2 .

    CPAREN          reduce using rule 50 (escrt3 -> ID escrt2 .)
    COMMA           reduce using rule 50 (escrt3 -> ID escrt2 .)


state 256

    (52) escrt3 -> STRING escrt2 . escrt2
    (48) escrt2 -> . COMMA escrt3
    (49) escrt2 -> . empty
    (106) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 174
    CPAREN          reduce using rule 106 (empty -> .)

  ! COMMA           [ reduce using rule 106 (empty -> .) ]

    escrt2                         shift and go to state 269
    empty                          shift and go to state 175

state 257

    (62) xyfunc -> FX EQUALS exp SCOLON . xyfunc
    (62) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (63) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (64) xyfunc -> . empty
    (106) empty -> .

    FX              shift and go to state 125
    FY              shift and go to state 126
    CPAREN          reduce using rule 106 (empty -> .)

    xyfunc                         shift and go to state 270
    empty                          shift and go to state 271

state 258

    (63) xyfunc -> FY EQUALS exp SCOLON . xyfunc
    (62) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (63) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (64) xyfunc -> . empty
    (106) empty -> .

    FX              shift and go to state 125
    FY              shift and go to state 126
    CPAREN          reduce using rule 106 (empty -> .)

    xyfunc                         shift and go to state 272
    empty                          shift and go to state 271

state 259

    (59) plot2 -> LCOR varcte COMMA varcte . RCOR
    (60) plot2 -> LCOR varcte COMMA varcte . RCOR COMMA plot2

    RCOR            shift and go to state 273


state 260

    (55) count -> COUNT OPAREN ID COMMA varcte COMMA . varcte CPAREN SCOLON
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 274

state 261

    (56) countif -> COUNTIF OPAREN ID COMMA varcte COMMA . varcte COMMA cond CPAREN SCOLON
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 275

state 262

    (101) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA . mmmfunc
    (99) mmmfunc -> . ID
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (101) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (102) mmmfunc -> . empty
    (106) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 106 (empty -> .)

    mmmfunc                        shift and go to state 276
    empty                          shift and go to state 134

state 263

    (104) mmmarray -> varcte COMMA mmmarray .

    CBRACKET        reduce using rule 104 (mmmarray -> varcte COMMA mmmarray .)


state 264

    (85) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 277


state 265

    (95) expfunc -> ID COMMA ID COMMA . ID

    ID              shift and go to state 278


state 266

    (96) expfunc -> varcte COMMA varcte COMMA . varcte
    (77) varcte -> . ID
    (78) varcte -> . ID asign2
    (79) varcte -> . NUMERIC
    (80) varcte -> . NUMBER

    ID              shift and go to state 67
    NUMERIC         shift and go to state 68
    NUMBER          shift and go to state 69

    varcte                         shift and go to state 279

state 267

    (13) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN . modules2 block
    (15) modules2 -> . vars
    (16) modules2 -> . empty
    (7) vars -> . VAR vars1
    (106) empty -> .

    VAR             shift and go to state 8
    OBRACKET        reduce using rule 106 (empty -> .)

    modules2                       shift and go to state 280
    vars                           shift and go to state 247
    empty                          shift and go to state 248

state 268

    (54) cond -> IF OPAREN expresion CPAREN block ELSE block . SCOLON

    SCOLON          shift and go to state 281


state 269

    (52) escrt3 -> STRING escrt2 escrt2 .

    CPAREN          reduce using rule 52 (escrt3 -> STRING escrt2 escrt2 .)
    COMMA           reduce using rule 52 (escrt3 -> STRING escrt2 escrt2 .)


state 270

    (62) xyfunc -> FX EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 62 (xyfunc -> FX EQUALS exp SCOLON xyfunc .)


state 271

    (64) xyfunc -> empty .

    CPAREN          reduce using rule 64 (xyfunc -> empty .)


state 272

    (63) xyfunc -> FY EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 63 (xyfunc -> FY EQUALS exp SCOLON xyfunc .)


state 273

    (59) plot2 -> LCOR varcte COMMA varcte RCOR .
    (60) plot2 -> LCOR varcte COMMA varcte RCOR . COMMA plot2

    CPAREN          reduce using rule 59 (plot2 -> LCOR varcte COMMA varcte RCOR .)
    COMMA           shift and go to state 282


state 274

    (55) count -> COUNT OPAREN ID COMMA varcte COMMA varcte . CPAREN SCOLON

    CPAREN          shift and go to state 283


state 275

    (56) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte . COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 284


state 276

    (101) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .

    CPAREN          reduce using rule 101 (mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .)


state 277

    (85) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .

    ID              reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 85 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)


state 278

    (95) expfunc -> ID COMMA ID COMMA ID .

    CPAREN          reduce using rule 95 (expfunc -> ID COMMA ID COMMA ID .)


state 279

    (96) expfunc -> varcte COMMA varcte COMMA varcte .

    CPAREN          reduce using rule 96 (expfunc -> varcte COMMA varcte COMMA varcte .)


state 280

    (13) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 . block
    (17) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 285

state 281

    (54) cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .

    ID              reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    IF              reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PRINT           reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PLOT            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNT           reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNTIF         reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEAN            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEDIAN          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MODE            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    STDV            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    KMEANS          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DERL            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DBERN           reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DPOI            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    TRANSPOSE       reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    INVERSE         reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    ROTATE          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    REF             reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    RREF            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MONT            reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CBRACKET        reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CPAREN          reduce using rule 54 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)


state 282

    (60) plot2 -> LCOR varcte COMMA varcte RCOR COMMA . plot2
    (59) plot2 -> . LCOR varcte COMMA varcte RCOR
    (60) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (61) plot2 -> . empty
    (106) empty -> .

    LCOR            shift and go to state 128
    CPAREN          reduce using rule 106 (empty -> .)

    plot2                          shift and go to state 286
    empty                          shift and go to state 287

state 283

    (55) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN . SCOLON

    SCOLON          shift and go to state 288


state 284

    (56) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA . cond CPAREN SCOLON
    (53) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (54) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON

    IF              shift and go to state 34

    cond                           shift and go to state 289

state 285

    (13) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .

    FUNC            reduce using rule 13 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)
    OBRACKET        reduce using rule 13 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)


state 286

    (60) plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .

    CPAREN          reduce using rule 60 (plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .)


state 287

    (61) plot2 -> empty .

    CPAREN          reduce using rule 61 (plot2 -> empty .)


state 288

    (55) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .

    ID              reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    IF              reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PRINT           reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PLOT            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNT           reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNTIF         reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEAN            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEDIAN          reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MODE            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    STDV            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    KMEANS          reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DERL            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DBERN           reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DPOI            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    INVERSE         reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    ROTATE          reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    REF             reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    RREF            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MONT            reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    CBRACKET        reduce using rule 55 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)


state 289

    (56) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond . CPAREN SCOLON

    CPAREN          shift and go to state 290


state 290

    (56) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN . SCOLON

    SCOLON          shift and go to state 291


state 291

    (56) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .

    ID              reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    IF              reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PRINT           reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PLOT            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNT           reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNTIF         reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEAN            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEDIAN          reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MODE            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    STDV            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    KMEANS          reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DERL            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DBERN           reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DPOI            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    INVERSE         reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    ROTATE          reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    REF             reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    RREF            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MONT            reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    CBRACKET        reduce using rule 56 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOR in state 65 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 115 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 140 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 144 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 166 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 168 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 207 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 209 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 217 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 256 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (lugstat3 -> modules)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 24 resolved using rule (block2 -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 121 resolved using rule (varcte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 121
WARNING: reduce/reduce conflict in state 127 resolved using rule (plot2 -> empty)
WARNING: rejected rule (xyfunc -> empty) in state 127
WARNING: reduce/reduce conflict in state 216 resolved using rule (escrt3 -> ID)
WARNING: rejected rule (empty -> <empty>) in state 216
