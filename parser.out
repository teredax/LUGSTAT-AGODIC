Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHARACTER
    PER
    LESSTHAN
    QUOTE
    DIFF
    COMMENT
    TIPO
    NUMERIC
    LESSEQ
    GRE
    GREATERTHAN
    INTEGER
    EQ
    AND
    GREATEQ
    LOGICAL
    CTED
    CTEI
    OR

Grammar

Rule 0     S' -> lugstat
Rule 1     lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block
Rule 2     lugstat2 -> vars
Rule 3     lugstat2 -> empty
Rule 4     lugstat3 -> modules
Rule 5     lugstat3 -> modules lugstat3
Rule 6     lugstat3 -> empty
Rule 7     vars -> VAR vars1 COLON tipo SCOLON
Rule 8     vars1 -> ID
Rule 9     vars1 -> ID COMMA vars1
Rule 10    vars1 -> ID asign2
Rule 11    vars1 -> ID asign2 COMMA vars1
Rule 12    modules -> FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 block
Rule 13    modules2 -> vars
Rule 14    modules2 -> empty
Rule 15    block -> OBRACKET block2 CBRACKET
Rule 16    block2 -> estatuto
Rule 17    block2 -> estatuto block2
Rule 18    block2 -> empty
Rule 19    tipo -> INT
Rule 20    tipo -> BOOL
Rule 21    tipo -> DOUBLE
Rule 22    tipo -> STRING
Rule 23    tipo -> CHAR
Rule 24    estatuto -> asign
Rule 25    estatuto -> cond
Rule 26    estatuto -> escrt
Rule 27    estatuto -> plot
Rule 28    estatuto -> count
Rule 29    estatuto -> countif
Rule 30    estatuto -> metodos
Rule 31    asign -> ID EQUALS expresion SCOLON
Rule 32    asign -> ID EQUALS ID SCOLON
Rule 33    asign -> ID EQUALS ID asign2 SCOLON
Rule 34    asign -> ID asign2 EQUALS ID SCOLON
Rule 35    asign -> ID asign2 EQUALS expresion SCOLON
Rule 36    asign -> ID asign2 EQUALS ID asign2 SCOLON
Rule 37    asign2 -> LCOR expresion RCOR asign3
Rule 38    asign2 -> LCOR varcte RCOR asign3
Rule 39    asign3 -> LCOR expresion RCOR
Rule 40    asign3 -> LCOR varcte RCOR
Rule 41    asign3 -> empty
Rule 42    escrt -> PRINT OPAREN expresion CPAREN SCOLON
Rule 43    escrt -> PRINT OPAREN CPAREN SCOLON
Rule 44    escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON
Rule 45    escrt -> PRINT OPAREN STRING CPAREN SCOLON
Rule 46    escrt2 -> COMMA escrt3
Rule 47    escrt2 -> empty
Rule 48    escrt3 -> ID escrt2
Rule 49    escrt3 -> ID
Rule 50    escrt3 -> STRING escrt2 escrt2
Rule 51    cond -> IF OPAREN expresion CPAREN block SCOLON
Rule 52    cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON
Rule 53    count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
Rule 54    countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
Rule 55    plot -> PLOT OPAREN xyfunc CPAREN SCOLON
Rule 56    plot -> PLOT OPAREN plot2 CPAREN SCOLON
Rule 57    plot2 -> LCOR varcte COMMA varcte RCOR
Rule 58    plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2
Rule 59    plot2 -> empty
Rule 60    xyfunc -> FX EQUALS exp SCOLON xyfunc
Rule 61    xyfunc -> FY EQUALS exp SCOLON xyfunc
Rule 62    xyfunc -> empty
Rule 63    expresion -> exp
Rule 64    expresion -> expresion RELOP exp
Rule 65    exp -> termino
Rule 66    exp -> termino PLUS exp
Rule 67    exp -> termino MINUS exp
Rule 68    termino -> factor
Rule 69    termino -> factor MULT termino
Rule 70    termino -> factor DIV termino
Rule 71    factor -> OPAREN expresion CPAREN
Rule 72    factor -> PLUS varcte
Rule 73    factor -> MINUS varcte
Rule 74    factor -> varcte
Rule 75    varcte -> ID
Rule 76    varcte -> ID asign2
Rule 77    varcte -> NUMBER
Rule 78    varcte -> DOUBLE
Rule 79    metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON
Rule 80    metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON
Rule 81    metodos -> MODE OPAREN mmmfunc CPAREN SCOLON
Rule 82    metodos -> STDV OPAREN mmmfunc CPAREN SCOLON
Rule 83    metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
Rule 84    metodos -> DERL OPAREN expfunc CPAREN SCOLON
Rule 85    metodos -> DBERN OPAREN expfunc CPAREN SCOLON
Rule 86    metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON
Rule 87    metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
Rule 88    metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON
Rule 89    metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON
Rule 90    metodos -> REF OPAREN mmmfunc CPAREN SCOLON
Rule 91    metodos -> RREF OPAREN mmmfunc CPAREN SCOLON
Rule 92    metodos -> MONT OPAREN mmmfunc CPAREN SCOLON
Rule 93    expfunc -> ID COMMA ID COMMA ID
Rule 94    expfunc -> varcte COMMA varcte COMMA varcte
Rule 95    expfunc2 -> ID COMMA ID
Rule 96    expfunc2 -> varcte COMMA varcte
Rule 97    mmmfunc -> ID
Rule 98    mmmfunc -> OBRACKET mmmarray CBRACKET
Rule 99    mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc
Rule 100   mmmfunc -> empty
Rule 101   mmmarray -> varcte
Rule 102   mmmarray -> varcte COMMA mmmarray
Rule 103   mmmarray -> empty
Rule 104   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOL                 : 20
CBRACKET             : 15 98 99
CHAR                 : 23
CHARACTER            : 
COLON                : 7 12
COMMA                : 9 11 46 53 53 54 54 54 57 58 58 83 93 93 94 94 95 96 99 102
COMMENT              : 
COUNT                : 53
COUNTIF              : 54
CPAREN               : 12 42 43 44 45 51 52 53 54 55 56 71 79 80 81 82 83 84 85 86 87 88 89 90 91 92
CTED                 : 
CTEI                 : 
DBERN                : 85
DERL                 : 84
DIFF                 : 
DIV                  : 70
DOUBLE               : 21 78
DPOI                 : 86
ELSE                 : 52
EQ                   : 
EQUALS               : 31 32 33 34 35 36 60 61
FUNC                 : 12
FX                   : 60
FY                   : 61
GRE                  : 
GREATEQ              : 
GREATERTHAN          : 
ID                   : 1 8 9 10 11 12 31 32 32 33 33 34 34 35 36 36 44 48 49 53 54 75 76 93 93 93 95 95 97
IF                   : 51 52
INT                  : 19
INTEGER              : 
INVERSE              : 88
KMEANS               : 83
LCOR                 : 37 38 39 40 57 58
LESSEQ               : 
LESSTHAN             : 
LOGICAL              : 
LUGSTAT              : 1
MEAN                 : 79
MEDIAN               : 80
MINUS                : 67 73
MODE                 : 81
MONT                 : 92
MULT                 : 69
NUMBER               : 77
NUMERIC              : 
OBRACKET             : 15 98 99
OPAREN               : 12 42 43 44 45 51 52 53 54 55 56 71 79 80 81 82 83 84 85 86 87 88 89 90 91 92
OR                   : 
PER                  : 
PLOT                 : 55 56
PLUS                 : 66 72
PRINT                : 42 43 44 45
QUOTE                : 
RCOR                 : 37 38 39 40 57 58
REF                  : 90
RELOP                : 64
ROTATE               : 89
RREF                 : 91
SCOLON               : 1 7 31 32 33 34 35 36 42 43 44 45 51 52 53 54 55 56 60 61 79 80 81 82 83 84 85 86 87 88 89 90 91 92
STDV                 : 82
STRING               : 22 45 50
TIPO                 : 
TRANSPOSE            : 87
VAR                  : 7
error                : 

Nonterminals, with rules where they appear

asign                : 24
asign2               : 10 11 33 34 35 36 36 76
asign3               : 37 38
block                : 1 12 51 52 52
block2               : 15 17
cond                 : 25 54
count                : 28
countif              : 29
empty                : 3 6 14 18 41 47 59 62 100 103
escrt                : 26
escrt2               : 44 48 50 50
escrt3               : 46
estatuto             : 16 17
exp                  : 60 61 63 64 66 67
expfunc              : 84 85
expfunc2             : 86
expresion            : 31 35 37 39 42 51 52 64 71
factor               : 68 69 70
lugstat              : 0
lugstat2             : 1
lugstat3             : 1 5
metodos              : 30
mmmarray             : 98 99 102
mmmfunc              : 79 80 81 82 83 87 88 89 90 91 92 99
modules              : 4 5
modules2             : 12 12
plot                 : 27
plot2                : 56 58
termino              : 65 66 67 69 70
tipo                 : 7 12
varcte               : 38 40 53 53 54 54 57 57 58 58 72 73 74 83 94 94 94 96 96 101 102
vars                 : 2 13
vars1                : 7 9 11
xyfunc               : 55 60 61

Parsing method: LALR

state 0

    (0) S' -> . lugstat
    (1) lugstat -> . LUGSTAT ID SCOLON lugstat2 lugstat3 block

    LUGSTAT         shift and go to state 2

    lugstat                        shift and go to state 1

state 1

    (0) S' -> lugstat .



state 2

    (1) lugstat -> LUGSTAT . ID SCOLON lugstat2 lugstat3 block

    ID              shift and go to state 3


state 3

    (1) lugstat -> LUGSTAT ID . SCOLON lugstat2 lugstat3 block

    SCOLON          shift and go to state 4


state 4

    (1) lugstat -> LUGSTAT ID SCOLON . lugstat2 lugstat3 block
    (2) lugstat2 -> . vars
    (3) lugstat2 -> . empty
    (7) vars -> . VAR vars1 COLON tipo SCOLON
    (104) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 104 (empty -> .)
    OBRACKET        reduce using rule 104 (empty -> .)

    lugstat2                       shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 . lugstat3 block
    (4) lugstat3 -> . modules
    (5) lugstat3 -> . modules lugstat3
    (6) lugstat3 -> . empty
    (12) modules -> . FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 block
    (104) empty -> .

    FUNC            shift and go to state 12
    OBRACKET        reduce using rule 104 (empty -> .)

    lugstat3                       shift and go to state 9
    modules                        shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) lugstat2 -> vars .

    FUNC            reduce using rule 2 (lugstat2 -> vars .)
    OBRACKET        reduce using rule 2 (lugstat2 -> vars .)


state 7

    (3) lugstat2 -> empty .

    FUNC            reduce using rule 3 (lugstat2 -> empty .)
    OBRACKET        reduce using rule 3 (lugstat2 -> empty .)


state 8

    (7) vars -> VAR . vars1 COLON tipo SCOLON
    (8) vars1 -> . ID
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID asign2
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 13

state 9

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 . block
    (15) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 15

    block                          shift and go to state 16

state 10

    (4) lugstat3 -> modules .
    (5) lugstat3 -> modules . lugstat3
    (4) lugstat3 -> . modules
    (5) lugstat3 -> . modules lugstat3
    (6) lugstat3 -> . empty
    (12) modules -> . FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 block
    (104) empty -> .

  ! reduce/reduce conflict for OBRACKET resolved using rule 4 (lugstat3 -> modules .)
    OBRACKET        reduce using rule 4 (lugstat3 -> modules .)
    FUNC            shift and go to state 12

  ! OBRACKET        [ reduce using rule 104 (empty -> .) ]

    lugstat3                       shift and go to state 17
    modules                        shift and go to state 10
    empty                          shift and go to state 11

state 11

    (6) lugstat3 -> empty .

    OBRACKET        reduce using rule 6 (lugstat3 -> empty .)


state 12

    (12) modules -> FUNC . ID COLON tipo OPAREN modules2 CPAREN modules2 block

    ID              shift and go to state 18


state 13

    (7) vars -> VAR vars1 . COLON tipo SCOLON

    COLON           shift and go to state 19


state 14

    (8) vars1 -> ID .
    (9) vars1 -> ID . COMMA vars1
    (10) vars1 -> ID . asign2
    (11) vars1 -> ID . asign2 COMMA vars1
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

    COLON           reduce using rule 8 (vars1 -> ID .)
    COMMA           shift and go to state 21
    LCOR            shift and go to state 22

    asign2                         shift and go to state 20

state 15

    (15) block -> OBRACKET . block2 CBRACKET
    (16) block2 -> . estatuto
    (17) block2 -> . estatuto block2
    (18) block2 -> . empty
    (24) estatuto -> . asign
    (25) estatuto -> . cond
    (26) estatuto -> . escrt
    (27) estatuto -> . plot
    (28) estatuto -> . count
    (29) estatuto -> . countif
    (30) estatuto -> . metodos
    (104) empty -> .
    (31) asign -> . ID EQUALS expresion SCOLON
    (32) asign -> . ID EQUALS ID SCOLON
    (33) asign -> . ID EQUALS ID asign2 SCOLON
    (34) asign -> . ID asign2 EQUALS ID SCOLON
    (35) asign -> . ID asign2 EQUALS expresion SCOLON
    (36) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (51) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (52) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (42) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (43) escrt -> . PRINT OPAREN CPAREN SCOLON
    (44) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (45) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (55) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (56) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (53) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (54) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (79) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (80) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (81) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (84) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (85) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (86) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (87) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (88) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (89) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

    CBRACKET        reduce using rule 104 (empty -> .)
    ID              shift and go to state 42
    IF              shift and go to state 43
    PRINT           shift and go to state 29
    PLOT            shift and go to state 45
    COUNT           shift and go to state 37
    COUNTIF         shift and go to state 26
    MEAN            shift and go to state 36
    MEDIAN          shift and go to state 33
    MODE            shift and go to state 47
    STDV            shift and go to state 40
    KMEANS          shift and go to state 25
    DERL            shift and go to state 52
    DBERN           shift and go to state 28
    DPOI            shift and go to state 41
    TRANSPOSE       shift and go to state 24
    INVERSE         shift and go to state 38
    ROTATE          shift and go to state 46
    REF             shift and go to state 30
    RREF            shift and go to state 51
    MONT            shift and go to state 34

    count                          shift and go to state 44
    plot                           shift and go to state 31
    block2                         shift and go to state 23
    estatuto                       shift and go to state 32
    asign                          shift and go to state 48
    metodos                        shift and go to state 39
    countif                        shift and go to state 49
    escrt                          shift and go to state 50
    cond                           shift and go to state 27
    empty                          shift and go to state 35

state 16

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block .

    $end            reduce using rule 1 (lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block .)


state 17

    (5) lugstat3 -> modules lugstat3 .

    OBRACKET        reduce using rule 5 (lugstat3 -> modules lugstat3 .)


state 18

    (12) modules -> FUNC ID . COLON tipo OPAREN modules2 CPAREN modules2 block

    COLON           shift and go to state 53


state 19

    (7) vars -> VAR vars1 COLON . tipo SCOLON
    (19) tipo -> . INT
    (20) tipo -> . BOOL
    (21) tipo -> . DOUBLE
    (22) tipo -> . STRING
    (23) tipo -> . CHAR

    INT             shift and go to state 56
    BOOL            shift and go to state 59
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 54
    CHAR            shift and go to state 58

    tipo                           shift and go to state 55

state 20

    (10) vars1 -> ID asign2 .
    (11) vars1 -> ID asign2 . COMMA vars1

    COLON           reduce using rule 10 (vars1 -> ID asign2 .)
    COMMA           shift and go to state 60


state 21

    (9) vars1 -> ID COMMA . vars1
    (8) vars1 -> . ID
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID asign2
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 61

state 22

    (37) asign2 -> LCOR . expresion RCOR asign3
    (38) asign2 -> LCOR . varcte RCOR asign3
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65
    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67

    expresion                      shift and go to state 62
    varcte                         shift and go to state 63
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 23

    (15) block -> OBRACKET block2 . CBRACKET

    CBRACKET        shift and go to state 73


state 24

    (87) metodos -> TRANSPOSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 74


state 25

    (83) metodos -> KMEANS . OPAREN varcte COMMA mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 75


state 26

    (54) countif -> COUNTIF . OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    OPAREN          shift and go to state 76


state 27

    (25) estatuto -> cond .

    ID              reduce using rule 25 (estatuto -> cond .)
    IF              reduce using rule 25 (estatuto -> cond .)
    PRINT           reduce using rule 25 (estatuto -> cond .)
    PLOT            reduce using rule 25 (estatuto -> cond .)
    COUNT           reduce using rule 25 (estatuto -> cond .)
    COUNTIF         reduce using rule 25 (estatuto -> cond .)
    MEAN            reduce using rule 25 (estatuto -> cond .)
    MEDIAN          reduce using rule 25 (estatuto -> cond .)
    MODE            reduce using rule 25 (estatuto -> cond .)
    STDV            reduce using rule 25 (estatuto -> cond .)
    KMEANS          reduce using rule 25 (estatuto -> cond .)
    DERL            reduce using rule 25 (estatuto -> cond .)
    DBERN           reduce using rule 25 (estatuto -> cond .)
    DPOI            reduce using rule 25 (estatuto -> cond .)
    TRANSPOSE       reduce using rule 25 (estatuto -> cond .)
    INVERSE         reduce using rule 25 (estatuto -> cond .)
    ROTATE          reduce using rule 25 (estatuto -> cond .)
    REF             reduce using rule 25 (estatuto -> cond .)
    RREF            reduce using rule 25 (estatuto -> cond .)
    MONT            reduce using rule 25 (estatuto -> cond .)
    CBRACKET        reduce using rule 25 (estatuto -> cond .)


state 28

    (85) metodos -> DBERN . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 77


state 29

    (42) escrt -> PRINT . OPAREN expresion CPAREN SCOLON
    (43) escrt -> PRINT . OPAREN CPAREN SCOLON
    (44) escrt -> PRINT . OPAREN ID escrt2 CPAREN SCOLON
    (45) escrt -> PRINT . OPAREN STRING CPAREN SCOLON

    OPAREN          shift and go to state 78


state 30

    (90) metodos -> REF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 79


state 31

    (27) estatuto -> plot .

    ID              reduce using rule 27 (estatuto -> plot .)
    IF              reduce using rule 27 (estatuto -> plot .)
    PRINT           reduce using rule 27 (estatuto -> plot .)
    PLOT            reduce using rule 27 (estatuto -> plot .)
    COUNT           reduce using rule 27 (estatuto -> plot .)
    COUNTIF         reduce using rule 27 (estatuto -> plot .)
    MEAN            reduce using rule 27 (estatuto -> plot .)
    MEDIAN          reduce using rule 27 (estatuto -> plot .)
    MODE            reduce using rule 27 (estatuto -> plot .)
    STDV            reduce using rule 27 (estatuto -> plot .)
    KMEANS          reduce using rule 27 (estatuto -> plot .)
    DERL            reduce using rule 27 (estatuto -> plot .)
    DBERN           reduce using rule 27 (estatuto -> plot .)
    DPOI            reduce using rule 27 (estatuto -> plot .)
    TRANSPOSE       reduce using rule 27 (estatuto -> plot .)
    INVERSE         reduce using rule 27 (estatuto -> plot .)
    ROTATE          reduce using rule 27 (estatuto -> plot .)
    REF             reduce using rule 27 (estatuto -> plot .)
    RREF            reduce using rule 27 (estatuto -> plot .)
    MONT            reduce using rule 27 (estatuto -> plot .)
    CBRACKET        reduce using rule 27 (estatuto -> plot .)


state 32

    (16) block2 -> estatuto .
    (17) block2 -> estatuto . block2
    (16) block2 -> . estatuto
    (17) block2 -> . estatuto block2
    (18) block2 -> . empty
    (24) estatuto -> . asign
    (25) estatuto -> . cond
    (26) estatuto -> . escrt
    (27) estatuto -> . plot
    (28) estatuto -> . count
    (29) estatuto -> . countif
    (30) estatuto -> . metodos
    (104) empty -> .
    (31) asign -> . ID EQUALS expresion SCOLON
    (32) asign -> . ID EQUALS ID SCOLON
    (33) asign -> . ID EQUALS ID asign2 SCOLON
    (34) asign -> . ID asign2 EQUALS ID SCOLON
    (35) asign -> . ID asign2 EQUALS expresion SCOLON
    (36) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (51) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (52) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (42) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (43) escrt -> . PRINT OPAREN CPAREN SCOLON
    (44) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (45) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (55) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (56) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (53) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (54) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (79) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (80) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (81) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (84) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (85) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (86) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (87) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (88) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (89) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

  ! reduce/reduce conflict for CBRACKET resolved using rule 16 (block2 -> estatuto .)
    CBRACKET        reduce using rule 16 (block2 -> estatuto .)
    ID              shift and go to state 42
    IF              shift and go to state 43
    PRINT           shift and go to state 29
    PLOT            shift and go to state 45
    COUNT           shift and go to state 37
    COUNTIF         shift and go to state 26
    MEAN            shift and go to state 36
    MEDIAN          shift and go to state 33
    MODE            shift and go to state 47
    STDV            shift and go to state 40
    KMEANS          shift and go to state 25
    DERL            shift and go to state 52
    DBERN           shift and go to state 28
    DPOI            shift and go to state 41
    TRANSPOSE       shift and go to state 24
    INVERSE         shift and go to state 38
    ROTATE          shift and go to state 46
    REF             shift and go to state 30
    RREF            shift and go to state 51
    MONT            shift and go to state 34

  ! CBRACKET        [ reduce using rule 104 (empty -> .) ]

    count                          shift and go to state 44
    plot                           shift and go to state 31
    block2                         shift and go to state 80
    estatuto                       shift and go to state 32
    asign                          shift and go to state 48
    metodos                        shift and go to state 39
    countif                        shift and go to state 49
    escrt                          shift and go to state 50
    cond                           shift and go to state 27
    empty                          shift and go to state 35

state 33

    (80) metodos -> MEDIAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 81


state 34

    (92) metodos -> MONT . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 82


state 35

    (18) block2 -> empty .

    CBRACKET        reduce using rule 18 (block2 -> empty .)


state 36

    (79) metodos -> MEAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 83


state 37

    (53) count -> COUNT . OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON

    OPAREN          shift and go to state 84


state 38

    (88) metodos -> INVERSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 85


state 39

    (30) estatuto -> metodos .

    ID              reduce using rule 30 (estatuto -> metodos .)
    IF              reduce using rule 30 (estatuto -> metodos .)
    PRINT           reduce using rule 30 (estatuto -> metodos .)
    PLOT            reduce using rule 30 (estatuto -> metodos .)
    COUNT           reduce using rule 30 (estatuto -> metodos .)
    COUNTIF         reduce using rule 30 (estatuto -> metodos .)
    MEAN            reduce using rule 30 (estatuto -> metodos .)
    MEDIAN          reduce using rule 30 (estatuto -> metodos .)
    MODE            reduce using rule 30 (estatuto -> metodos .)
    STDV            reduce using rule 30 (estatuto -> metodos .)
    KMEANS          reduce using rule 30 (estatuto -> metodos .)
    DERL            reduce using rule 30 (estatuto -> metodos .)
    DBERN           reduce using rule 30 (estatuto -> metodos .)
    DPOI            reduce using rule 30 (estatuto -> metodos .)
    TRANSPOSE       reduce using rule 30 (estatuto -> metodos .)
    INVERSE         reduce using rule 30 (estatuto -> metodos .)
    ROTATE          reduce using rule 30 (estatuto -> metodos .)
    REF             reduce using rule 30 (estatuto -> metodos .)
    RREF            reduce using rule 30 (estatuto -> metodos .)
    MONT            reduce using rule 30 (estatuto -> metodos .)
    CBRACKET        reduce using rule 30 (estatuto -> metodos .)


state 40

    (82) metodos -> STDV . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 86


state 41

    (86) metodos -> DPOI . OPAREN expfunc2 CPAREN SCOLON

    OPAREN          shift and go to state 87


state 42

    (31) asign -> ID . EQUALS expresion SCOLON
    (32) asign -> ID . EQUALS ID SCOLON
    (33) asign -> ID . EQUALS ID asign2 SCOLON
    (34) asign -> ID . asign2 EQUALS ID SCOLON
    (35) asign -> ID . asign2 EQUALS expresion SCOLON
    (36) asign -> ID . asign2 EQUALS ID asign2 SCOLON
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

    EQUALS          shift and go to state 89
    LCOR            shift and go to state 22

    asign2                         shift and go to state 88

state 43

    (51) cond -> IF . OPAREN expresion CPAREN block SCOLON
    (52) cond -> IF . OPAREN expresion CPAREN block ELSE block SCOLON

    OPAREN          shift and go to state 90


state 44

    (28) estatuto -> count .

    ID              reduce using rule 28 (estatuto -> count .)
    IF              reduce using rule 28 (estatuto -> count .)
    PRINT           reduce using rule 28 (estatuto -> count .)
    PLOT            reduce using rule 28 (estatuto -> count .)
    COUNT           reduce using rule 28 (estatuto -> count .)
    COUNTIF         reduce using rule 28 (estatuto -> count .)
    MEAN            reduce using rule 28 (estatuto -> count .)
    MEDIAN          reduce using rule 28 (estatuto -> count .)
    MODE            reduce using rule 28 (estatuto -> count .)
    STDV            reduce using rule 28 (estatuto -> count .)
    KMEANS          reduce using rule 28 (estatuto -> count .)
    DERL            reduce using rule 28 (estatuto -> count .)
    DBERN           reduce using rule 28 (estatuto -> count .)
    DPOI            reduce using rule 28 (estatuto -> count .)
    TRANSPOSE       reduce using rule 28 (estatuto -> count .)
    INVERSE         reduce using rule 28 (estatuto -> count .)
    ROTATE          reduce using rule 28 (estatuto -> count .)
    REF             reduce using rule 28 (estatuto -> count .)
    RREF            reduce using rule 28 (estatuto -> count .)
    MONT            reduce using rule 28 (estatuto -> count .)
    CBRACKET        reduce using rule 28 (estatuto -> count .)


state 45

    (55) plot -> PLOT . OPAREN xyfunc CPAREN SCOLON
    (56) plot -> PLOT . OPAREN plot2 CPAREN SCOLON

    OPAREN          shift and go to state 91


state 46

    (89) metodos -> ROTATE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 92


state 47

    (81) metodos -> MODE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 93


state 48

    (24) estatuto -> asign .

    ID              reduce using rule 24 (estatuto -> asign .)
    IF              reduce using rule 24 (estatuto -> asign .)
    PRINT           reduce using rule 24 (estatuto -> asign .)
    PLOT            reduce using rule 24 (estatuto -> asign .)
    COUNT           reduce using rule 24 (estatuto -> asign .)
    COUNTIF         reduce using rule 24 (estatuto -> asign .)
    MEAN            reduce using rule 24 (estatuto -> asign .)
    MEDIAN          reduce using rule 24 (estatuto -> asign .)
    MODE            reduce using rule 24 (estatuto -> asign .)
    STDV            reduce using rule 24 (estatuto -> asign .)
    KMEANS          reduce using rule 24 (estatuto -> asign .)
    DERL            reduce using rule 24 (estatuto -> asign .)
    DBERN           reduce using rule 24 (estatuto -> asign .)
    DPOI            reduce using rule 24 (estatuto -> asign .)
    TRANSPOSE       reduce using rule 24 (estatuto -> asign .)
    INVERSE         reduce using rule 24 (estatuto -> asign .)
    ROTATE          reduce using rule 24 (estatuto -> asign .)
    REF             reduce using rule 24 (estatuto -> asign .)
    RREF            reduce using rule 24 (estatuto -> asign .)
    MONT            reduce using rule 24 (estatuto -> asign .)
    CBRACKET        reduce using rule 24 (estatuto -> asign .)


state 49

    (29) estatuto -> countif .

    ID              reduce using rule 29 (estatuto -> countif .)
    IF              reduce using rule 29 (estatuto -> countif .)
    PRINT           reduce using rule 29 (estatuto -> countif .)
    PLOT            reduce using rule 29 (estatuto -> countif .)
    COUNT           reduce using rule 29 (estatuto -> countif .)
    COUNTIF         reduce using rule 29 (estatuto -> countif .)
    MEAN            reduce using rule 29 (estatuto -> countif .)
    MEDIAN          reduce using rule 29 (estatuto -> countif .)
    MODE            reduce using rule 29 (estatuto -> countif .)
    STDV            reduce using rule 29 (estatuto -> countif .)
    KMEANS          reduce using rule 29 (estatuto -> countif .)
    DERL            reduce using rule 29 (estatuto -> countif .)
    DBERN           reduce using rule 29 (estatuto -> countif .)
    DPOI            reduce using rule 29 (estatuto -> countif .)
    TRANSPOSE       reduce using rule 29 (estatuto -> countif .)
    INVERSE         reduce using rule 29 (estatuto -> countif .)
    ROTATE          reduce using rule 29 (estatuto -> countif .)
    REF             reduce using rule 29 (estatuto -> countif .)
    RREF            reduce using rule 29 (estatuto -> countif .)
    MONT            reduce using rule 29 (estatuto -> countif .)
    CBRACKET        reduce using rule 29 (estatuto -> countif .)


state 50

    (26) estatuto -> escrt .

    ID              reduce using rule 26 (estatuto -> escrt .)
    IF              reduce using rule 26 (estatuto -> escrt .)
    PRINT           reduce using rule 26 (estatuto -> escrt .)
    PLOT            reduce using rule 26 (estatuto -> escrt .)
    COUNT           reduce using rule 26 (estatuto -> escrt .)
    COUNTIF         reduce using rule 26 (estatuto -> escrt .)
    MEAN            reduce using rule 26 (estatuto -> escrt .)
    MEDIAN          reduce using rule 26 (estatuto -> escrt .)
    MODE            reduce using rule 26 (estatuto -> escrt .)
    STDV            reduce using rule 26 (estatuto -> escrt .)
    KMEANS          reduce using rule 26 (estatuto -> escrt .)
    DERL            reduce using rule 26 (estatuto -> escrt .)
    DBERN           reduce using rule 26 (estatuto -> escrt .)
    DPOI            reduce using rule 26 (estatuto -> escrt .)
    TRANSPOSE       reduce using rule 26 (estatuto -> escrt .)
    INVERSE         reduce using rule 26 (estatuto -> escrt .)
    ROTATE          reduce using rule 26 (estatuto -> escrt .)
    REF             reduce using rule 26 (estatuto -> escrt .)
    RREF            reduce using rule 26 (estatuto -> escrt .)
    MONT            reduce using rule 26 (estatuto -> escrt .)
    CBRACKET        reduce using rule 26 (estatuto -> escrt .)


state 51

    (91) metodos -> RREF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 94


state 52

    (84) metodos -> DERL . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 95


state 53

    (12) modules -> FUNC ID COLON . tipo OPAREN modules2 CPAREN modules2 block
    (19) tipo -> . INT
    (20) tipo -> . BOOL
    (21) tipo -> . DOUBLE
    (22) tipo -> . STRING
    (23) tipo -> . CHAR

    INT             shift and go to state 56
    BOOL            shift and go to state 59
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 54
    CHAR            shift and go to state 58

    tipo                           shift and go to state 96

state 54

    (22) tipo -> STRING .

    OPAREN          reduce using rule 22 (tipo -> STRING .)
    SCOLON          reduce using rule 22 (tipo -> STRING .)


state 55

    (7) vars -> VAR vars1 COLON tipo . SCOLON

    SCOLON          shift and go to state 97


state 56

    (19) tipo -> INT .

    OPAREN          reduce using rule 19 (tipo -> INT .)
    SCOLON          reduce using rule 19 (tipo -> INT .)


state 57

    (21) tipo -> DOUBLE .

    OPAREN          reduce using rule 21 (tipo -> DOUBLE .)
    SCOLON          reduce using rule 21 (tipo -> DOUBLE .)


state 58

    (23) tipo -> CHAR .

    OPAREN          reduce using rule 23 (tipo -> CHAR .)
    SCOLON          reduce using rule 23 (tipo -> CHAR .)


state 59

    (20) tipo -> BOOL .

    OPAREN          reduce using rule 20 (tipo -> BOOL .)
    SCOLON          reduce using rule 20 (tipo -> BOOL .)


state 60

    (11) vars1 -> ID asign2 COMMA . vars1
    (8) vars1 -> . ID
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID asign2
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 98

state 61

    (9) vars1 -> ID COMMA vars1 .

    COLON           reduce using rule 9 (vars1 -> ID COMMA vars1 .)


state 62

    (37) asign2 -> LCOR expresion . RCOR asign3
    (64) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 100
    RELOP           shift and go to state 99


state 63

    (38) asign2 -> LCOR varcte . RCOR asign3
    (74) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 101
    MULT            reduce using rule 74 (factor -> varcte .)
    DIV             reduce using rule 74 (factor -> varcte .)
    PLUS            reduce using rule 74 (factor -> varcte .)
    MINUS           reduce using rule 74 (factor -> varcte .)
    RELOP           reduce using rule 74 (factor -> varcte .)

  ! RCOR            [ reduce using rule 74 (factor -> varcte .) ]


state 64

    (71) factor -> OPAREN . expresion CPAREN
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expresion                      shift and go to state 102
    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 65

    (78) varcte -> DOUBLE .

    COMMA           reduce using rule 78 (varcte -> DOUBLE .)
    MULT            reduce using rule 78 (varcte -> DOUBLE .)
    DIV             reduce using rule 78 (varcte -> DOUBLE .)
    PLUS            reduce using rule 78 (varcte -> DOUBLE .)
    MINUS           reduce using rule 78 (varcte -> DOUBLE .)
    RCOR            reduce using rule 78 (varcte -> DOUBLE .)
    RELOP           reduce using rule 78 (varcte -> DOUBLE .)
    CPAREN          reduce using rule 78 (varcte -> DOUBLE .)
    SCOLON          reduce using rule 78 (varcte -> DOUBLE .)
    CBRACKET        reduce using rule 78 (varcte -> DOUBLE .)


state 66

    (77) varcte -> NUMBER .

    COMMA           reduce using rule 77 (varcte -> NUMBER .)
    MULT            reduce using rule 77 (varcte -> NUMBER .)
    DIV             reduce using rule 77 (varcte -> NUMBER .)
    PLUS            reduce using rule 77 (varcte -> NUMBER .)
    MINUS           reduce using rule 77 (varcte -> NUMBER .)
    RCOR            reduce using rule 77 (varcte -> NUMBER .)
    RELOP           reduce using rule 77 (varcte -> NUMBER .)
    CPAREN          reduce using rule 77 (varcte -> NUMBER .)
    SCOLON          reduce using rule 77 (varcte -> NUMBER .)
    CBRACKET        reduce using rule 77 (varcte -> NUMBER .)


state 67

    (73) factor -> MINUS . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 104

state 68

    (72) factor -> PLUS . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 105

state 69

    (65) exp -> termino .
    (66) exp -> termino . PLUS exp
    (67) exp -> termino . MINUS exp

    SCOLON          reduce using rule 65 (exp -> termino .)
    RELOP           reduce using rule 65 (exp -> termino .)
    RCOR            reduce using rule 65 (exp -> termino .)
    CPAREN          reduce using rule 65 (exp -> termino .)
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107


state 70

    (63) expresion -> exp .

    RCOR            reduce using rule 63 (expresion -> exp .)
    RELOP           reduce using rule 63 (expresion -> exp .)
    SCOLON          reduce using rule 63 (expresion -> exp .)
    CPAREN          reduce using rule 63 (expresion -> exp .)


state 71

    (68) termino -> factor .
    (69) termino -> factor . MULT termino
    (70) termino -> factor . DIV termino

    PLUS            reduce using rule 68 (termino -> factor .)
    MINUS           reduce using rule 68 (termino -> factor .)
    SCOLON          reduce using rule 68 (termino -> factor .)
    RELOP           reduce using rule 68 (termino -> factor .)
    RCOR            reduce using rule 68 (termino -> factor .)
    CPAREN          reduce using rule 68 (termino -> factor .)
    MULT            shift and go to state 109
    DIV             shift and go to state 108


state 72

    (75) varcte -> ID .
    (76) varcte -> ID . asign2
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

    COMMA           reduce using rule 75 (varcte -> ID .)
    MULT            reduce using rule 75 (varcte -> ID .)
    DIV             reduce using rule 75 (varcte -> ID .)
    PLUS            reduce using rule 75 (varcte -> ID .)
    MINUS           reduce using rule 75 (varcte -> ID .)
    RCOR            reduce using rule 75 (varcte -> ID .)
    RELOP           reduce using rule 75 (varcte -> ID .)
    CPAREN          reduce using rule 75 (varcte -> ID .)
    SCOLON          reduce using rule 75 (varcte -> ID .)
    CBRACKET        reduce using rule 75 (varcte -> ID .)
    LCOR            shift and go to state 22

    asign2                         shift and go to state 110

state 73

    (15) block -> OBRACKET block2 CBRACKET .

    FUNC            reduce using rule 15 (block -> OBRACKET block2 CBRACKET .)
    OBRACKET        reduce using rule 15 (block -> OBRACKET block2 CBRACKET .)
    $end            reduce using rule 15 (block -> OBRACKET block2 CBRACKET .)
    SCOLON          reduce using rule 15 (block -> OBRACKET block2 CBRACKET .)
    ELSE            reduce using rule 15 (block -> OBRACKET block2 CBRACKET .)


state 74

    (87) metodos -> TRANSPOSE OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 111

state 75

    (83) metodos -> KMEANS OPAREN . varcte COMMA mmmfunc CPAREN SCOLON
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 115

state 76

    (54) countif -> COUNTIF OPAREN . ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    ID              shift and go to state 116


state 77

    (85) metodos -> DBERN OPAREN . expfunc CPAREN SCOLON
    (93) expfunc -> . ID COMMA ID COMMA ID
    (94) expfunc -> . varcte COMMA varcte COMMA varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 119
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expfunc                        shift and go to state 118
    varcte                         shift and go to state 117

state 78

    (42) escrt -> PRINT OPAREN . expresion CPAREN SCOLON
    (43) escrt -> PRINT OPAREN . CPAREN SCOLON
    (44) escrt -> PRINT OPAREN . ID escrt2 CPAREN SCOLON
    (45) escrt -> PRINT OPAREN . STRING CPAREN SCOLON
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    CPAREN          shift and go to state 122
    ID              shift and go to state 123
    STRING          shift and go to state 121
    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expresion                      shift and go to state 120
    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 79

    (90) metodos -> REF OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 124

state 80

    (17) block2 -> estatuto block2 .

    CBRACKET        reduce using rule 17 (block2 -> estatuto block2 .)


state 81

    (80) metodos -> MEDIAN OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 125

state 82

    (92) metodos -> MONT OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 126

state 83

    (79) metodos -> MEAN OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 127

state 84

    (53) count -> COUNT OPAREN . ID COMMA varcte COMMA varcte CPAREN SCOLON

    ID              shift and go to state 128


state 85

    (88) metodos -> INVERSE OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 129

state 86

    (82) metodos -> STDV OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 130

state 87

    (86) metodos -> DPOI OPAREN . expfunc2 CPAREN SCOLON
    (95) expfunc2 -> . ID COMMA ID
    (96) expfunc2 -> . varcte COMMA varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 133
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 131
    expfunc2                       shift and go to state 132

state 88

    (34) asign -> ID asign2 . EQUALS ID SCOLON
    (35) asign -> ID asign2 . EQUALS expresion SCOLON
    (36) asign -> ID asign2 . EQUALS ID asign2 SCOLON

    EQUALS          shift and go to state 134


state 89

    (31) asign -> ID EQUALS . expresion SCOLON
    (32) asign -> ID EQUALS . ID SCOLON
    (33) asign -> ID EQUALS . ID asign2 SCOLON
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 136
    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expresion                      shift and go to state 135
    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 90

    (51) cond -> IF OPAREN . expresion CPAREN block SCOLON
    (52) cond -> IF OPAREN . expresion CPAREN block ELSE block SCOLON
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expresion                      shift and go to state 137
    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 91

    (55) plot -> PLOT OPAREN . xyfunc CPAREN SCOLON
    (56) plot -> PLOT OPAREN . plot2 CPAREN SCOLON
    (60) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (61) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (62) xyfunc -> . empty
    (57) plot2 -> . LCOR varcte COMMA varcte RCOR
    (58) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (59) plot2 -> . empty
    (104) empty -> .

    FX              shift and go to state 138
    FY              shift and go to state 139
    LCOR            shift and go to state 140
    CPAREN          reduce using rule 104 (empty -> .)

    plot2                          shift and go to state 142
    empty                          shift and go to state 143
    xyfunc                         shift and go to state 141

state 92

    (89) metodos -> ROTATE OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 144

state 93

    (81) metodos -> MODE OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 145

state 94

    (91) metodos -> RREF OPAREN . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 146

state 95

    (84) metodos -> DERL OPAREN . expfunc CPAREN SCOLON
    (93) expfunc -> . ID COMMA ID COMMA ID
    (94) expfunc -> . varcte COMMA varcte COMMA varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 119
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expfunc                        shift and go to state 147
    varcte                         shift and go to state 117

state 96

    (12) modules -> FUNC ID COLON tipo . OPAREN modules2 CPAREN modules2 block

    OPAREN          shift and go to state 148


state 97

    (7) vars -> VAR vars1 COLON tipo SCOLON .

    CPAREN          reduce using rule 7 (vars -> VAR vars1 COLON tipo SCOLON .)
    FUNC            reduce using rule 7 (vars -> VAR vars1 COLON tipo SCOLON .)
    OBRACKET        reduce using rule 7 (vars -> VAR vars1 COLON tipo SCOLON .)


state 98

    (11) vars1 -> ID asign2 COMMA vars1 .

    COLON           reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)


state 99

    (64) expresion -> expresion RELOP . exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 149
    factor                         shift and go to state 71

state 100

    (37) asign2 -> LCOR expresion RCOR . asign3
    (39) asign3 -> . LCOR expresion RCOR
    (40) asign3 -> . LCOR varcte RCOR
    (41) asign3 -> . empty
    (104) empty -> .

    LCOR            shift and go to state 151
    COMMA           reduce using rule 104 (empty -> .)
    COLON           reduce using rule 104 (empty -> .)
    EQUALS          reduce using rule 104 (empty -> .)
    RCOR            reduce using rule 104 (empty -> .)
    MULT            reduce using rule 104 (empty -> .)
    DIV             reduce using rule 104 (empty -> .)
    PLUS            reduce using rule 104 (empty -> .)
    MINUS           reduce using rule 104 (empty -> .)
    RELOP           reduce using rule 104 (empty -> .)
    CPAREN          reduce using rule 104 (empty -> .)
    SCOLON          reduce using rule 104 (empty -> .)
    CBRACKET        reduce using rule 104 (empty -> .)

    asign3                         shift and go to state 150
    empty                          shift and go to state 152

state 101

    (38) asign2 -> LCOR varcte RCOR . asign3
    (39) asign3 -> . LCOR expresion RCOR
    (40) asign3 -> . LCOR varcte RCOR
    (41) asign3 -> . empty
    (104) empty -> .

    LCOR            shift and go to state 151
    COMMA           reduce using rule 104 (empty -> .)
    COLON           reduce using rule 104 (empty -> .)
    EQUALS          reduce using rule 104 (empty -> .)
    RCOR            reduce using rule 104 (empty -> .)
    MULT            reduce using rule 104 (empty -> .)
    DIV             reduce using rule 104 (empty -> .)
    PLUS            reduce using rule 104 (empty -> .)
    MINUS           reduce using rule 104 (empty -> .)
    RELOP           reduce using rule 104 (empty -> .)
    CPAREN          reduce using rule 104 (empty -> .)
    SCOLON          reduce using rule 104 (empty -> .)
    CBRACKET        reduce using rule 104 (empty -> .)

    asign3                         shift and go to state 153
    empty                          shift and go to state 152

state 102

    (71) factor -> OPAREN expresion . CPAREN
    (64) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 154
    RELOP           shift and go to state 99


state 103

    (74) factor -> varcte .

    MULT            reduce using rule 74 (factor -> varcte .)
    DIV             reduce using rule 74 (factor -> varcte .)
    PLUS            reduce using rule 74 (factor -> varcte .)
    MINUS           reduce using rule 74 (factor -> varcte .)
    RCOR            reduce using rule 74 (factor -> varcte .)
    RELOP           reduce using rule 74 (factor -> varcte .)
    CPAREN          reduce using rule 74 (factor -> varcte .)
    SCOLON          reduce using rule 74 (factor -> varcte .)


state 104

    (73) factor -> MINUS varcte .

    MULT            reduce using rule 73 (factor -> MINUS varcte .)
    DIV             reduce using rule 73 (factor -> MINUS varcte .)
    PLUS            reduce using rule 73 (factor -> MINUS varcte .)
    MINUS           reduce using rule 73 (factor -> MINUS varcte .)
    RCOR            reduce using rule 73 (factor -> MINUS varcte .)
    RELOP           reduce using rule 73 (factor -> MINUS varcte .)
    CPAREN          reduce using rule 73 (factor -> MINUS varcte .)
    SCOLON          reduce using rule 73 (factor -> MINUS varcte .)


state 105

    (72) factor -> PLUS varcte .

    MULT            reduce using rule 72 (factor -> PLUS varcte .)
    DIV             reduce using rule 72 (factor -> PLUS varcte .)
    PLUS            reduce using rule 72 (factor -> PLUS varcte .)
    MINUS           reduce using rule 72 (factor -> PLUS varcte .)
    RCOR            reduce using rule 72 (factor -> PLUS varcte .)
    RELOP           reduce using rule 72 (factor -> PLUS varcte .)
    CPAREN          reduce using rule 72 (factor -> PLUS varcte .)
    SCOLON          reduce using rule 72 (factor -> PLUS varcte .)


state 106

    (66) exp -> termino PLUS . exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 155
    factor                         shift and go to state 71

state 107

    (67) exp -> termino MINUS . exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 156
    factor                         shift and go to state 71

state 108

    (70) termino -> factor DIV . termino
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    termino                        shift and go to state 157
    factor                         shift and go to state 71

state 109

    (69) termino -> factor MULT . termino
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    termino                        shift and go to state 158
    factor                         shift and go to state 71

state 110

    (76) varcte -> ID asign2 .

    COMMA           reduce using rule 76 (varcte -> ID asign2 .)
    MULT            reduce using rule 76 (varcte -> ID asign2 .)
    DIV             reduce using rule 76 (varcte -> ID asign2 .)
    PLUS            reduce using rule 76 (varcte -> ID asign2 .)
    MINUS           reduce using rule 76 (varcte -> ID asign2 .)
    RCOR            reduce using rule 76 (varcte -> ID asign2 .)
    RELOP           reduce using rule 76 (varcte -> ID asign2 .)
    CPAREN          reduce using rule 76 (varcte -> ID asign2 .)
    SCOLON          reduce using rule 76 (varcte -> ID asign2 .)
    CBRACKET        reduce using rule 76 (varcte -> ID asign2 .)


state 111

    (87) metodos -> TRANSPOSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 159


state 112

    (98) mmmfunc -> OBRACKET . mmmarray CBRACKET
    (99) mmmfunc -> OBRACKET . mmmarray CBRACKET COMMA mmmfunc
    (101) mmmarray -> . varcte
    (102) mmmarray -> . varcte COMMA mmmarray
    (103) mmmarray -> . empty
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE
    (104) empty -> .

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65
    CBRACKET        reduce using rule 104 (empty -> .)

    empty                          shift and go to state 162
    mmmarray                       shift and go to state 161
    varcte                         shift and go to state 160

state 113

    (97) mmmfunc -> ID .

    CPAREN          reduce using rule 97 (mmmfunc -> ID .)


state 114

    (100) mmmfunc -> empty .

    CPAREN          reduce using rule 100 (mmmfunc -> empty .)


state 115

    (83) metodos -> KMEANS OPAREN varcte . COMMA mmmfunc CPAREN SCOLON

    COMMA           shift and go to state 163


state 116

    (54) countif -> COUNTIF OPAREN ID . COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 164


state 117

    (94) expfunc -> varcte . COMMA varcte COMMA varcte

    COMMA           shift and go to state 165


state 118

    (85) metodos -> DBERN OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 166


state 119

    (93) expfunc -> ID . COMMA ID COMMA ID
    (75) varcte -> ID .
    (76) varcte -> ID . asign2
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 167
    LCOR            shift and go to state 22

  ! COMMA           [ reduce using rule 75 (varcte -> ID .) ]

    asign2                         shift and go to state 110

state 120

    (42) escrt -> PRINT OPAREN expresion . CPAREN SCOLON
    (64) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 168
    RELOP           shift and go to state 99


state 121

    (45) escrt -> PRINT OPAREN STRING . CPAREN SCOLON

    CPAREN          shift and go to state 169


state 122

    (43) escrt -> PRINT OPAREN CPAREN . SCOLON

    SCOLON          shift and go to state 170


state 123

    (44) escrt -> PRINT OPAREN ID . escrt2 CPAREN SCOLON
    (75) varcte -> ID .
    (76) varcte -> ID . asign2
    (46) escrt2 -> . COMMA escrt3
    (47) escrt2 -> . empty
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3
    (104) empty -> .

  ! reduce/reduce conflict for CPAREN resolved using rule 75 (varcte -> ID .)
    MULT            reduce using rule 75 (varcte -> ID .)
    DIV             reduce using rule 75 (varcte -> ID .)
    PLUS            reduce using rule 75 (varcte -> ID .)
    MINUS           reduce using rule 75 (varcte -> ID .)
    CPAREN          reduce using rule 75 (varcte -> ID .)
    RELOP           reduce using rule 75 (varcte -> ID .)
    COMMA           shift and go to state 172
    LCOR            shift and go to state 22

  ! CPAREN          [ reduce using rule 104 (empty -> .) ]

    escrt2                         shift and go to state 171
    asign2                         shift and go to state 110
    empty                          shift and go to state 173

state 124

    (90) metodos -> REF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 174


state 125

    (80) metodos -> MEDIAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 175


state 126

    (92) metodos -> MONT OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 176


state 127

    (79) metodos -> MEAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 177


state 128

    (53) count -> COUNT OPAREN ID . COMMA varcte COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 178


state 129

    (88) metodos -> INVERSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 179


state 130

    (82) metodos -> STDV OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 180


state 131

    (96) expfunc2 -> varcte . COMMA varcte

    COMMA           shift and go to state 181


state 132

    (86) metodos -> DPOI OPAREN expfunc2 . CPAREN SCOLON

    CPAREN          shift and go to state 182


state 133

    (95) expfunc2 -> ID . COMMA ID
    (75) varcte -> ID .
    (76) varcte -> ID . asign2
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 183
    LCOR            shift and go to state 22

  ! COMMA           [ reduce using rule 75 (varcte -> ID .) ]

    asign2                         shift and go to state 110

state 134

    (34) asign -> ID asign2 EQUALS . ID SCOLON
    (35) asign -> ID asign2 EQUALS . expresion SCOLON
    (36) asign -> ID asign2 EQUALS . ID asign2 SCOLON
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 185
    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    expresion                      shift and go to state 184
    varcte                         shift and go to state 103
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 135

    (31) asign -> ID EQUALS expresion . SCOLON
    (64) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 186
    RELOP           shift and go to state 99


state 136

    (32) asign -> ID EQUALS ID . SCOLON
    (33) asign -> ID EQUALS ID . asign2 SCOLON
    (75) varcte -> ID .
    (76) varcte -> ID . asign2
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 188
    MULT            reduce using rule 75 (varcte -> ID .)
    DIV             reduce using rule 75 (varcte -> ID .)
    PLUS            reduce using rule 75 (varcte -> ID .)
    MINUS           reduce using rule 75 (varcte -> ID .)
    RELOP           reduce using rule 75 (varcte -> ID .)
    LCOR            shift and go to state 22

  ! SCOLON          [ reduce using rule 75 (varcte -> ID .) ]

    asign2                         shift and go to state 187

state 137

    (51) cond -> IF OPAREN expresion . CPAREN block SCOLON
    (52) cond -> IF OPAREN expresion . CPAREN block ELSE block SCOLON
    (64) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 189
    RELOP           shift and go to state 99


state 138

    (60) xyfunc -> FX . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 190


state 139

    (61) xyfunc -> FY . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 191


state 140

    (57) plot2 -> LCOR . varcte COMMA varcte RCOR
    (58) plot2 -> LCOR . varcte COMMA varcte RCOR COMMA plot2
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 192

state 141

    (55) plot -> PLOT OPAREN xyfunc . CPAREN SCOLON

    CPAREN          shift and go to state 193


state 142

    (56) plot -> PLOT OPAREN plot2 . CPAREN SCOLON

    CPAREN          shift and go to state 194


state 143

    (62) xyfunc -> empty .
    (59) plot2 -> empty .

  ! reduce/reduce conflict for CPAREN resolved using rule 59 (plot2 -> empty .)
    CPAREN          reduce using rule 59 (plot2 -> empty .)

  ! CPAREN          [ reduce using rule 62 (xyfunc -> empty .) ]


state 144

    (89) metodos -> ROTATE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 195


state 145

    (81) metodos -> MODE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 196


state 146

    (91) metodos -> RREF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 197


state 147

    (84) metodos -> DERL OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 198


state 148

    (12) modules -> FUNC ID COLON tipo OPAREN . modules2 CPAREN modules2 block
    (13) modules2 -> . vars
    (14) modules2 -> . empty
    (7) vars -> . VAR vars1 COLON tipo SCOLON
    (104) empty -> .

    VAR             shift and go to state 8
    CPAREN          reduce using rule 104 (empty -> .)

    vars                           shift and go to state 199
    modules2                       shift and go to state 201
    empty                          shift and go to state 200

state 149

    (64) expresion -> expresion RELOP exp .

    RCOR            reduce using rule 64 (expresion -> expresion RELOP exp .)
    RELOP           reduce using rule 64 (expresion -> expresion RELOP exp .)
    SCOLON          reduce using rule 64 (expresion -> expresion RELOP exp .)
    CPAREN          reduce using rule 64 (expresion -> expresion RELOP exp .)


state 150

    (37) asign2 -> LCOR expresion RCOR asign3 .

    SCOLON          reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    MULT            reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    DIV             reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    PLUS            reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    MINUS           reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    RELOP           reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    CPAREN          reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    EQUALS          reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    COMMA           reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    COLON           reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    RCOR            reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)
    CBRACKET        reduce using rule 37 (asign2 -> LCOR expresion RCOR asign3 .)


state 151

    (39) asign3 -> LCOR . expresion RCOR
    (40) asign3 -> LCOR . varcte RCOR
    (63) expresion -> . exp
    (64) expresion -> . expresion RELOP exp
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65
    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67

    expresion                      shift and go to state 202
    varcte                         shift and go to state 203
    termino                        shift and go to state 69
    exp                            shift and go to state 70
    factor                         shift and go to state 71

state 152

    (41) asign3 -> empty .

    COMMA           reduce using rule 41 (asign3 -> empty .)
    COLON           reduce using rule 41 (asign3 -> empty .)
    EQUALS          reduce using rule 41 (asign3 -> empty .)
    RCOR            reduce using rule 41 (asign3 -> empty .)
    MULT            reduce using rule 41 (asign3 -> empty .)
    DIV             reduce using rule 41 (asign3 -> empty .)
    PLUS            reduce using rule 41 (asign3 -> empty .)
    MINUS           reduce using rule 41 (asign3 -> empty .)
    RELOP           reduce using rule 41 (asign3 -> empty .)
    CPAREN          reduce using rule 41 (asign3 -> empty .)
    SCOLON          reduce using rule 41 (asign3 -> empty .)
    CBRACKET        reduce using rule 41 (asign3 -> empty .)


state 153

    (38) asign2 -> LCOR varcte RCOR asign3 .

    SCOLON          reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    MULT            reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    DIV             reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    PLUS            reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    MINUS           reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    RELOP           reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    CPAREN          reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    EQUALS          reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    COMMA           reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    COLON           reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    RCOR            reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)
    CBRACKET        reduce using rule 38 (asign2 -> LCOR varcte RCOR asign3 .)


state 154

    (71) factor -> OPAREN expresion CPAREN .

    MULT            reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    DIV             reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    RCOR            reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    RELOP           reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 71 (factor -> OPAREN expresion CPAREN .)
    SCOLON          reduce using rule 71 (factor -> OPAREN expresion CPAREN .)


state 155

    (66) exp -> termino PLUS exp .

    SCOLON          reduce using rule 66 (exp -> termino PLUS exp .)
    RELOP           reduce using rule 66 (exp -> termino PLUS exp .)
    RCOR            reduce using rule 66 (exp -> termino PLUS exp .)
    CPAREN          reduce using rule 66 (exp -> termino PLUS exp .)


state 156

    (67) exp -> termino MINUS exp .

    SCOLON          reduce using rule 67 (exp -> termino MINUS exp .)
    RELOP           reduce using rule 67 (exp -> termino MINUS exp .)
    RCOR            reduce using rule 67 (exp -> termino MINUS exp .)
    CPAREN          reduce using rule 67 (exp -> termino MINUS exp .)


state 157

    (70) termino -> factor DIV termino .

    PLUS            reduce using rule 70 (termino -> factor DIV termino .)
    MINUS           reduce using rule 70 (termino -> factor DIV termino .)
    SCOLON          reduce using rule 70 (termino -> factor DIV termino .)
    RELOP           reduce using rule 70 (termino -> factor DIV termino .)
    RCOR            reduce using rule 70 (termino -> factor DIV termino .)
    CPAREN          reduce using rule 70 (termino -> factor DIV termino .)


state 158

    (69) termino -> factor MULT termino .

    PLUS            reduce using rule 69 (termino -> factor MULT termino .)
    MINUS           reduce using rule 69 (termino -> factor MULT termino .)
    SCOLON          reduce using rule 69 (termino -> factor MULT termino .)
    RELOP           reduce using rule 69 (termino -> factor MULT termino .)
    RCOR            reduce using rule 69 (termino -> factor MULT termino .)
    CPAREN          reduce using rule 69 (termino -> factor MULT termino .)


state 159

    (87) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 204


state 160

    (101) mmmarray -> varcte .
    (102) mmmarray -> varcte . COMMA mmmarray

    CBRACKET        reduce using rule 101 (mmmarray -> varcte .)
    COMMA           shift and go to state 205


state 161

    (98) mmmfunc -> OBRACKET mmmarray . CBRACKET
    (99) mmmfunc -> OBRACKET mmmarray . CBRACKET COMMA mmmfunc

    CBRACKET        shift and go to state 206


state 162

    (103) mmmarray -> empty .

    CBRACKET        reduce using rule 103 (mmmarray -> empty .)


state 163

    (83) metodos -> KMEANS OPAREN varcte COMMA . mmmfunc CPAREN SCOLON
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 207

state 164

    (54) countif -> COUNTIF OPAREN ID COMMA . varcte COMMA varcte COMMA cond CPAREN SCOLON
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 208

state 165

    (94) expfunc -> varcte COMMA . varcte COMMA varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 209

state 166

    (85) metodos -> DBERN OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 210


state 167

    (93) expfunc -> ID COMMA . ID COMMA ID

    ID              shift and go to state 211


state 168

    (42) escrt -> PRINT OPAREN expresion CPAREN . SCOLON

    SCOLON          shift and go to state 212


state 169

    (45) escrt -> PRINT OPAREN STRING CPAREN . SCOLON

    SCOLON          shift and go to state 213


state 170

    (43) escrt -> PRINT OPAREN CPAREN SCOLON .

    ID              reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    IF              reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PRINT           reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PLOT            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNT           reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNTIF         reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEAN            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEDIAN          reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MODE            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    STDV            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    KMEANS          reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DERL            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DBERN           reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DPOI            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    INVERSE         reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    ROTATE          reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    REF             reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    RREF            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MONT            reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    CBRACKET        reduce using rule 43 (escrt -> PRINT OPAREN CPAREN SCOLON .)


state 171

    (44) escrt -> PRINT OPAREN ID escrt2 . CPAREN SCOLON

    CPAREN          shift and go to state 214


state 172

    (46) escrt2 -> COMMA . escrt3
    (48) escrt3 -> . ID escrt2
    (49) escrt3 -> . ID
    (50) escrt3 -> . STRING escrt2 escrt2

    ID              shift and go to state 216
    STRING          shift and go to state 215

    escrt3                         shift and go to state 217

state 173

    (47) escrt2 -> empty .

    CPAREN          reduce using rule 47 (escrt2 -> empty .)
    COMMA           reduce using rule 47 (escrt2 -> empty .)


state 174

    (90) metodos -> REF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 218


state 175

    (80) metodos -> MEDIAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 219


state 176

    (92) metodos -> MONT OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 220


state 177

    (79) metodos -> MEAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 221


state 178

    (53) count -> COUNT OPAREN ID COMMA . varcte COMMA varcte CPAREN SCOLON
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 222

state 179

    (88) metodos -> INVERSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 223


state 180

    (82) metodos -> STDV OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 224


state 181

    (96) expfunc2 -> varcte COMMA . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 225

state 182

    (86) metodos -> DPOI OPAREN expfunc2 CPAREN . SCOLON

    SCOLON          shift and go to state 226


state 183

    (95) expfunc2 -> ID COMMA . ID

    ID              shift and go to state 227


state 184

    (35) asign -> ID asign2 EQUALS expresion . SCOLON
    (64) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 228
    RELOP           shift and go to state 99


state 185

    (34) asign -> ID asign2 EQUALS ID . SCOLON
    (36) asign -> ID asign2 EQUALS ID . asign2 SCOLON
    (75) varcte -> ID .
    (76) varcte -> ID . asign2
    (37) asign2 -> . LCOR expresion RCOR asign3
    (38) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 230
    MULT            reduce using rule 75 (varcte -> ID .)
    DIV             reduce using rule 75 (varcte -> ID .)
    PLUS            reduce using rule 75 (varcte -> ID .)
    MINUS           reduce using rule 75 (varcte -> ID .)
    RELOP           reduce using rule 75 (varcte -> ID .)
    LCOR            shift and go to state 22

  ! SCOLON          [ reduce using rule 75 (varcte -> ID .) ]

    asign2                         shift and go to state 229

state 186

    (31) asign -> ID EQUALS expresion SCOLON .

    ID              reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    IF              reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    PRINT           reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    PLOT            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    COUNT           reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    MEAN            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    MODE            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    STDV            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    DERL            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    DBERN           reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    DPOI            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    REF             reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    RREF            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    MONT            reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 31 (asign -> ID EQUALS expresion SCOLON .)


state 187

    (33) asign -> ID EQUALS ID asign2 . SCOLON
    (76) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 231
    MULT            reduce using rule 76 (varcte -> ID asign2 .)
    DIV             reduce using rule 76 (varcte -> ID asign2 .)
    PLUS            reduce using rule 76 (varcte -> ID asign2 .)
    MINUS           reduce using rule 76 (varcte -> ID asign2 .)
    RELOP           reduce using rule 76 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 76 (varcte -> ID asign2 .) ]


state 188

    (32) asign -> ID EQUALS ID SCOLON .

    ID              reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    IF              reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    PRINT           reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    PLOT            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    COUNT           reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    MEAN            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    MODE            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    STDV            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    KMEANS          reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    DERL            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    DBERN           reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    DPOI            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    INVERSE         reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    ROTATE          reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    REF             reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    RREF            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    MONT            reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 32 (asign -> ID EQUALS ID SCOLON .)


state 189

    (51) cond -> IF OPAREN expresion CPAREN . block SCOLON
    (52) cond -> IF OPAREN expresion CPAREN . block ELSE block SCOLON
    (15) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 15

    block                          shift and go to state 232

state 190

    (60) xyfunc -> FX EQUALS . exp SCOLON xyfunc
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    exp                            shift and go to state 233
    factor                         shift and go to state 71
    termino                        shift and go to state 69

state 191

    (61) xyfunc -> FY EQUALS . exp SCOLON xyfunc
    (65) exp -> . termino
    (66) exp -> . termino PLUS exp
    (67) exp -> . termino MINUS exp
    (68) termino -> . factor
    (69) termino -> . factor MULT termino
    (70) termino -> . factor DIV termino
    (71) factor -> . OPAREN expresion CPAREN
    (72) factor -> . PLUS varcte
    (73) factor -> . MINUS varcte
    (74) factor -> . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    OPAREN          shift and go to state 64
    PLUS            shift and go to state 68
    MINUS           shift and go to state 67
    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 103
    exp                            shift and go to state 234
    factor                         shift and go to state 71
    termino                        shift and go to state 69

state 192

    (57) plot2 -> LCOR varcte . COMMA varcte RCOR
    (58) plot2 -> LCOR varcte . COMMA varcte RCOR COMMA plot2

    COMMA           shift and go to state 235


state 193

    (55) plot -> PLOT OPAREN xyfunc CPAREN . SCOLON

    SCOLON          shift and go to state 236


state 194

    (56) plot -> PLOT OPAREN plot2 CPAREN . SCOLON

    SCOLON          shift and go to state 237


state 195

    (89) metodos -> ROTATE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 238


state 196

    (81) metodos -> MODE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 239


state 197

    (91) metodos -> RREF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 240


state 198

    (84) metodos -> DERL OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 241


state 199

    (13) modules2 -> vars .

    OBRACKET        reduce using rule 13 (modules2 -> vars .)
    CPAREN          reduce using rule 13 (modules2 -> vars .)


state 200

    (14) modules2 -> empty .

    OBRACKET        reduce using rule 14 (modules2 -> empty .)
    CPAREN          reduce using rule 14 (modules2 -> empty .)


state 201

    (12) modules -> FUNC ID COLON tipo OPAREN modules2 . CPAREN modules2 block

    CPAREN          shift and go to state 242


state 202

    (39) asign3 -> LCOR expresion . RCOR
    (64) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 243
    RELOP           shift and go to state 99


state 203

    (40) asign3 -> LCOR varcte . RCOR
    (74) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 244
    MULT            reduce using rule 74 (factor -> varcte .)
    DIV             reduce using rule 74 (factor -> varcte .)
    PLUS            reduce using rule 74 (factor -> varcte .)
    MINUS           reduce using rule 74 (factor -> varcte .)
    RELOP           reduce using rule 74 (factor -> varcte .)

  ! RCOR            [ reduce using rule 74 (factor -> varcte .) ]


state 204

    (87) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 87 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)


state 205

    (102) mmmarray -> varcte COMMA . mmmarray
    (101) mmmarray -> . varcte
    (102) mmmarray -> . varcte COMMA mmmarray
    (103) mmmarray -> . empty
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE
    (104) empty -> .

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65
    CBRACKET        reduce using rule 104 (empty -> .)

    empty                          shift and go to state 162
    varcte                         shift and go to state 160
    mmmarray                       shift and go to state 245

state 206

    (98) mmmfunc -> OBRACKET mmmarray CBRACKET .
    (99) mmmfunc -> OBRACKET mmmarray CBRACKET . COMMA mmmfunc

    CPAREN          reduce using rule 98 (mmmfunc -> OBRACKET mmmarray CBRACKET .)
    COMMA           shift and go to state 246


state 207

    (83) metodos -> KMEANS OPAREN varcte COMMA mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 247


state 208

    (54) countif -> COUNTIF OPAREN ID COMMA varcte . COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 248


state 209

    (94) expfunc -> varcte COMMA varcte . COMMA varcte

    COMMA           shift and go to state 249


state 210

    (85) metodos -> DBERN OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 85 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)


state 211

    (93) expfunc -> ID COMMA ID . COMMA ID

    COMMA           shift and go to state 250


state 212

    (42) escrt -> PRINT OPAREN expresion CPAREN SCOLON .

    ID              reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    IF              reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PRINT           reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PLOT            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNT           reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNTIF         reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEAN            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEDIAN          reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MODE            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    STDV            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    KMEANS          reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DERL            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DBERN           reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DPOI            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    INVERSE         reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    ROTATE          reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    REF             reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    RREF            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MONT            reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    CBRACKET        reduce using rule 42 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)


state 213

    (45) escrt -> PRINT OPAREN STRING CPAREN SCOLON .

    ID              reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    IF              reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PRINT           reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PLOT            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNT           reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNTIF         reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEAN            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEDIAN          reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MODE            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    STDV            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    KMEANS          reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DERL            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DBERN           reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DPOI            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    INVERSE         reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    ROTATE          reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    REF             reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    RREF            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MONT            reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    CBRACKET        reduce using rule 45 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)


state 214

    (44) escrt -> PRINT OPAREN ID escrt2 CPAREN . SCOLON

    SCOLON          shift and go to state 251


state 215

    (50) escrt3 -> STRING . escrt2 escrt2
    (46) escrt2 -> . COMMA escrt3
    (47) escrt2 -> . empty
    (104) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 172
    CPAREN          reduce using rule 104 (empty -> .)

  ! COMMA           [ reduce using rule 104 (empty -> .) ]

    empty                          shift and go to state 173
    escrt2                         shift and go to state 252

state 216

    (48) escrt3 -> ID . escrt2
    (49) escrt3 -> ID .
    (46) escrt2 -> . COMMA escrt3
    (47) escrt2 -> . empty
    (104) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CPAREN resolved using rule 49 (escrt3 -> ID .)
  ! shift/reduce conflict for COMMA resolved as shift
    CPAREN          reduce using rule 49 (escrt3 -> ID .)
    COMMA           shift and go to state 172

  ! COMMA           [ reduce using rule 49 (escrt3 -> ID .) ]
  ! CPAREN          [ reduce using rule 104 (empty -> .) ]
  ! COMMA           [ reduce using rule 104 (empty -> .) ]

    empty                          shift and go to state 173
    escrt2                         shift and go to state 253

state 217

    (46) escrt2 -> COMMA escrt3 .

    CPAREN          reduce using rule 46 (escrt2 -> COMMA escrt3 .)
    COMMA           reduce using rule 46 (escrt2 -> COMMA escrt3 .)


state 218

    (90) metodos -> REF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 90 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)


state 219

    (80) metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 80 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)


state 220

    (92) metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 92 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)


state 221

    (79) metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 79 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)


state 222

    (53) count -> COUNT OPAREN ID COMMA varcte . COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 254


state 223

    (88) metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 88 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)


state 224

    (82) metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 82 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)


state 225

    (96) expfunc2 -> varcte COMMA varcte .

    CPAREN          reduce using rule 96 (expfunc2 -> varcte COMMA varcte .)


state 226

    (86) metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .

    ID              reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    IF              reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PRINT           reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PLOT            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNT           reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEAN            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MODE            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    STDV            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    KMEANS          reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DERL            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DBERN           reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DPOI            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    INVERSE         reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    ROTATE          reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    REF             reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    RREF            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MONT            reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 86 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)


state 227

    (95) expfunc2 -> ID COMMA ID .

    CPAREN          reduce using rule 95 (expfunc2 -> ID COMMA ID .)


state 228

    (35) asign -> ID asign2 EQUALS expresion SCOLON .

    ID              reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    IF              reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PRINT           reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PLOT            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNT           reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEAN            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MODE            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    STDV            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DERL            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DBERN           reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DPOI            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    REF             reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    RREF            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MONT            reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 35 (asign -> ID asign2 EQUALS expresion SCOLON .)


state 229

    (36) asign -> ID asign2 EQUALS ID asign2 . SCOLON
    (76) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 255
    MULT            reduce using rule 76 (varcte -> ID asign2 .)
    DIV             reduce using rule 76 (varcte -> ID asign2 .)
    PLUS            reduce using rule 76 (varcte -> ID asign2 .)
    MINUS           reduce using rule 76 (varcte -> ID asign2 .)
    RELOP           reduce using rule 76 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 76 (varcte -> ID asign2 .) ]


state 230

    (34) asign -> ID asign2 EQUALS ID SCOLON .

    ID              reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    IF              reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    PRINT           reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    PLOT            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNT           reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEAN            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    MODE            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    STDV            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    KMEANS          reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    DERL            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    DBERN           reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    DPOI            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    INVERSE         reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    ROTATE          reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    REF             reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    RREF            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    MONT            reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 34 (asign -> ID asign2 EQUALS ID SCOLON .)


state 231

    (33) asign -> ID EQUALS ID asign2 SCOLON .

    ID              reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 33 (asign -> ID EQUALS ID asign2 SCOLON .)


state 232

    (51) cond -> IF OPAREN expresion CPAREN block . SCOLON
    (52) cond -> IF OPAREN expresion CPAREN block . ELSE block SCOLON

    SCOLON          shift and go to state 256
    ELSE            shift and go to state 257


state 233

    (60) xyfunc -> FX EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 258


state 234

    (61) xyfunc -> FY EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 259


state 235

    (57) plot2 -> LCOR varcte COMMA . varcte RCOR
    (58) plot2 -> LCOR varcte COMMA . varcte RCOR COMMA plot2
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 260

state 236

    (55) plot -> PLOT OPAREN xyfunc CPAREN SCOLON .

    ID              reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    IF              reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PRINT           reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PLOT            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNT           reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEAN            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MODE            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    STDV            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DERL            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DBERN           reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DPOI            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    REF             reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    RREF            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MONT            reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 55 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)


state 237

    (56) plot -> PLOT OPAREN plot2 CPAREN SCOLON .

    ID              reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    IF              reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PRINT           reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PLOT            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNT           reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEAN            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MODE            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    STDV            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    KMEANS          reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DERL            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DBERN           reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DPOI            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    INVERSE         reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    ROTATE          reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    REF             reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    RREF            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MONT            reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 56 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)


state 238

    (89) metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 89 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)


state 239

    (81) metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 81 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)


state 240

    (91) metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 91 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)


state 241

    (84) metodos -> DERL OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 84 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)


state 242

    (12) modules -> FUNC ID COLON tipo OPAREN modules2 CPAREN . modules2 block
    (13) modules2 -> . vars
    (14) modules2 -> . empty
    (7) vars -> . VAR vars1 COLON tipo SCOLON
    (104) empty -> .

    VAR             shift and go to state 8
    OBRACKET        reduce using rule 104 (empty -> .)

    vars                           shift and go to state 199
    modules2                       shift and go to state 261
    empty                          shift and go to state 200

state 243

    (39) asign3 -> LCOR expresion RCOR .

    COMMA           reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    COLON           reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    EQUALS          reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    RCOR            reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    MULT            reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    DIV             reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    PLUS            reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    MINUS           reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    RELOP           reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    CPAREN          reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    SCOLON          reduce using rule 39 (asign3 -> LCOR expresion RCOR .)
    CBRACKET        reduce using rule 39 (asign3 -> LCOR expresion RCOR .)


state 244

    (40) asign3 -> LCOR varcte RCOR .

    COMMA           reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    COLON           reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    EQUALS          reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    RCOR            reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    MULT            reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    DIV             reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    PLUS            reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    MINUS           reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    RELOP           reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    CPAREN          reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    SCOLON          reduce using rule 40 (asign3 -> LCOR varcte RCOR .)
    CBRACKET        reduce using rule 40 (asign3 -> LCOR varcte RCOR .)


state 245

    (102) mmmarray -> varcte COMMA mmmarray .

    CBRACKET        reduce using rule 102 (mmmarray -> varcte COMMA mmmarray .)


state 246

    (99) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA . mmmfunc
    (97) mmmfunc -> . ID
    (98) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (100) mmmfunc -> . empty
    (104) empty -> .

    ID              shift and go to state 113
    OBRACKET        shift and go to state 112
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 114
    mmmfunc                        shift and go to state 262

state 247

    (83) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 263


state 248

    (54) countif -> COUNTIF OPAREN ID COMMA varcte COMMA . varcte COMMA cond CPAREN SCOLON
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 264

state 249

    (94) expfunc -> varcte COMMA varcte COMMA . varcte
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 265

state 250

    (93) expfunc -> ID COMMA ID COMMA . ID

    ID              shift and go to state 266


state 251

    (44) escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .

    ID              reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    IF              reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PRINT           reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PLOT            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNT           reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEAN            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MODE            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    STDV            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    KMEANS          reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DERL            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DBERN           reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DPOI            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    INVERSE         reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    ROTATE          reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    REF             reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    RREF            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MONT            reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 44 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)


state 252

    (50) escrt3 -> STRING escrt2 . escrt2
    (46) escrt2 -> . COMMA escrt3
    (47) escrt2 -> . empty
    (104) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 172
    CPAREN          reduce using rule 104 (empty -> .)

  ! COMMA           [ reduce using rule 104 (empty -> .) ]

    empty                          shift and go to state 173
    escrt2                         shift and go to state 267

state 253

    (48) escrt3 -> ID escrt2 .

    CPAREN          reduce using rule 48 (escrt3 -> ID escrt2 .)
    COMMA           reduce using rule 48 (escrt3 -> ID escrt2 .)


state 254

    (53) count -> COUNT OPAREN ID COMMA varcte COMMA . varcte CPAREN SCOLON
    (75) varcte -> . ID
    (76) varcte -> . ID asign2
    (77) varcte -> . NUMBER
    (78) varcte -> . DOUBLE

    ID              shift and go to state 72
    NUMBER          shift and go to state 66
    DOUBLE          shift and go to state 65

    varcte                         shift and go to state 268

state 255

    (36) asign -> ID asign2 EQUALS ID asign2 SCOLON .

    ID              reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 36 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)


state 256

    (51) cond -> IF OPAREN expresion CPAREN block SCOLON .

    CPAREN          reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    ID              reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    IF              reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PRINT           reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PLOT            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNT           reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNTIF         reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEAN            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEDIAN          reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MODE            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    STDV            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    KMEANS          reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DERL            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DBERN           reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DPOI            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    TRANSPOSE       reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    INVERSE         reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    ROTATE          reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    REF             reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    RREF            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MONT            reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CBRACKET        reduce using rule 51 (cond -> IF OPAREN expresion CPAREN block SCOLON .)


state 257

    (52) cond -> IF OPAREN expresion CPAREN block ELSE . block SCOLON
    (15) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 15

    block                          shift and go to state 269

state 258

    (60) xyfunc -> FX EQUALS exp SCOLON . xyfunc
    (60) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (61) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (62) xyfunc -> . empty
    (104) empty -> .

    FX              shift and go to state 138
    FY              shift and go to state 139
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 271
    xyfunc                         shift and go to state 270

state 259

    (61) xyfunc -> FY EQUALS exp SCOLON . xyfunc
    (60) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (61) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (62) xyfunc -> . empty
    (104) empty -> .

    FX              shift and go to state 138
    FY              shift and go to state 139
    CPAREN          reduce using rule 104 (empty -> .)

    empty                          shift and go to state 271
    xyfunc                         shift and go to state 272

state 260

    (57) plot2 -> LCOR varcte COMMA varcte . RCOR
    (58) plot2 -> LCOR varcte COMMA varcte . RCOR COMMA plot2

    RCOR            shift and go to state 273


state 261

    (12) modules -> FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 . block
    (15) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 15

    block                          shift and go to state 274

state 262

    (99) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .

    CPAREN          reduce using rule 99 (mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .)


state 263

    (83) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .

    ID              reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 83 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)


state 264

    (54) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte . COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 275


state 265

    (94) expfunc -> varcte COMMA varcte COMMA varcte .

    CPAREN          reduce using rule 94 (expfunc -> varcte COMMA varcte COMMA varcte .)


state 266

    (93) expfunc -> ID COMMA ID COMMA ID .

    CPAREN          reduce using rule 93 (expfunc -> ID COMMA ID COMMA ID .)


state 267

    (50) escrt3 -> STRING escrt2 escrt2 .

    CPAREN          reduce using rule 50 (escrt3 -> STRING escrt2 escrt2 .)
    COMMA           reduce using rule 50 (escrt3 -> STRING escrt2 escrt2 .)


state 268

    (53) count -> COUNT OPAREN ID COMMA varcte COMMA varcte . CPAREN SCOLON

    CPAREN          shift and go to state 276


state 269

    (52) cond -> IF OPAREN expresion CPAREN block ELSE block . SCOLON

    SCOLON          shift and go to state 277


state 270

    (60) xyfunc -> FX EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 60 (xyfunc -> FX EQUALS exp SCOLON xyfunc .)


state 271

    (62) xyfunc -> empty .

    CPAREN          reduce using rule 62 (xyfunc -> empty .)


state 272

    (61) xyfunc -> FY EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 61 (xyfunc -> FY EQUALS exp SCOLON xyfunc .)


state 273

    (57) plot2 -> LCOR varcte COMMA varcte RCOR .
    (58) plot2 -> LCOR varcte COMMA varcte RCOR . COMMA plot2

    CPAREN          reduce using rule 57 (plot2 -> LCOR varcte COMMA varcte RCOR .)
    COMMA           shift and go to state 278


state 274

    (12) modules -> FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 block .

    FUNC            reduce using rule 12 (modules -> FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 block .)
    OBRACKET        reduce using rule 12 (modules -> FUNC ID COLON tipo OPAREN modules2 CPAREN modules2 block .)


state 275

    (54) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA . cond CPAREN SCOLON
    (51) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (52) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON

    IF              shift and go to state 43

    cond                           shift and go to state 279

state 276

    (53) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN . SCOLON

    SCOLON          shift and go to state 280


state 277

    (52) cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .

    CPAREN          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    ID              reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    IF              reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PRINT           reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PLOT            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNT           reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNTIF         reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEAN            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEDIAN          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MODE            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    STDV            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    KMEANS          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DERL            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DBERN           reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DPOI            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    TRANSPOSE       reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    INVERSE         reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    ROTATE          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    REF             reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    RREF            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MONT            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CBRACKET        reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)


state 278

    (58) plot2 -> LCOR varcte COMMA varcte RCOR COMMA . plot2
    (57) plot2 -> . LCOR varcte COMMA varcte RCOR
    (58) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (59) plot2 -> . empty
    (104) empty -> .

    LCOR            shift and go to state 140
    CPAREN          reduce using rule 104 (empty -> .)

    plot2                          shift and go to state 281
    empty                          shift and go to state 282

state 279

    (54) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond . CPAREN SCOLON

    CPAREN          shift and go to state 283


state 280

    (53) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .

    ID              reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    IF              reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PRINT           reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PLOT            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNT           reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNTIF         reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEAN            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEDIAN          reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MODE            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    STDV            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    KMEANS          reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DERL            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DBERN           reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DPOI            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    INVERSE         reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    ROTATE          reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    REF             reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    RREF            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MONT            reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    CBRACKET        reduce using rule 53 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)


state 281

    (58) plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .

    CPAREN          reduce using rule 58 (plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .)


state 282

    (59) plot2 -> empty .

    CPAREN          reduce using rule 59 (plot2 -> empty .)


state 283

    (54) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN . SCOLON

    SCOLON          shift and go to state 284


state 284

    (54) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .

    ID              reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    IF              reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PRINT           reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PLOT            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNT           reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNTIF         reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEAN            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEDIAN          reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MODE            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    STDV            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    KMEANS          reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DERL            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DBERN           reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DPOI            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    INVERSE         reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    ROTATE          reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    REF             reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    RREF            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MONT            reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    CBRACKET        reduce using rule 54 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOR in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 119 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 133 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 136 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 185 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 187 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 203 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 215 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 229 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 252 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (lugstat3 -> modules)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 32 resolved using rule (block2 -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 32
WARNING: reduce/reduce conflict in state 123 resolved using rule (varcte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 123
WARNING: reduce/reduce conflict in state 143 resolved using rule (plot2 -> empty)
WARNING: rejected rule (xyfunc -> empty) in state 143
WARNING: reduce/reduce conflict in state 216 resolved using rule (escrt3 -> ID)
WARNING: rejected rule (empty -> <empty>) in state 216
