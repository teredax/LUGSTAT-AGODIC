Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CHARACTER
    COMMENT
    CTED
    CTEI
    DIFF
    EQ
    GRE
    GREATEQ
    GREATERTHAN
    INTEGER
    LESSEQ
    LESSTHAN
    LOGICAL
    OR
    PER
    QUOTE
    TIPO

Grammar

Rule 0     S' -> lugstat
Rule 1     lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block
Rule 2     lugstat2 -> vars
Rule 3     lugstat2 -> empty
Rule 4     lugstat3 -> modules
Rule 5     lugstat3 -> modules lugstat3
Rule 6     lugstat3 -> empty
Rule 7     vars -> VAR vars1
Rule 8     vars1 -> ID COLON tipo SCOLON
Rule 9     vars1 -> ID COMMA vars1
Rule 10    vars1 -> ID asign2 COLON tipo SCOLON
Rule 11    vars1 -> ID asign2 COMMA vars1
Rule 12    modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
Rule 13    addfunction -> empty
Rule 14    modules2 -> vars
Rule 15    modules2 -> empty
Rule 16    block -> OBRACKET block2 CBRACKET
Rule 17    block2 -> estatuto
Rule 18    block2 -> estatuto block2
Rule 19    block2 -> empty
Rule 20    tipo -> INT
Rule 21    tipo -> BOOL
Rule 22    tipo -> DOUBLE
Rule 23    tipo -> STRING
Rule 24    tipo -> CHAR
Rule 25    estatuto -> asign
Rule 26    estatuto -> cond
Rule 27    estatuto -> escrt
Rule 28    estatuto -> plot
Rule 29    estatuto -> count
Rule 30    estatuto -> countif
Rule 31    estatuto -> metodos
Rule 32    asign -> ID EQUALS expresion SCOLON
Rule 33    asign -> ID EQUALS ID SCOLON
Rule 34    asign -> ID EQUALS ID asign2 SCOLON
Rule 35    asign -> ID asign2 EQUALS ID SCOLON
Rule 36    asign -> ID asign2 EQUALS expresion SCOLON
Rule 37    asign -> ID asign2 EQUALS ID asign2 SCOLON
Rule 38    asign2 -> LCOR expresion RCOR asign3
Rule 39    asign2 -> LCOR varcte RCOR asign3
Rule 40    asign3 -> LCOR expresion RCOR
Rule 41    asign3 -> LCOR varcte RCOR
Rule 42    asign3 -> empty
Rule 43    escrt -> PRINT OPAREN expresion CPAREN SCOLON
Rule 44    escrt -> PRINT OPAREN CPAREN SCOLON
Rule 45    escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON
Rule 46    escrt -> PRINT OPAREN STRING CPAREN SCOLON
Rule 47    escrt2 -> COMMA escrt3
Rule 48    escrt2 -> empty
Rule 49    escrt3 -> ID escrt2
Rule 50    escrt3 -> ID
Rule 51    escrt3 -> STRING escrt2 escrt2
Rule 52    cond -> IF OPAREN expresion CPAREN block SCOLON
Rule 53    cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON
Rule 54    count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
Rule 55    countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
Rule 56    plot -> PLOT OPAREN xyfunc CPAREN SCOLON
Rule 57    plot -> PLOT OPAREN plot2 CPAREN SCOLON
Rule 58    plot2 -> LCOR varcte COMMA varcte RCOR
Rule 59    plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2
Rule 60    plot2 -> empty
Rule 61    xyfunc -> FX EQUALS exp SCOLON xyfunc
Rule 62    xyfunc -> FY EQUALS exp SCOLON xyfunc
Rule 63    xyfunc -> empty
Rule 64    expresion -> exp
Rule 65    expresion -> expresion RELOP exp
Rule 66    exp -> termino
Rule 67    exp -> termino PLUS exp
Rule 68    exp -> termino MINUS exp
Rule 69    termino -> factor
Rule 70    termino -> factor MULT termino
Rule 71    termino -> factor DIV termino
Rule 72    factor -> OPAREN expresion CPAREN
Rule 73    factor -> PLUS varcte
Rule 74    factor -> MINUS varcte
Rule 75    factor -> varcte
Rule 76    varcte -> ID
Rule 77    varcte -> ID asign2
Rule 78    varcte -> NUMERIC
Rule 79    varcte -> NUMBER
Rule 80    metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON
Rule 81    metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON
Rule 82    metodos -> MODE OPAREN mmmfunc CPAREN SCOLON
Rule 83    metodos -> STDV OPAREN mmmfunc CPAREN SCOLON
Rule 84    metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
Rule 85    metodos -> DERL OPAREN expfunc CPAREN SCOLON
Rule 86    metodos -> DBERN OPAREN expfunc CPAREN SCOLON
Rule 87    metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON
Rule 88    metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
Rule 89    metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON
Rule 90    metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON
Rule 91    metodos -> REF OPAREN mmmfunc CPAREN SCOLON
Rule 92    metodos -> RREF OPAREN mmmfunc CPAREN SCOLON
Rule 93    metodos -> MONT OPAREN mmmfunc CPAREN SCOLON
Rule 94    expfunc -> ID COMMA ID COMMA ID
Rule 95    expfunc -> varcte COMMA varcte COMMA varcte
Rule 96    expfunc2 -> ID COMMA ID
Rule 97    expfunc2 -> varcte COMMA varcte
Rule 98    mmmfunc -> ID
Rule 99    mmmfunc -> OBRACKET mmmarray CBRACKET
Rule 100   mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc
Rule 101   mmmfunc -> empty
Rule 102   mmmarray -> varcte
Rule 103   mmmarray -> varcte COMMA mmmarray
Rule 104   mmmarray -> empty
Rule 105   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOL                 : 21
CBRACKET             : 16 99 100
CHAR                 : 24
CHARACTER            : 
COLON                : 8 10 12
COMMA                : 9 11 47 54 54 55 55 55 58 59 59 84 94 94 95 95 96 97 100 103
COMMENT              : 
COUNT                : 54
COUNTIF              : 55
CPAREN               : 12 43 44 45 46 52 53 54 55 56 57 72 80 81 82 83 84 85 86 87 88 89 90 91 92 93
CTED                 : 
CTEI                 : 
DBERN                : 86
DERL                 : 85
DIFF                 : 
DIV                  : 71
DOUBLE               : 22
DPOI                 : 87
ELSE                 : 53
EQ                   : 
EQUALS               : 32 33 34 35 36 37 61 62
FUNC                 : 12
FX                   : 61
FY                   : 62
GRE                  : 
GREATEQ              : 
GREATERTHAN          : 
ID                   : 1 8 9 10 11 12 32 33 33 34 34 35 35 36 37 37 45 49 50 54 55 76 77 94 94 94 96 96 98
IF                   : 52 53
INT                  : 20
INTEGER              : 
INVERSE              : 89
KMEANS               : 84
LCOR                 : 38 39 40 41 58 59
LESSEQ               : 
LESSTHAN             : 
LOGICAL              : 
LUGSTAT              : 1
MEAN                 : 80
MEDIAN               : 81
MINUS                : 68 74
MODE                 : 82
MONT                 : 93
MULT                 : 70
NUMBER               : 79
NUMERIC              : 78
OBRACKET             : 16 99 100
OPAREN               : 12 43 44 45 46 52 53 54 55 56 57 72 80 81 82 83 84 85 86 87 88 89 90 91 92 93
OR                   : 
PER                  : 
PLOT                 : 56 57
PLUS                 : 67 73
PRINT                : 43 44 45 46
QUOTE                : 
RCOR                 : 38 39 40 41 58 59
REF                  : 91
RELOP                : 65
ROTATE               : 90
RREF                 : 92
SCOLON               : 1 8 10 32 33 34 35 36 37 43 44 45 46 52 53 54 55 56 57 61 62 80 81 82 83 84 85 86 87 88 89 90 91 92 93
STDV                 : 83
STRING               : 23 46 51
TIPO                 : 
TRANSPOSE            : 88
VAR                  : 7
error                : 

Nonterminals, with rules where they appear

addfunction          : 12
asign                : 25
asign2               : 10 11 34 35 36 37 37 77
asign3               : 38 39
block                : 1 12 52 53 53
block2               : 16 18
cond                 : 26 55
count                : 29
countif              : 30
empty                : 3 6 13 15 19 42 48 60 63 101 104
escrt                : 27
escrt2               : 45 49 51 51
escrt3               : 47
estatuto             : 17 18
exp                  : 61 62 64 65 67 68
expfunc              : 85 86
expfunc2             : 87
expresion            : 32 36 38 40 43 52 53 65 72
factor               : 69 70 71
lugstat              : 0
lugstat2             : 1
lugstat3             : 1 5
metodos              : 31
mmmarray             : 99 100 103
mmmfunc              : 80 81 82 83 84 88 89 90 91 92 93 100
modules              : 4 5
modules2             : 12 12
plot                 : 28
plot2                : 57 59
termino              : 66 67 68 70 71
tipo                 : 8 10 12
varcte               : 39 41 54 54 55 55 58 58 59 59 73 74 75 84 95 95 95 97 97 102 103
vars                 : 2 14
vars1                : 7 9 11
xyfunc               : 56 61 62

Parsing method: LALR

state 0

    (0) S' -> . lugstat
    (1) lugstat -> . LUGSTAT ID SCOLON lugstat2 lugstat3 block

    LUGSTAT         shift and go to state 2

    lugstat                        shift and go to state 1

state 1

    (0) S' -> lugstat .



state 2

    (1) lugstat -> LUGSTAT . ID SCOLON lugstat2 lugstat3 block

    ID              shift and go to state 3


state 3

    (1) lugstat -> LUGSTAT ID . SCOLON lugstat2 lugstat3 block

    SCOLON          shift and go to state 4


state 4

    (1) lugstat -> LUGSTAT ID SCOLON . lugstat2 lugstat3 block
    (2) lugstat2 -> . vars
    (3) lugstat2 -> . empty
    (7) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 105 (empty -> .)
    OBRACKET        reduce using rule 105 (empty -> .)

    lugstat2                       shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 . lugstat3 block
    (4) lugstat3 -> . modules
    (5) lugstat3 -> . modules lugstat3
    (6) lugstat3 -> . empty
    (12) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (105) empty -> .

    FUNC            shift and go to state 12
    OBRACKET        reduce using rule 105 (empty -> .)

    lugstat3                       shift and go to state 9
    modules                        shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) lugstat2 -> vars .

    FUNC            reduce using rule 2 (lugstat2 -> vars .)
    OBRACKET        reduce using rule 2 (lugstat2 -> vars .)


state 7

    (3) lugstat2 -> empty .

    FUNC            reduce using rule 3 (lugstat2 -> empty .)
    OBRACKET        reduce using rule 3 (lugstat2 -> empty .)


state 8

    (7) vars -> VAR . vars1
    (8) vars1 -> . ID COLON tipo SCOLON
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID asign2 COLON tipo SCOLON
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 13

state 9

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 . block
    (16) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 15

state 10

    (4) lugstat3 -> modules .
    (5) lugstat3 -> modules . lugstat3
    (4) lugstat3 -> . modules
    (5) lugstat3 -> . modules lugstat3
    (6) lugstat3 -> . empty
    (12) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (105) empty -> .

  ! reduce/reduce conflict for OBRACKET resolved using rule 4 (lugstat3 -> modules .)
    OBRACKET        reduce using rule 4 (lugstat3 -> modules .)
    FUNC            shift and go to state 12

  ! OBRACKET        [ reduce using rule 105 (empty -> .) ]

    modules                        shift and go to state 10
    lugstat3                       shift and go to state 17
    empty                          shift and go to state 11

state 11

    (6) lugstat3 -> empty .

    OBRACKET        reduce using rule 6 (lugstat3 -> empty .)


state 12

    (12) modules -> FUNC . ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    ID              shift and go to state 18


state 13

    (7) vars -> VAR vars1 .

    FUNC            reduce using rule 7 (vars -> VAR vars1 .)
    OBRACKET        reduce using rule 7 (vars -> VAR vars1 .)
    CPAREN          reduce using rule 7 (vars -> VAR vars1 .)


state 14

    (8) vars1 -> ID . COLON tipo SCOLON
    (9) vars1 -> ID . COMMA vars1
    (10) vars1 -> ID . asign2 COLON tipo SCOLON
    (11) vars1 -> ID . asign2 COMMA vars1
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

    COLON           shift and go to state 19
    COMMA           shift and go to state 20
    LCOR            shift and go to state 22

    asign2                         shift and go to state 21

state 15

    (1) lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block .

    $end            reduce using rule 1 (lugstat -> LUGSTAT ID SCOLON lugstat2 lugstat3 block .)


state 16

    (16) block -> OBRACKET . block2 CBRACKET
    (17) block2 -> . estatuto
    (18) block2 -> . estatuto block2
    (19) block2 -> . empty
    (25) estatuto -> . asign
    (26) estatuto -> . cond
    (27) estatuto -> . escrt
    (28) estatuto -> . plot
    (29) estatuto -> . count
    (30) estatuto -> . countif
    (31) estatuto -> . metodos
    (105) empty -> .
    (32) asign -> . ID EQUALS expresion SCOLON
    (33) asign -> . ID EQUALS ID SCOLON
    (34) asign -> . ID EQUALS ID asign2 SCOLON
    (35) asign -> . ID asign2 EQUALS ID SCOLON
    (36) asign -> . ID asign2 EQUALS expresion SCOLON
    (37) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (52) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (53) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (43) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (44) escrt -> . PRINT OPAREN CPAREN SCOLON
    (45) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (46) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (56) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (57) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (54) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (55) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (80) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (81) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (84) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (85) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (86) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (87) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (88) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (89) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

    CBRACKET        reduce using rule 105 (empty -> .)
    ID              shift and go to state 33
    IF              shift and go to state 34
    PRINT           shift and go to state 35
    PLOT            shift and go to state 36
    COUNT           shift and go to state 37
    COUNTIF         shift and go to state 38
    MEAN            shift and go to state 39
    MEDIAN          shift and go to state 40
    MODE            shift and go to state 41
    STDV            shift and go to state 42
    KMEANS          shift and go to state 43
    DERL            shift and go to state 44
    DBERN           shift and go to state 45
    DPOI            shift and go to state 46
    TRANSPOSE       shift and go to state 47
    INVERSE         shift and go to state 48
    ROTATE          shift and go to state 49
    REF             shift and go to state 50
    RREF            shift and go to state 51
    MONT            shift and go to state 52

    block2                         shift and go to state 23
    estatuto                       shift and go to state 24
    empty                          shift and go to state 25
    asign                          shift and go to state 26
    cond                           shift and go to state 27
    escrt                          shift and go to state 28
    plot                           shift and go to state 29
    count                          shift and go to state 30
    countif                        shift and go to state 31
    metodos                        shift and go to state 32

state 17

    (5) lugstat3 -> modules lugstat3 .

    OBRACKET        reduce using rule 5 (lugstat3 -> modules lugstat3 .)


state 18

    (12) modules -> FUNC ID . COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    COLON           shift and go to state 53


state 19

    (8) vars1 -> ID COLON . tipo SCOLON
    (20) tipo -> . INT
    (21) tipo -> . BOOL
    (22) tipo -> . DOUBLE
    (23) tipo -> . STRING
    (24) tipo -> . CHAR

    INT             shift and go to state 55
    BOOL            shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59

    tipo                           shift and go to state 54

state 20

    (9) vars1 -> ID COMMA . vars1
    (8) vars1 -> . ID COLON tipo SCOLON
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID asign2 COLON tipo SCOLON
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 60

state 21

    (10) vars1 -> ID asign2 . COLON tipo SCOLON
    (11) vars1 -> ID asign2 . COMMA vars1

    COLON           shift and go to state 61
    COMMA           shift and go to state 62


state 22

    (38) asign2 -> LCOR . expresion RCOR asign3
    (39) asign2 -> LCOR . varcte RCOR asign3
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68
    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    expresion                      shift and go to state 63
    varcte                         shift and go to state 64
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72

state 23

    (16) block -> OBRACKET block2 . CBRACKET

    CBRACKET        shift and go to state 74


state 24

    (17) block2 -> estatuto .
    (18) block2 -> estatuto . block2
    (17) block2 -> . estatuto
    (18) block2 -> . estatuto block2
    (19) block2 -> . empty
    (25) estatuto -> . asign
    (26) estatuto -> . cond
    (27) estatuto -> . escrt
    (28) estatuto -> . plot
    (29) estatuto -> . count
    (30) estatuto -> . countif
    (31) estatuto -> . metodos
    (105) empty -> .
    (32) asign -> . ID EQUALS expresion SCOLON
    (33) asign -> . ID EQUALS ID SCOLON
    (34) asign -> . ID EQUALS ID asign2 SCOLON
    (35) asign -> . ID asign2 EQUALS ID SCOLON
    (36) asign -> . ID asign2 EQUALS expresion SCOLON
    (37) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (52) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (53) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON
    (43) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (44) escrt -> . PRINT OPAREN CPAREN SCOLON
    (45) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (46) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (56) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (57) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (54) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (55) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (80) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (81) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (82) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (83) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (84) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (85) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (86) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (87) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (88) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (89) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (90) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (91) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (92) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON

  ! reduce/reduce conflict for CBRACKET resolved using rule 17 (block2 -> estatuto .)
    CBRACKET        reduce using rule 17 (block2 -> estatuto .)
    ID              shift and go to state 33
    IF              shift and go to state 34
    PRINT           shift and go to state 35
    PLOT            shift and go to state 36
    COUNT           shift and go to state 37
    COUNTIF         shift and go to state 38
    MEAN            shift and go to state 39
    MEDIAN          shift and go to state 40
    MODE            shift and go to state 41
    STDV            shift and go to state 42
    KMEANS          shift and go to state 43
    DERL            shift and go to state 44
    DBERN           shift and go to state 45
    DPOI            shift and go to state 46
    TRANSPOSE       shift and go to state 47
    INVERSE         shift and go to state 48
    ROTATE          shift and go to state 49
    REF             shift and go to state 50
    RREF            shift and go to state 51
    MONT            shift and go to state 52

  ! CBRACKET        [ reduce using rule 105 (empty -> .) ]

    estatuto                       shift and go to state 24
    block2                         shift and go to state 75
    empty                          shift and go to state 25
    asign                          shift and go to state 26
    cond                           shift and go to state 27
    escrt                          shift and go to state 28
    plot                           shift and go to state 29
    count                          shift and go to state 30
    countif                        shift and go to state 31
    metodos                        shift and go to state 32

state 25

    (19) block2 -> empty .

    CBRACKET        reduce using rule 19 (block2 -> empty .)


state 26

    (25) estatuto -> asign .

    ID              reduce using rule 25 (estatuto -> asign .)
    IF              reduce using rule 25 (estatuto -> asign .)
    PRINT           reduce using rule 25 (estatuto -> asign .)
    PLOT            reduce using rule 25 (estatuto -> asign .)
    COUNT           reduce using rule 25 (estatuto -> asign .)
    COUNTIF         reduce using rule 25 (estatuto -> asign .)
    MEAN            reduce using rule 25 (estatuto -> asign .)
    MEDIAN          reduce using rule 25 (estatuto -> asign .)
    MODE            reduce using rule 25 (estatuto -> asign .)
    STDV            reduce using rule 25 (estatuto -> asign .)
    KMEANS          reduce using rule 25 (estatuto -> asign .)
    DERL            reduce using rule 25 (estatuto -> asign .)
    DBERN           reduce using rule 25 (estatuto -> asign .)
    DPOI            reduce using rule 25 (estatuto -> asign .)
    TRANSPOSE       reduce using rule 25 (estatuto -> asign .)
    INVERSE         reduce using rule 25 (estatuto -> asign .)
    ROTATE          reduce using rule 25 (estatuto -> asign .)
    REF             reduce using rule 25 (estatuto -> asign .)
    RREF            reduce using rule 25 (estatuto -> asign .)
    MONT            reduce using rule 25 (estatuto -> asign .)
    CBRACKET        reduce using rule 25 (estatuto -> asign .)


state 27

    (26) estatuto -> cond .

    ID              reduce using rule 26 (estatuto -> cond .)
    IF              reduce using rule 26 (estatuto -> cond .)
    PRINT           reduce using rule 26 (estatuto -> cond .)
    PLOT            reduce using rule 26 (estatuto -> cond .)
    COUNT           reduce using rule 26 (estatuto -> cond .)
    COUNTIF         reduce using rule 26 (estatuto -> cond .)
    MEAN            reduce using rule 26 (estatuto -> cond .)
    MEDIAN          reduce using rule 26 (estatuto -> cond .)
    MODE            reduce using rule 26 (estatuto -> cond .)
    STDV            reduce using rule 26 (estatuto -> cond .)
    KMEANS          reduce using rule 26 (estatuto -> cond .)
    DERL            reduce using rule 26 (estatuto -> cond .)
    DBERN           reduce using rule 26 (estatuto -> cond .)
    DPOI            reduce using rule 26 (estatuto -> cond .)
    TRANSPOSE       reduce using rule 26 (estatuto -> cond .)
    INVERSE         reduce using rule 26 (estatuto -> cond .)
    ROTATE          reduce using rule 26 (estatuto -> cond .)
    REF             reduce using rule 26 (estatuto -> cond .)
    RREF            reduce using rule 26 (estatuto -> cond .)
    MONT            reduce using rule 26 (estatuto -> cond .)
    CBRACKET        reduce using rule 26 (estatuto -> cond .)


state 28

    (27) estatuto -> escrt .

    ID              reduce using rule 27 (estatuto -> escrt .)
    IF              reduce using rule 27 (estatuto -> escrt .)
    PRINT           reduce using rule 27 (estatuto -> escrt .)
    PLOT            reduce using rule 27 (estatuto -> escrt .)
    COUNT           reduce using rule 27 (estatuto -> escrt .)
    COUNTIF         reduce using rule 27 (estatuto -> escrt .)
    MEAN            reduce using rule 27 (estatuto -> escrt .)
    MEDIAN          reduce using rule 27 (estatuto -> escrt .)
    MODE            reduce using rule 27 (estatuto -> escrt .)
    STDV            reduce using rule 27 (estatuto -> escrt .)
    KMEANS          reduce using rule 27 (estatuto -> escrt .)
    DERL            reduce using rule 27 (estatuto -> escrt .)
    DBERN           reduce using rule 27 (estatuto -> escrt .)
    DPOI            reduce using rule 27 (estatuto -> escrt .)
    TRANSPOSE       reduce using rule 27 (estatuto -> escrt .)
    INVERSE         reduce using rule 27 (estatuto -> escrt .)
    ROTATE          reduce using rule 27 (estatuto -> escrt .)
    REF             reduce using rule 27 (estatuto -> escrt .)
    RREF            reduce using rule 27 (estatuto -> escrt .)
    MONT            reduce using rule 27 (estatuto -> escrt .)
    CBRACKET        reduce using rule 27 (estatuto -> escrt .)


state 29

    (28) estatuto -> plot .

    ID              reduce using rule 28 (estatuto -> plot .)
    IF              reduce using rule 28 (estatuto -> plot .)
    PRINT           reduce using rule 28 (estatuto -> plot .)
    PLOT            reduce using rule 28 (estatuto -> plot .)
    COUNT           reduce using rule 28 (estatuto -> plot .)
    COUNTIF         reduce using rule 28 (estatuto -> plot .)
    MEAN            reduce using rule 28 (estatuto -> plot .)
    MEDIAN          reduce using rule 28 (estatuto -> plot .)
    MODE            reduce using rule 28 (estatuto -> plot .)
    STDV            reduce using rule 28 (estatuto -> plot .)
    KMEANS          reduce using rule 28 (estatuto -> plot .)
    DERL            reduce using rule 28 (estatuto -> plot .)
    DBERN           reduce using rule 28 (estatuto -> plot .)
    DPOI            reduce using rule 28 (estatuto -> plot .)
    TRANSPOSE       reduce using rule 28 (estatuto -> plot .)
    INVERSE         reduce using rule 28 (estatuto -> plot .)
    ROTATE          reduce using rule 28 (estatuto -> plot .)
    REF             reduce using rule 28 (estatuto -> plot .)
    RREF            reduce using rule 28 (estatuto -> plot .)
    MONT            reduce using rule 28 (estatuto -> plot .)
    CBRACKET        reduce using rule 28 (estatuto -> plot .)


state 30

    (29) estatuto -> count .

    ID              reduce using rule 29 (estatuto -> count .)
    IF              reduce using rule 29 (estatuto -> count .)
    PRINT           reduce using rule 29 (estatuto -> count .)
    PLOT            reduce using rule 29 (estatuto -> count .)
    COUNT           reduce using rule 29 (estatuto -> count .)
    COUNTIF         reduce using rule 29 (estatuto -> count .)
    MEAN            reduce using rule 29 (estatuto -> count .)
    MEDIAN          reduce using rule 29 (estatuto -> count .)
    MODE            reduce using rule 29 (estatuto -> count .)
    STDV            reduce using rule 29 (estatuto -> count .)
    KMEANS          reduce using rule 29 (estatuto -> count .)
    DERL            reduce using rule 29 (estatuto -> count .)
    DBERN           reduce using rule 29 (estatuto -> count .)
    DPOI            reduce using rule 29 (estatuto -> count .)
    TRANSPOSE       reduce using rule 29 (estatuto -> count .)
    INVERSE         reduce using rule 29 (estatuto -> count .)
    ROTATE          reduce using rule 29 (estatuto -> count .)
    REF             reduce using rule 29 (estatuto -> count .)
    RREF            reduce using rule 29 (estatuto -> count .)
    MONT            reduce using rule 29 (estatuto -> count .)
    CBRACKET        reduce using rule 29 (estatuto -> count .)


state 31

    (30) estatuto -> countif .

    ID              reduce using rule 30 (estatuto -> countif .)
    IF              reduce using rule 30 (estatuto -> countif .)
    PRINT           reduce using rule 30 (estatuto -> countif .)
    PLOT            reduce using rule 30 (estatuto -> countif .)
    COUNT           reduce using rule 30 (estatuto -> countif .)
    COUNTIF         reduce using rule 30 (estatuto -> countif .)
    MEAN            reduce using rule 30 (estatuto -> countif .)
    MEDIAN          reduce using rule 30 (estatuto -> countif .)
    MODE            reduce using rule 30 (estatuto -> countif .)
    STDV            reduce using rule 30 (estatuto -> countif .)
    KMEANS          reduce using rule 30 (estatuto -> countif .)
    DERL            reduce using rule 30 (estatuto -> countif .)
    DBERN           reduce using rule 30 (estatuto -> countif .)
    DPOI            reduce using rule 30 (estatuto -> countif .)
    TRANSPOSE       reduce using rule 30 (estatuto -> countif .)
    INVERSE         reduce using rule 30 (estatuto -> countif .)
    ROTATE          reduce using rule 30 (estatuto -> countif .)
    REF             reduce using rule 30 (estatuto -> countif .)
    RREF            reduce using rule 30 (estatuto -> countif .)
    MONT            reduce using rule 30 (estatuto -> countif .)
    CBRACKET        reduce using rule 30 (estatuto -> countif .)


state 32

    (31) estatuto -> metodos .

    ID              reduce using rule 31 (estatuto -> metodos .)
    IF              reduce using rule 31 (estatuto -> metodos .)
    PRINT           reduce using rule 31 (estatuto -> metodos .)
    PLOT            reduce using rule 31 (estatuto -> metodos .)
    COUNT           reduce using rule 31 (estatuto -> metodos .)
    COUNTIF         reduce using rule 31 (estatuto -> metodos .)
    MEAN            reduce using rule 31 (estatuto -> metodos .)
    MEDIAN          reduce using rule 31 (estatuto -> metodos .)
    MODE            reduce using rule 31 (estatuto -> metodos .)
    STDV            reduce using rule 31 (estatuto -> metodos .)
    KMEANS          reduce using rule 31 (estatuto -> metodos .)
    DERL            reduce using rule 31 (estatuto -> metodos .)
    DBERN           reduce using rule 31 (estatuto -> metodos .)
    DPOI            reduce using rule 31 (estatuto -> metodos .)
    TRANSPOSE       reduce using rule 31 (estatuto -> metodos .)
    INVERSE         reduce using rule 31 (estatuto -> metodos .)
    ROTATE          reduce using rule 31 (estatuto -> metodos .)
    REF             reduce using rule 31 (estatuto -> metodos .)
    RREF            reduce using rule 31 (estatuto -> metodos .)
    MONT            reduce using rule 31 (estatuto -> metodos .)
    CBRACKET        reduce using rule 31 (estatuto -> metodos .)


state 33

    (32) asign -> ID . EQUALS expresion SCOLON
    (33) asign -> ID . EQUALS ID SCOLON
    (34) asign -> ID . EQUALS ID asign2 SCOLON
    (35) asign -> ID . asign2 EQUALS ID SCOLON
    (36) asign -> ID . asign2 EQUALS expresion SCOLON
    (37) asign -> ID . asign2 EQUALS ID asign2 SCOLON
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

    EQUALS          shift and go to state 76
    LCOR            shift and go to state 22

    asign2                         shift and go to state 77

state 34

    (52) cond -> IF . OPAREN expresion CPAREN block SCOLON
    (53) cond -> IF . OPAREN expresion CPAREN block ELSE block SCOLON

    OPAREN          shift and go to state 78


state 35

    (43) escrt -> PRINT . OPAREN expresion CPAREN SCOLON
    (44) escrt -> PRINT . OPAREN CPAREN SCOLON
    (45) escrt -> PRINT . OPAREN ID escrt2 CPAREN SCOLON
    (46) escrt -> PRINT . OPAREN STRING CPAREN SCOLON

    OPAREN          shift and go to state 79


state 36

    (56) plot -> PLOT . OPAREN xyfunc CPAREN SCOLON
    (57) plot -> PLOT . OPAREN plot2 CPAREN SCOLON

    OPAREN          shift and go to state 80


state 37

    (54) count -> COUNT . OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON

    OPAREN          shift and go to state 81


state 38

    (55) countif -> COUNTIF . OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    OPAREN          shift and go to state 82


state 39

    (80) metodos -> MEAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 83


state 40

    (81) metodos -> MEDIAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 84


state 41

    (82) metodos -> MODE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 85


state 42

    (83) metodos -> STDV . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 86


state 43

    (84) metodos -> KMEANS . OPAREN varcte COMMA mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 87


state 44

    (85) metodos -> DERL . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 88


state 45

    (86) metodos -> DBERN . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 89


state 46

    (87) metodos -> DPOI . OPAREN expfunc2 CPAREN SCOLON

    OPAREN          shift and go to state 90


state 47

    (88) metodos -> TRANSPOSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 91


state 48

    (89) metodos -> INVERSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 92


state 49

    (90) metodos -> ROTATE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 93


state 50

    (91) metodos -> REF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 94


state 51

    (92) metodos -> RREF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 95


state 52

    (93) metodos -> MONT . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 96


state 53

    (12) modules -> FUNC ID COLON . tipo addfunction OPAREN modules2 CPAREN modules2 block
    (20) tipo -> . INT
    (21) tipo -> . BOOL
    (22) tipo -> . DOUBLE
    (23) tipo -> . STRING
    (24) tipo -> . CHAR

    INT             shift and go to state 55
    BOOL            shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59

    tipo                           shift and go to state 97

state 54

    (8) vars1 -> ID COLON tipo . SCOLON

    SCOLON          shift and go to state 98


state 55

    (20) tipo -> INT .

    SCOLON          reduce using rule 20 (tipo -> INT .)
    OPAREN          reduce using rule 20 (tipo -> INT .)


state 56

    (21) tipo -> BOOL .

    SCOLON          reduce using rule 21 (tipo -> BOOL .)
    OPAREN          reduce using rule 21 (tipo -> BOOL .)


state 57

    (22) tipo -> DOUBLE .

    SCOLON          reduce using rule 22 (tipo -> DOUBLE .)
    OPAREN          reduce using rule 22 (tipo -> DOUBLE .)


state 58

    (23) tipo -> STRING .

    SCOLON          reduce using rule 23 (tipo -> STRING .)
    OPAREN          reduce using rule 23 (tipo -> STRING .)


state 59

    (24) tipo -> CHAR .

    SCOLON          reduce using rule 24 (tipo -> CHAR .)
    OPAREN          reduce using rule 24 (tipo -> CHAR .)


state 60

    (9) vars1 -> ID COMMA vars1 .

    FUNC            reduce using rule 9 (vars1 -> ID COMMA vars1 .)
    OBRACKET        reduce using rule 9 (vars1 -> ID COMMA vars1 .)
    CPAREN          reduce using rule 9 (vars1 -> ID COMMA vars1 .)


state 61

    (10) vars1 -> ID asign2 COLON . tipo SCOLON
    (20) tipo -> . INT
    (21) tipo -> . BOOL
    (22) tipo -> . DOUBLE
    (23) tipo -> . STRING
    (24) tipo -> . CHAR

    INT             shift and go to state 55
    BOOL            shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59

    tipo                           shift and go to state 99

state 62

    (11) vars1 -> ID asign2 COMMA . vars1
    (8) vars1 -> . ID COLON tipo SCOLON
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID asign2 COLON tipo SCOLON
    (11) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 14

    vars1                          shift and go to state 100

state 63

    (38) asign2 -> LCOR expresion . RCOR asign3
    (65) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 101
    RELOP           shift and go to state 102


state 64

    (39) asign2 -> LCOR varcte . RCOR asign3
    (75) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 103
    MULT            reduce using rule 75 (factor -> varcte .)
    DIV             reduce using rule 75 (factor -> varcte .)
    PLUS            reduce using rule 75 (factor -> varcte .)
    MINUS           reduce using rule 75 (factor -> varcte .)
    RELOP           reduce using rule 75 (factor -> varcte .)

  ! RCOR            [ reduce using rule 75 (factor -> varcte .) ]


state 65

    (64) expresion -> exp .

    RCOR            reduce using rule 64 (expresion -> exp .)
    RELOP           reduce using rule 64 (expresion -> exp .)
    CPAREN          reduce using rule 64 (expresion -> exp .)
    SCOLON          reduce using rule 64 (expresion -> exp .)


state 66

    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

    RCOR            reduce using rule 76 (varcte -> ID .)
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    CPAREN          reduce using rule 76 (varcte -> ID .)
    SCOLON          reduce using rule 76 (varcte -> ID .)
    COMMA           reduce using rule 76 (varcte -> ID .)
    CBRACKET        reduce using rule 76 (varcte -> ID .)
    LCOR            shift and go to state 22

    asign2                         shift and go to state 104

state 67

    (78) varcte -> NUMERIC .

    RCOR            reduce using rule 78 (varcte -> NUMERIC .)
    MULT            reduce using rule 78 (varcte -> NUMERIC .)
    DIV             reduce using rule 78 (varcte -> NUMERIC .)
    PLUS            reduce using rule 78 (varcte -> NUMERIC .)
    MINUS           reduce using rule 78 (varcte -> NUMERIC .)
    RELOP           reduce using rule 78 (varcte -> NUMERIC .)
    CPAREN          reduce using rule 78 (varcte -> NUMERIC .)
    SCOLON          reduce using rule 78 (varcte -> NUMERIC .)
    COMMA           reduce using rule 78 (varcte -> NUMERIC .)
    CBRACKET        reduce using rule 78 (varcte -> NUMERIC .)


state 68

    (79) varcte -> NUMBER .

    RCOR            reduce using rule 79 (varcte -> NUMBER .)
    MULT            reduce using rule 79 (varcte -> NUMBER .)
    DIV             reduce using rule 79 (varcte -> NUMBER .)
    PLUS            reduce using rule 79 (varcte -> NUMBER .)
    MINUS           reduce using rule 79 (varcte -> NUMBER .)
    RELOP           reduce using rule 79 (varcte -> NUMBER .)
    CPAREN          reduce using rule 79 (varcte -> NUMBER .)
    SCOLON          reduce using rule 79 (varcte -> NUMBER .)
    COMMA           reduce using rule 79 (varcte -> NUMBER .)
    CBRACKET        reduce using rule 79 (varcte -> NUMBER .)


state 69

    (66) exp -> termino .
    (67) exp -> termino . PLUS exp
    (68) exp -> termino . MINUS exp

    RCOR            reduce using rule 66 (exp -> termino .)
    RELOP           reduce using rule 66 (exp -> termino .)
    CPAREN          reduce using rule 66 (exp -> termino .)
    SCOLON          reduce using rule 66 (exp -> termino .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106


state 70

    (73) factor -> PLUS . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 107

state 71

    (74) factor -> MINUS . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 108

state 72

    (69) termino -> factor .
    (70) termino -> factor . MULT termino
    (71) termino -> factor . DIV termino

    PLUS            reduce using rule 69 (termino -> factor .)
    MINUS           reduce using rule 69 (termino -> factor .)
    RCOR            reduce using rule 69 (termino -> factor .)
    RELOP           reduce using rule 69 (termino -> factor .)
    CPAREN          reduce using rule 69 (termino -> factor .)
    SCOLON          reduce using rule 69 (termino -> factor .)
    MULT            shift and go to state 109
    DIV             shift and go to state 110


state 73

    (72) factor -> OPAREN . expresion CPAREN
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expresion                      shift and go to state 111
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 74

    (16) block -> OBRACKET block2 CBRACKET .

    $end            reduce using rule 16 (block -> OBRACKET block2 CBRACKET .)
    SCOLON          reduce using rule 16 (block -> OBRACKET block2 CBRACKET .)
    ELSE            reduce using rule 16 (block -> OBRACKET block2 CBRACKET .)
    FUNC            reduce using rule 16 (block -> OBRACKET block2 CBRACKET .)
    OBRACKET        reduce using rule 16 (block -> OBRACKET block2 CBRACKET .)


state 75

    (18) block2 -> estatuto block2 .

    CBRACKET        reduce using rule 18 (block2 -> estatuto block2 .)


state 76

    (32) asign -> ID EQUALS . expresion SCOLON
    (33) asign -> ID EQUALS . ID SCOLON
    (34) asign -> ID EQUALS . ID asign2 SCOLON
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 113
    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expresion                      shift and go to state 114
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 77

    (35) asign -> ID asign2 . EQUALS ID SCOLON
    (36) asign -> ID asign2 . EQUALS expresion SCOLON
    (37) asign -> ID asign2 . EQUALS ID asign2 SCOLON

    EQUALS          shift and go to state 115


state 78

    (52) cond -> IF OPAREN . expresion CPAREN block SCOLON
    (53) cond -> IF OPAREN . expresion CPAREN block ELSE block SCOLON
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expresion                      shift and go to state 116
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 79

    (43) escrt -> PRINT OPAREN . expresion CPAREN SCOLON
    (44) escrt -> PRINT OPAREN . CPAREN SCOLON
    (45) escrt -> PRINT OPAREN . ID escrt2 CPAREN SCOLON
    (46) escrt -> PRINT OPAREN . STRING CPAREN SCOLON
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    CPAREN          shift and go to state 118
    ID              shift and go to state 119
    STRING          shift and go to state 120
    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expresion                      shift and go to state 117
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 80

    (56) plot -> PLOT OPAREN . xyfunc CPAREN SCOLON
    (57) plot -> PLOT OPAREN . plot2 CPAREN SCOLON
    (61) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (62) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (63) xyfunc -> . empty
    (58) plot2 -> . LCOR varcte COMMA varcte RCOR
    (59) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (60) plot2 -> . empty
    (105) empty -> .

    FX              shift and go to state 123
    FY              shift and go to state 124
    LCOR            shift and go to state 126
    CPAREN          reduce using rule 105 (empty -> .)

    xyfunc                         shift and go to state 121
    plot2                          shift and go to state 122
    empty                          shift and go to state 125

state 81

    (54) count -> COUNT OPAREN . ID COMMA varcte COMMA varcte CPAREN SCOLON

    ID              shift and go to state 127


state 82

    (55) countif -> COUNTIF OPAREN . ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    ID              shift and go to state 128


state 83

    (80) metodos -> MEAN OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 129
    empty                          shift and go to state 132

state 84

    (81) metodos -> MEDIAN OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 133
    empty                          shift and go to state 132

state 85

    (82) metodos -> MODE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 134
    empty                          shift and go to state 132

state 86

    (83) metodos -> STDV OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 135
    empty                          shift and go to state 132

state 87

    (84) metodos -> KMEANS OPAREN . varcte COMMA mmmfunc CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 136

state 88

    (85) metodos -> DERL OPAREN . expfunc CPAREN SCOLON
    (94) expfunc -> . ID COMMA ID COMMA ID
    (95) expfunc -> . varcte COMMA varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 138
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expfunc                        shift and go to state 137
    varcte                         shift and go to state 139

state 89

    (86) metodos -> DBERN OPAREN . expfunc CPAREN SCOLON
    (94) expfunc -> . ID COMMA ID COMMA ID
    (95) expfunc -> . varcte COMMA varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 138
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expfunc                        shift and go to state 140
    varcte                         shift and go to state 139

state 90

    (87) metodos -> DPOI OPAREN . expfunc2 CPAREN SCOLON
    (96) expfunc2 -> . ID COMMA ID
    (97) expfunc2 -> . varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 142
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expfunc2                       shift and go to state 141
    varcte                         shift and go to state 143

state 91

    (88) metodos -> TRANSPOSE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 144
    empty                          shift and go to state 132

state 92

    (89) metodos -> INVERSE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 145
    empty                          shift and go to state 132

state 93

    (90) metodos -> ROTATE OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 146
    empty                          shift and go to state 132

state 94

    (91) metodos -> REF OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 147
    empty                          shift and go to state 132

state 95

    (92) metodos -> RREF OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 148
    empty                          shift and go to state 132

state 96

    (93) metodos -> MONT OPAREN . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 149
    empty                          shift and go to state 132

state 97

    (12) modules -> FUNC ID COLON tipo . addfunction OPAREN modules2 CPAREN modules2 block
    (13) addfunction -> . empty
    (105) empty -> .

    OPAREN          reduce using rule 105 (empty -> .)

    addfunction                    shift and go to state 150
    empty                          shift and go to state 151

state 98

    (8) vars1 -> ID COLON tipo SCOLON .

    FUNC            reduce using rule 8 (vars1 -> ID COLON tipo SCOLON .)
    OBRACKET        reduce using rule 8 (vars1 -> ID COLON tipo SCOLON .)
    CPAREN          reduce using rule 8 (vars1 -> ID COLON tipo SCOLON .)


state 99

    (10) vars1 -> ID asign2 COLON tipo . SCOLON

    SCOLON          shift and go to state 152


state 100

    (11) vars1 -> ID asign2 COMMA vars1 .

    FUNC            reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)
    OBRACKET        reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)
    CPAREN          reduce using rule 11 (vars1 -> ID asign2 COMMA vars1 .)


state 101

    (38) asign2 -> LCOR expresion RCOR . asign3
    (40) asign3 -> . LCOR expresion RCOR
    (41) asign3 -> . LCOR varcte RCOR
    (42) asign3 -> . empty
    (105) empty -> .

    LCOR            shift and go to state 153
    COLON           reduce using rule 105 (empty -> .)
    COMMA           reduce using rule 105 (empty -> .)
    EQUALS          reduce using rule 105 (empty -> .)
    RCOR            reduce using rule 105 (empty -> .)
    MULT            reduce using rule 105 (empty -> .)
    DIV             reduce using rule 105 (empty -> .)
    PLUS            reduce using rule 105 (empty -> .)
    MINUS           reduce using rule 105 (empty -> .)
    RELOP           reduce using rule 105 (empty -> .)
    CPAREN          reduce using rule 105 (empty -> .)
    SCOLON          reduce using rule 105 (empty -> .)
    CBRACKET        reduce using rule 105 (empty -> .)

    asign3                         shift and go to state 154
    empty                          shift and go to state 155

state 102

    (65) expresion -> expresion RELOP . exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    exp                            shift and go to state 156
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 103

    (39) asign2 -> LCOR varcte RCOR . asign3
    (40) asign3 -> . LCOR expresion RCOR
    (41) asign3 -> . LCOR varcte RCOR
    (42) asign3 -> . empty
    (105) empty -> .

    LCOR            shift and go to state 153
    COLON           reduce using rule 105 (empty -> .)
    COMMA           reduce using rule 105 (empty -> .)
    EQUALS          reduce using rule 105 (empty -> .)
    RCOR            reduce using rule 105 (empty -> .)
    MULT            reduce using rule 105 (empty -> .)
    DIV             reduce using rule 105 (empty -> .)
    PLUS            reduce using rule 105 (empty -> .)
    MINUS           reduce using rule 105 (empty -> .)
    RELOP           reduce using rule 105 (empty -> .)
    CPAREN          reduce using rule 105 (empty -> .)
    SCOLON          reduce using rule 105 (empty -> .)
    CBRACKET        reduce using rule 105 (empty -> .)

    asign3                         shift and go to state 157
    empty                          shift and go to state 155

state 104

    (77) varcte -> ID asign2 .

    RCOR            reduce using rule 77 (varcte -> ID asign2 .)
    MULT            reduce using rule 77 (varcte -> ID asign2 .)
    DIV             reduce using rule 77 (varcte -> ID asign2 .)
    PLUS            reduce using rule 77 (varcte -> ID asign2 .)
    MINUS           reduce using rule 77 (varcte -> ID asign2 .)
    RELOP           reduce using rule 77 (varcte -> ID asign2 .)
    CPAREN          reduce using rule 77 (varcte -> ID asign2 .)
    SCOLON          reduce using rule 77 (varcte -> ID asign2 .)
    COMMA           reduce using rule 77 (varcte -> ID asign2 .)
    CBRACKET        reduce using rule 77 (varcte -> ID asign2 .)


state 105

    (67) exp -> termino PLUS . exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    termino                        shift and go to state 69
    exp                            shift and go to state 158
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 106

    (68) exp -> termino MINUS . exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    termino                        shift and go to state 69
    exp                            shift and go to state 159
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 107

    (73) factor -> PLUS varcte .

    MULT            reduce using rule 73 (factor -> PLUS varcte .)
    DIV             reduce using rule 73 (factor -> PLUS varcte .)
    PLUS            reduce using rule 73 (factor -> PLUS varcte .)
    MINUS           reduce using rule 73 (factor -> PLUS varcte .)
    RCOR            reduce using rule 73 (factor -> PLUS varcte .)
    RELOP           reduce using rule 73 (factor -> PLUS varcte .)
    CPAREN          reduce using rule 73 (factor -> PLUS varcte .)
    SCOLON          reduce using rule 73 (factor -> PLUS varcte .)


state 108

    (74) factor -> MINUS varcte .

    MULT            reduce using rule 74 (factor -> MINUS varcte .)
    DIV             reduce using rule 74 (factor -> MINUS varcte .)
    PLUS            reduce using rule 74 (factor -> MINUS varcte .)
    MINUS           reduce using rule 74 (factor -> MINUS varcte .)
    RCOR            reduce using rule 74 (factor -> MINUS varcte .)
    RELOP           reduce using rule 74 (factor -> MINUS varcte .)
    CPAREN          reduce using rule 74 (factor -> MINUS varcte .)
    SCOLON          reduce using rule 74 (factor -> MINUS varcte .)


state 109

    (70) termino -> factor MULT . termino
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    factor                         shift and go to state 72
    termino                        shift and go to state 160
    varcte                         shift and go to state 112

state 110

    (71) termino -> factor DIV . termino
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    factor                         shift and go to state 72
    termino                        shift and go to state 161
    varcte                         shift and go to state 112

state 111

    (72) factor -> OPAREN expresion . CPAREN
    (65) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 162
    RELOP           shift and go to state 102


state 112

    (75) factor -> varcte .

    MULT            reduce using rule 75 (factor -> varcte .)
    DIV             reduce using rule 75 (factor -> varcte .)
    PLUS            reduce using rule 75 (factor -> varcte .)
    MINUS           reduce using rule 75 (factor -> varcte .)
    CPAREN          reduce using rule 75 (factor -> varcte .)
    RELOP           reduce using rule 75 (factor -> varcte .)
    SCOLON          reduce using rule 75 (factor -> varcte .)
    RCOR            reduce using rule 75 (factor -> varcte .)


state 113

    (33) asign -> ID EQUALS ID . SCOLON
    (34) asign -> ID EQUALS ID . asign2 SCOLON
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 163
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    LCOR            shift and go to state 22

  ! SCOLON          [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 164

state 114

    (32) asign -> ID EQUALS expresion . SCOLON
    (65) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 165
    RELOP           shift and go to state 102


state 115

    (35) asign -> ID asign2 EQUALS . ID SCOLON
    (36) asign -> ID asign2 EQUALS . expresion SCOLON
    (37) asign -> ID asign2 EQUALS . ID asign2 SCOLON
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 166
    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    expresion                      shift and go to state 167
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 116

    (52) cond -> IF OPAREN expresion . CPAREN block SCOLON
    (53) cond -> IF OPAREN expresion . CPAREN block ELSE block SCOLON
    (65) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 168
    RELOP           shift and go to state 102


state 117

    (43) escrt -> PRINT OPAREN expresion . CPAREN SCOLON
    (65) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 169
    RELOP           shift and go to state 102


state 118

    (44) escrt -> PRINT OPAREN CPAREN . SCOLON

    SCOLON          shift and go to state 170


state 119

    (45) escrt -> PRINT OPAREN ID . escrt2 CPAREN SCOLON
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (47) escrt2 -> . COMMA escrt3
    (48) escrt2 -> . empty
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3
    (105) empty -> .

  ! reduce/reduce conflict for CPAREN resolved using rule 76 (varcte -> ID .)
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    CPAREN          reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    COMMA           shift and go to state 172
    LCOR            shift and go to state 22

  ! CPAREN          [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 171
    asign2                         shift and go to state 104
    empty                          shift and go to state 173

state 120

    (46) escrt -> PRINT OPAREN STRING . CPAREN SCOLON

    CPAREN          shift and go to state 174


state 121

    (56) plot -> PLOT OPAREN xyfunc . CPAREN SCOLON

    CPAREN          shift and go to state 175


state 122

    (57) plot -> PLOT OPAREN plot2 . CPAREN SCOLON

    CPAREN          shift and go to state 176


state 123

    (61) xyfunc -> FX . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 177


state 124

    (62) xyfunc -> FY . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 178


state 125

    (63) xyfunc -> empty .
    (60) plot2 -> empty .

  ! reduce/reduce conflict for CPAREN resolved using rule 60 (plot2 -> empty .)
    CPAREN          reduce using rule 60 (plot2 -> empty .)

  ! CPAREN          [ reduce using rule 63 (xyfunc -> empty .) ]


state 126

    (58) plot2 -> LCOR . varcte COMMA varcte RCOR
    (59) plot2 -> LCOR . varcte COMMA varcte RCOR COMMA plot2
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 179

state 127

    (54) count -> COUNT OPAREN ID . COMMA varcte COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 180


state 128

    (55) countif -> COUNTIF OPAREN ID . COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 181


state 129

    (80) metodos -> MEAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 182


state 130

    (98) mmmfunc -> ID .

    CPAREN          reduce using rule 98 (mmmfunc -> ID .)


state 131

    (99) mmmfunc -> OBRACKET . mmmarray CBRACKET
    (100) mmmfunc -> OBRACKET . mmmarray CBRACKET COMMA mmmfunc
    (102) mmmarray -> . varcte
    (103) mmmarray -> . varcte COMMA mmmarray
    (104) mmmarray -> . empty
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (105) empty -> .

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68
    CBRACKET        reduce using rule 105 (empty -> .)

    mmmarray                       shift and go to state 183
    varcte                         shift and go to state 184
    empty                          shift and go to state 185

state 132

    (101) mmmfunc -> empty .

    CPAREN          reduce using rule 101 (mmmfunc -> empty .)


state 133

    (81) metodos -> MEDIAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 186


state 134

    (82) metodos -> MODE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 187


state 135

    (83) metodos -> STDV OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 188


state 136

    (84) metodos -> KMEANS OPAREN varcte . COMMA mmmfunc CPAREN SCOLON

    COMMA           shift and go to state 189


state 137

    (85) metodos -> DERL OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 190


state 138

    (94) expfunc -> ID . COMMA ID COMMA ID
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 191
    LCOR            shift and go to state 22

  ! COMMA           [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 104

state 139

    (95) expfunc -> varcte . COMMA varcte COMMA varcte

    COMMA           shift and go to state 192


state 140

    (86) metodos -> DBERN OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 193


state 141

    (87) metodos -> DPOI OPAREN expfunc2 . CPAREN SCOLON

    CPAREN          shift and go to state 194


state 142

    (96) expfunc2 -> ID . COMMA ID
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 195
    LCOR            shift and go to state 22

  ! COMMA           [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 104

state 143

    (97) expfunc2 -> varcte . COMMA varcte

    COMMA           shift and go to state 196


state 144

    (88) metodos -> TRANSPOSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 197


state 145

    (89) metodos -> INVERSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 198


state 146

    (90) metodos -> ROTATE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 199


state 147

    (91) metodos -> REF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 200


state 148

    (92) metodos -> RREF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 201


state 149

    (93) metodos -> MONT OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 202


state 150

    (12) modules -> FUNC ID COLON tipo addfunction . OPAREN modules2 CPAREN modules2 block

    OPAREN          shift and go to state 203


state 151

    (13) addfunction -> empty .

    OPAREN          reduce using rule 13 (addfunction -> empty .)


state 152

    (10) vars1 -> ID asign2 COLON tipo SCOLON .

    FUNC            reduce using rule 10 (vars1 -> ID asign2 COLON tipo SCOLON .)
    OBRACKET        reduce using rule 10 (vars1 -> ID asign2 COLON tipo SCOLON .)
    CPAREN          reduce using rule 10 (vars1 -> ID asign2 COLON tipo SCOLON .)


state 153

    (40) asign3 -> LCOR . expresion RCOR
    (41) asign3 -> LCOR . varcte RCOR
    (64) expresion -> . exp
    (65) expresion -> . expresion RELOP exp
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68
    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    expresion                      shift and go to state 204
    varcte                         shift and go to state 205
    exp                            shift and go to state 65
    termino                        shift and go to state 69
    factor                         shift and go to state 72

state 154

    (38) asign2 -> LCOR expresion RCOR asign3 .

    COLON           reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    COMMA           reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    EQUALS          reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    RCOR            reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    MULT            reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    DIV             reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    PLUS            reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    MINUS           reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    RELOP           reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    CPAREN          reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    SCOLON          reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)
    CBRACKET        reduce using rule 38 (asign2 -> LCOR expresion RCOR asign3 .)


state 155

    (42) asign3 -> empty .

    COLON           reduce using rule 42 (asign3 -> empty .)
    COMMA           reduce using rule 42 (asign3 -> empty .)
    EQUALS          reduce using rule 42 (asign3 -> empty .)
    RCOR            reduce using rule 42 (asign3 -> empty .)
    MULT            reduce using rule 42 (asign3 -> empty .)
    DIV             reduce using rule 42 (asign3 -> empty .)
    PLUS            reduce using rule 42 (asign3 -> empty .)
    MINUS           reduce using rule 42 (asign3 -> empty .)
    RELOP           reduce using rule 42 (asign3 -> empty .)
    CPAREN          reduce using rule 42 (asign3 -> empty .)
    SCOLON          reduce using rule 42 (asign3 -> empty .)
    CBRACKET        reduce using rule 42 (asign3 -> empty .)


state 156

    (65) expresion -> expresion RELOP exp .

    RCOR            reduce using rule 65 (expresion -> expresion RELOP exp .)
    RELOP           reduce using rule 65 (expresion -> expresion RELOP exp .)
    CPAREN          reduce using rule 65 (expresion -> expresion RELOP exp .)
    SCOLON          reduce using rule 65 (expresion -> expresion RELOP exp .)


state 157

    (39) asign2 -> LCOR varcte RCOR asign3 .

    COLON           reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    COMMA           reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    EQUALS          reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    RCOR            reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    MULT            reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    DIV             reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    PLUS            reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    MINUS           reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    RELOP           reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    CPAREN          reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    SCOLON          reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)
    CBRACKET        reduce using rule 39 (asign2 -> LCOR varcte RCOR asign3 .)


state 158

    (67) exp -> termino PLUS exp .

    RCOR            reduce using rule 67 (exp -> termino PLUS exp .)
    RELOP           reduce using rule 67 (exp -> termino PLUS exp .)
    CPAREN          reduce using rule 67 (exp -> termino PLUS exp .)
    SCOLON          reduce using rule 67 (exp -> termino PLUS exp .)


state 159

    (68) exp -> termino MINUS exp .

    RCOR            reduce using rule 68 (exp -> termino MINUS exp .)
    RELOP           reduce using rule 68 (exp -> termino MINUS exp .)
    CPAREN          reduce using rule 68 (exp -> termino MINUS exp .)
    SCOLON          reduce using rule 68 (exp -> termino MINUS exp .)


state 160

    (70) termino -> factor MULT termino .

    PLUS            reduce using rule 70 (termino -> factor MULT termino .)
    MINUS           reduce using rule 70 (termino -> factor MULT termino .)
    RCOR            reduce using rule 70 (termino -> factor MULT termino .)
    RELOP           reduce using rule 70 (termino -> factor MULT termino .)
    CPAREN          reduce using rule 70 (termino -> factor MULT termino .)
    SCOLON          reduce using rule 70 (termino -> factor MULT termino .)


state 161

    (71) termino -> factor DIV termino .

    PLUS            reduce using rule 71 (termino -> factor DIV termino .)
    MINUS           reduce using rule 71 (termino -> factor DIV termino .)
    RCOR            reduce using rule 71 (termino -> factor DIV termino .)
    RELOP           reduce using rule 71 (termino -> factor DIV termino .)
    CPAREN          reduce using rule 71 (termino -> factor DIV termino .)
    SCOLON          reduce using rule 71 (termino -> factor DIV termino .)


state 162

    (72) factor -> OPAREN expresion CPAREN .

    MULT            reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    DIV             reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    RCOR            reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    RELOP           reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 72 (factor -> OPAREN expresion CPAREN .)
    SCOLON          reduce using rule 72 (factor -> OPAREN expresion CPAREN .)


state 163

    (33) asign -> ID EQUALS ID SCOLON .

    ID              reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    IF              reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    PRINT           reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    PLOT            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    COUNT           reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    MEAN            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    MODE            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    STDV            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    KMEANS          reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    DERL            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    DBERN           reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    DPOI            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    INVERSE         reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    ROTATE          reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    REF             reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    RREF            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    MONT            reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 33 (asign -> ID EQUALS ID SCOLON .)


state 164

    (34) asign -> ID EQUALS ID asign2 . SCOLON
    (77) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 206
    MULT            reduce using rule 77 (varcte -> ID asign2 .)
    DIV             reduce using rule 77 (varcte -> ID asign2 .)
    PLUS            reduce using rule 77 (varcte -> ID asign2 .)
    MINUS           reduce using rule 77 (varcte -> ID asign2 .)
    RELOP           reduce using rule 77 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 77 (varcte -> ID asign2 .) ]


state 165

    (32) asign -> ID EQUALS expresion SCOLON .

    ID              reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    IF              reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    PRINT           reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    PLOT            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    COUNT           reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    MEAN            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    MODE            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    STDV            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    DERL            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    DBERN           reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    DPOI            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    REF             reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    RREF            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    MONT            reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 32 (asign -> ID EQUALS expresion SCOLON .)


state 166

    (35) asign -> ID asign2 EQUALS ID . SCOLON
    (37) asign -> ID asign2 EQUALS ID . asign2 SCOLON
    (76) varcte -> ID .
    (77) varcte -> ID . asign2
    (38) asign2 -> . LCOR expresion RCOR asign3
    (39) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 208
    MULT            reduce using rule 76 (varcte -> ID .)
    DIV             reduce using rule 76 (varcte -> ID .)
    PLUS            reduce using rule 76 (varcte -> ID .)
    MINUS           reduce using rule 76 (varcte -> ID .)
    RELOP           reduce using rule 76 (varcte -> ID .)
    LCOR            shift and go to state 22

  ! SCOLON          [ reduce using rule 76 (varcte -> ID .) ]

    asign2                         shift and go to state 207

state 167

    (36) asign -> ID asign2 EQUALS expresion . SCOLON
    (65) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 209
    RELOP           shift and go to state 102


state 168

    (52) cond -> IF OPAREN expresion CPAREN . block SCOLON
    (53) cond -> IF OPAREN expresion CPAREN . block ELSE block SCOLON
    (16) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 210

state 169

    (43) escrt -> PRINT OPAREN expresion CPAREN . SCOLON

    SCOLON          shift and go to state 211


state 170

    (44) escrt -> PRINT OPAREN CPAREN SCOLON .

    ID              reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    IF              reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PRINT           reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PLOT            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNT           reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNTIF         reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEAN            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEDIAN          reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MODE            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    STDV            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    KMEANS          reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DERL            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DBERN           reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DPOI            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    INVERSE         reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    ROTATE          reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    REF             reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    RREF            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MONT            reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    CBRACKET        reduce using rule 44 (escrt -> PRINT OPAREN CPAREN SCOLON .)


state 171

    (45) escrt -> PRINT OPAREN ID escrt2 . CPAREN SCOLON

    CPAREN          shift and go to state 212


state 172

    (47) escrt2 -> COMMA . escrt3
    (49) escrt3 -> . ID escrt2
    (50) escrt3 -> . ID
    (51) escrt3 -> . STRING escrt2 escrt2

    ID              shift and go to state 214
    STRING          shift and go to state 215

    escrt3                         shift and go to state 213

state 173

    (48) escrt2 -> empty .

    CPAREN          reduce using rule 48 (escrt2 -> empty .)
    COMMA           reduce using rule 48 (escrt2 -> empty .)


state 174

    (46) escrt -> PRINT OPAREN STRING CPAREN . SCOLON

    SCOLON          shift and go to state 216


state 175

    (56) plot -> PLOT OPAREN xyfunc CPAREN . SCOLON

    SCOLON          shift and go to state 217


state 176

    (57) plot -> PLOT OPAREN plot2 CPAREN . SCOLON

    SCOLON          shift and go to state 218


state 177

    (61) xyfunc -> FX EQUALS . exp SCOLON xyfunc
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    exp                            shift and go to state 219
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 178

    (62) xyfunc -> FY EQUALS . exp SCOLON xyfunc
    (66) exp -> . termino
    (67) exp -> . termino PLUS exp
    (68) exp -> . termino MINUS exp
    (69) termino -> . factor
    (70) termino -> . factor MULT termino
    (71) termino -> . factor DIV termino
    (72) factor -> . OPAREN expresion CPAREN
    (73) factor -> . PLUS varcte
    (74) factor -> . MINUS varcte
    (75) factor -> . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    OPAREN          shift and go to state 73
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    exp                            shift and go to state 220
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    varcte                         shift and go to state 112

state 179

    (58) plot2 -> LCOR varcte . COMMA varcte RCOR
    (59) plot2 -> LCOR varcte . COMMA varcte RCOR COMMA plot2

    COMMA           shift and go to state 221


state 180

    (54) count -> COUNT OPAREN ID COMMA . varcte COMMA varcte CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 222

state 181

    (55) countif -> COUNTIF OPAREN ID COMMA . varcte COMMA varcte COMMA cond CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 223

state 182

    (80) metodos -> MEAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 224


state 183

    (99) mmmfunc -> OBRACKET mmmarray . CBRACKET
    (100) mmmfunc -> OBRACKET mmmarray . CBRACKET COMMA mmmfunc

    CBRACKET        shift and go to state 225


state 184

    (102) mmmarray -> varcte .
    (103) mmmarray -> varcte . COMMA mmmarray

    CBRACKET        reduce using rule 102 (mmmarray -> varcte .)
    COMMA           shift and go to state 226


state 185

    (104) mmmarray -> empty .

    CBRACKET        reduce using rule 104 (mmmarray -> empty .)


state 186

    (81) metodos -> MEDIAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 227


state 187

    (82) metodos -> MODE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 228


state 188

    (83) metodos -> STDV OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 229


state 189

    (84) metodos -> KMEANS OPAREN varcte COMMA . mmmfunc CPAREN SCOLON
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 230
    empty                          shift and go to state 132

state 190

    (85) metodos -> DERL OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 231


state 191

    (94) expfunc -> ID COMMA . ID COMMA ID

    ID              shift and go to state 232


state 192

    (95) expfunc -> varcte COMMA . varcte COMMA varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 233

state 193

    (86) metodos -> DBERN OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 234


state 194

    (87) metodos -> DPOI OPAREN expfunc2 CPAREN . SCOLON

    SCOLON          shift and go to state 235


state 195

    (96) expfunc2 -> ID COMMA . ID

    ID              shift and go to state 236


state 196

    (97) expfunc2 -> varcte COMMA . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 237

state 197

    (88) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 238


state 198

    (89) metodos -> INVERSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 239


state 199

    (90) metodos -> ROTATE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 240


state 200

    (91) metodos -> REF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 241


state 201

    (92) metodos -> RREF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 242


state 202

    (93) metodos -> MONT OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 243


state 203

    (12) modules -> FUNC ID COLON tipo addfunction OPAREN . modules2 CPAREN modules2 block
    (14) modules2 -> . vars
    (15) modules2 -> . empty
    (7) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 8
    CPAREN          reduce using rule 105 (empty -> .)

    modules2                       shift and go to state 244
    vars                           shift and go to state 245
    empty                          shift and go to state 246

state 204

    (40) asign3 -> LCOR expresion . RCOR
    (65) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 247
    RELOP           shift and go to state 102


state 205

    (41) asign3 -> LCOR varcte . RCOR
    (75) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 248
    MULT            reduce using rule 75 (factor -> varcte .)
    DIV             reduce using rule 75 (factor -> varcte .)
    PLUS            reduce using rule 75 (factor -> varcte .)
    MINUS           reduce using rule 75 (factor -> varcte .)
    RELOP           reduce using rule 75 (factor -> varcte .)

  ! RCOR            [ reduce using rule 75 (factor -> varcte .) ]


state 206

    (34) asign -> ID EQUALS ID asign2 SCOLON .

    ID              reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 34 (asign -> ID EQUALS ID asign2 SCOLON .)


state 207

    (37) asign -> ID asign2 EQUALS ID asign2 . SCOLON
    (77) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 249
    MULT            reduce using rule 77 (varcte -> ID asign2 .)
    DIV             reduce using rule 77 (varcte -> ID asign2 .)
    PLUS            reduce using rule 77 (varcte -> ID asign2 .)
    MINUS           reduce using rule 77 (varcte -> ID asign2 .)
    RELOP           reduce using rule 77 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 77 (varcte -> ID asign2 .) ]


state 208

    (35) asign -> ID asign2 EQUALS ID SCOLON .

    ID              reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    IF              reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    PRINT           reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    PLOT            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNT           reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEAN            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    MODE            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    STDV            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    KMEANS          reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    DERL            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    DBERN           reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    DPOI            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    INVERSE         reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    ROTATE          reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    REF             reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    RREF            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    MONT            reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 35 (asign -> ID asign2 EQUALS ID SCOLON .)


state 209

    (36) asign -> ID asign2 EQUALS expresion SCOLON .

    ID              reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    IF              reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PRINT           reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PLOT            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNT           reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEAN            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MODE            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    STDV            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DERL            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DBERN           reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DPOI            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    REF             reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    RREF            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MONT            reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 36 (asign -> ID asign2 EQUALS expresion SCOLON .)


state 210

    (52) cond -> IF OPAREN expresion CPAREN block . SCOLON
    (53) cond -> IF OPAREN expresion CPAREN block . ELSE block SCOLON

    SCOLON          shift and go to state 250
    ELSE            shift and go to state 251


state 211

    (43) escrt -> PRINT OPAREN expresion CPAREN SCOLON .

    ID              reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    IF              reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PRINT           reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PLOT            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNT           reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNTIF         reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEAN            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEDIAN          reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MODE            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    STDV            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    KMEANS          reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DERL            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DBERN           reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DPOI            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    INVERSE         reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    ROTATE          reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    REF             reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    RREF            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MONT            reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    CBRACKET        reduce using rule 43 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)


state 212

    (45) escrt -> PRINT OPAREN ID escrt2 CPAREN . SCOLON

    SCOLON          shift and go to state 252


state 213

    (47) escrt2 -> COMMA escrt3 .

    CPAREN          reduce using rule 47 (escrt2 -> COMMA escrt3 .)
    COMMA           reduce using rule 47 (escrt2 -> COMMA escrt3 .)


state 214

    (49) escrt3 -> ID . escrt2
    (50) escrt3 -> ID .
    (47) escrt2 -> . COMMA escrt3
    (48) escrt2 -> . empty
    (105) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CPAREN resolved using rule 50 (escrt3 -> ID .)
  ! shift/reduce conflict for COMMA resolved as shift
    CPAREN          reduce using rule 50 (escrt3 -> ID .)
    COMMA           shift and go to state 172

  ! COMMA           [ reduce using rule 50 (escrt3 -> ID .) ]
  ! CPAREN          [ reduce using rule 105 (empty -> .) ]
  ! COMMA           [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 253
    empty                          shift and go to state 173

state 215

    (51) escrt3 -> STRING . escrt2 escrt2
    (47) escrt2 -> . COMMA escrt3
    (48) escrt2 -> . empty
    (105) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 172
    CPAREN          reduce using rule 105 (empty -> .)

  ! COMMA           [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 254
    empty                          shift and go to state 173

state 216

    (46) escrt -> PRINT OPAREN STRING CPAREN SCOLON .

    ID              reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    IF              reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PRINT           reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PLOT            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNT           reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNTIF         reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEAN            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEDIAN          reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MODE            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    STDV            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    KMEANS          reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DERL            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DBERN           reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DPOI            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    INVERSE         reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    ROTATE          reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    REF             reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    RREF            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MONT            reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    CBRACKET        reduce using rule 46 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)


state 217

    (56) plot -> PLOT OPAREN xyfunc CPAREN SCOLON .

    ID              reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    IF              reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PRINT           reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PLOT            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNT           reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEAN            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MODE            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    STDV            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DERL            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DBERN           reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DPOI            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    REF             reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    RREF            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MONT            reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 56 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)


state 218

    (57) plot -> PLOT OPAREN plot2 CPAREN SCOLON .

    ID              reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    IF              reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PRINT           reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PLOT            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNT           reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEAN            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MODE            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    STDV            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    KMEANS          reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DERL            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DBERN           reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DPOI            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    INVERSE         reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    ROTATE          reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    REF             reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    RREF            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MONT            reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 57 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)


state 219

    (61) xyfunc -> FX EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 255


state 220

    (62) xyfunc -> FY EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 256


state 221

    (58) plot2 -> LCOR varcte COMMA . varcte RCOR
    (59) plot2 -> LCOR varcte COMMA . varcte RCOR COMMA plot2
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 257

state 222

    (54) count -> COUNT OPAREN ID COMMA varcte . COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 258


state 223

    (55) countif -> COUNTIF OPAREN ID COMMA varcte . COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 259


state 224

    (80) metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 80 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)


state 225

    (99) mmmfunc -> OBRACKET mmmarray CBRACKET .
    (100) mmmfunc -> OBRACKET mmmarray CBRACKET . COMMA mmmfunc

    CPAREN          reduce using rule 99 (mmmfunc -> OBRACKET mmmarray CBRACKET .)
    COMMA           shift and go to state 260


state 226

    (103) mmmarray -> varcte COMMA . mmmarray
    (102) mmmarray -> . varcte
    (103) mmmarray -> . varcte COMMA mmmarray
    (104) mmmarray -> . empty
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER
    (105) empty -> .

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68
    CBRACKET        reduce using rule 105 (empty -> .)

    varcte                         shift and go to state 184
    mmmarray                       shift and go to state 261
    empty                          shift and go to state 185

state 227

    (81) metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 81 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)


state 228

    (82) metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 82 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)


state 229

    (83) metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 83 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)


state 230

    (84) metodos -> KMEANS OPAREN varcte COMMA mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 262


state 231

    (85) metodos -> DERL OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 85 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)


state 232

    (94) expfunc -> ID COMMA ID . COMMA ID

    COMMA           shift and go to state 263


state 233

    (95) expfunc -> varcte COMMA varcte . COMMA varcte

    COMMA           shift and go to state 264


state 234

    (86) metodos -> DBERN OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 86 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)


state 235

    (87) metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .

    ID              reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    IF              reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PRINT           reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PLOT            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNT           reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEAN            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MODE            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    STDV            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    KMEANS          reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DERL            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DBERN           reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DPOI            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    INVERSE         reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    ROTATE          reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    REF             reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    RREF            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MONT            reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 87 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)


state 236

    (96) expfunc2 -> ID COMMA ID .

    CPAREN          reduce using rule 96 (expfunc2 -> ID COMMA ID .)


state 237

    (97) expfunc2 -> varcte COMMA varcte .

    CPAREN          reduce using rule 97 (expfunc2 -> varcte COMMA varcte .)


state 238

    (88) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 88 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)


state 239

    (89) metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 89 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)


state 240

    (90) metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 90 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)


state 241

    (91) metodos -> REF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 91 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)


state 242

    (92) metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 92 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)


state 243

    (93) metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 93 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)


state 244

    (12) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 . CPAREN modules2 block

    CPAREN          shift and go to state 265


state 245

    (14) modules2 -> vars .

    CPAREN          reduce using rule 14 (modules2 -> vars .)
    OBRACKET        reduce using rule 14 (modules2 -> vars .)


state 246

    (15) modules2 -> empty .

    CPAREN          reduce using rule 15 (modules2 -> empty .)
    OBRACKET        reduce using rule 15 (modules2 -> empty .)


state 247

    (40) asign3 -> LCOR expresion RCOR .

    COLON           reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    COMMA           reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    EQUALS          reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    RCOR            reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    MULT            reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    DIV             reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    PLUS            reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    MINUS           reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    RELOP           reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    CPAREN          reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    SCOLON          reduce using rule 40 (asign3 -> LCOR expresion RCOR .)
    CBRACKET        reduce using rule 40 (asign3 -> LCOR expresion RCOR .)


state 248

    (41) asign3 -> LCOR varcte RCOR .

    COLON           reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    COMMA           reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    EQUALS          reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    RCOR            reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    MULT            reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    DIV             reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    PLUS            reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    MINUS           reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    RELOP           reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    CPAREN          reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    SCOLON          reduce using rule 41 (asign3 -> LCOR varcte RCOR .)
    CBRACKET        reduce using rule 41 (asign3 -> LCOR varcte RCOR .)


state 249

    (37) asign -> ID asign2 EQUALS ID asign2 SCOLON .

    ID              reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 37 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)


state 250

    (52) cond -> IF OPAREN expresion CPAREN block SCOLON .

    ID              reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    IF              reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PRINT           reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    PLOT            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNT           reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    COUNTIF         reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEAN            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MEDIAN          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MODE            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    STDV            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    KMEANS          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DERL            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DBERN           reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    DPOI            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    TRANSPOSE       reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    INVERSE         reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    ROTATE          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    REF             reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    RREF            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    MONT            reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CBRACKET        reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)
    CPAREN          reduce using rule 52 (cond -> IF OPAREN expresion CPAREN block SCOLON .)


state 251

    (53) cond -> IF OPAREN expresion CPAREN block ELSE . block SCOLON
    (16) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 266

state 252

    (45) escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .

    ID              reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    IF              reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PRINT           reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PLOT            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNT           reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEAN            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MODE            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    STDV            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    KMEANS          reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DERL            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DBERN           reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DPOI            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    INVERSE         reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    ROTATE          reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    REF             reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    RREF            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MONT            reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 45 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)


state 253

    (49) escrt3 -> ID escrt2 .

    CPAREN          reduce using rule 49 (escrt3 -> ID escrt2 .)
    COMMA           reduce using rule 49 (escrt3 -> ID escrt2 .)


state 254

    (51) escrt3 -> STRING escrt2 . escrt2
    (47) escrt2 -> . COMMA escrt3
    (48) escrt2 -> . empty
    (105) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 172
    CPAREN          reduce using rule 105 (empty -> .)

  ! COMMA           [ reduce using rule 105 (empty -> .) ]

    escrt2                         shift and go to state 267
    empty                          shift and go to state 173

state 255

    (61) xyfunc -> FX EQUALS exp SCOLON . xyfunc
    (61) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (62) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (63) xyfunc -> . empty
    (105) empty -> .

    FX              shift and go to state 123
    FY              shift and go to state 124
    CPAREN          reduce using rule 105 (empty -> .)

    xyfunc                         shift and go to state 268
    empty                          shift and go to state 269

state 256

    (62) xyfunc -> FY EQUALS exp SCOLON . xyfunc
    (61) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (62) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (63) xyfunc -> . empty
    (105) empty -> .

    FX              shift and go to state 123
    FY              shift and go to state 124
    CPAREN          reduce using rule 105 (empty -> .)

    xyfunc                         shift and go to state 270
    empty                          shift and go to state 269

state 257

    (58) plot2 -> LCOR varcte COMMA varcte . RCOR
    (59) plot2 -> LCOR varcte COMMA varcte . RCOR COMMA plot2

    RCOR            shift and go to state 271


state 258

    (54) count -> COUNT OPAREN ID COMMA varcte COMMA . varcte CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 272

state 259

    (55) countif -> COUNTIF OPAREN ID COMMA varcte COMMA . varcte COMMA cond CPAREN SCOLON
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 273

state 260

    (100) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA . mmmfunc
    (98) mmmfunc -> . ID
    (99) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (100) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (101) mmmfunc -> . empty
    (105) empty -> .

    ID              shift and go to state 130
    OBRACKET        shift and go to state 131
    CPAREN          reduce using rule 105 (empty -> .)

    mmmfunc                        shift and go to state 274
    empty                          shift and go to state 132

state 261

    (103) mmmarray -> varcte COMMA mmmarray .

    CBRACKET        reduce using rule 103 (mmmarray -> varcte COMMA mmmarray .)


state 262

    (84) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 275


state 263

    (94) expfunc -> ID COMMA ID COMMA . ID

    ID              shift and go to state 276


state 264

    (95) expfunc -> varcte COMMA varcte COMMA . varcte
    (76) varcte -> . ID
    (77) varcte -> . ID asign2
    (78) varcte -> . NUMERIC
    (79) varcte -> . NUMBER

    ID              shift and go to state 66
    NUMERIC         shift and go to state 67
    NUMBER          shift and go to state 68

    varcte                         shift and go to state 277

state 265

    (12) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN . modules2 block
    (14) modules2 -> . vars
    (15) modules2 -> . empty
    (7) vars -> . VAR vars1
    (105) empty -> .

    VAR             shift and go to state 8
    OBRACKET        reduce using rule 105 (empty -> .)

    modules2                       shift and go to state 278
    vars                           shift and go to state 245
    empty                          shift and go to state 246

state 266

    (53) cond -> IF OPAREN expresion CPAREN block ELSE block . SCOLON

    SCOLON          shift and go to state 279


state 267

    (51) escrt3 -> STRING escrt2 escrt2 .

    CPAREN          reduce using rule 51 (escrt3 -> STRING escrt2 escrt2 .)
    COMMA           reduce using rule 51 (escrt3 -> STRING escrt2 escrt2 .)


state 268

    (61) xyfunc -> FX EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 61 (xyfunc -> FX EQUALS exp SCOLON xyfunc .)


state 269

    (63) xyfunc -> empty .

    CPAREN          reduce using rule 63 (xyfunc -> empty .)


state 270

    (62) xyfunc -> FY EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 62 (xyfunc -> FY EQUALS exp SCOLON xyfunc .)


state 271

    (58) plot2 -> LCOR varcte COMMA varcte RCOR .
    (59) plot2 -> LCOR varcte COMMA varcte RCOR . COMMA plot2

    CPAREN          reduce using rule 58 (plot2 -> LCOR varcte COMMA varcte RCOR .)
    COMMA           shift and go to state 280


state 272

    (54) count -> COUNT OPAREN ID COMMA varcte COMMA varcte . CPAREN SCOLON

    CPAREN          shift and go to state 281


state 273

    (55) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte . COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 282


state 274

    (100) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .

    CPAREN          reduce using rule 100 (mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .)


state 275

    (84) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .

    ID              reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 84 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)


state 276

    (94) expfunc -> ID COMMA ID COMMA ID .

    CPAREN          reduce using rule 94 (expfunc -> ID COMMA ID COMMA ID .)


state 277

    (95) expfunc -> varcte COMMA varcte COMMA varcte .

    CPAREN          reduce using rule 95 (expfunc -> varcte COMMA varcte COMMA varcte .)


state 278

    (12) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 . block
    (16) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 16

    block                          shift and go to state 283

state 279

    (53) cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .

    ID              reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    IF              reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PRINT           reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    PLOT            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNT           reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    COUNTIF         reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEAN            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MEDIAN          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MODE            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    STDV            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    KMEANS          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DERL            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DBERN           reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    DPOI            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    TRANSPOSE       reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    INVERSE         reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    ROTATE          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    REF             reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    RREF            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    MONT            reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CBRACKET        reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)
    CPAREN          reduce using rule 53 (cond -> IF OPAREN expresion CPAREN block ELSE block SCOLON .)


state 280

    (59) plot2 -> LCOR varcte COMMA varcte RCOR COMMA . plot2
    (58) plot2 -> . LCOR varcte COMMA varcte RCOR
    (59) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (60) plot2 -> . empty
    (105) empty -> .

    LCOR            shift and go to state 126
    CPAREN          reduce using rule 105 (empty -> .)

    plot2                          shift and go to state 284
    empty                          shift and go to state 285

state 281

    (54) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN . SCOLON

    SCOLON          shift and go to state 286


state 282

    (55) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA . cond CPAREN SCOLON
    (52) cond -> . IF OPAREN expresion CPAREN block SCOLON
    (53) cond -> . IF OPAREN expresion CPAREN block ELSE block SCOLON

    IF              shift and go to state 34

    cond                           shift and go to state 287

state 283

    (12) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .

    FUNC            reduce using rule 12 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)
    OBRACKET        reduce using rule 12 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)


state 284

    (59) plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .

    CPAREN          reduce using rule 59 (plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .)


state 285

    (60) plot2 -> empty .

    CPAREN          reduce using rule 60 (plot2 -> empty .)


state 286

    (54) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .

    ID              reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    IF              reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PRINT           reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PLOT            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNT           reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNTIF         reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEAN            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEDIAN          reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MODE            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    STDV            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    KMEANS          reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DERL            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DBERN           reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DPOI            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    INVERSE         reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    ROTATE          reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    REF             reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    RREF            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MONT            reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    CBRACKET        reduce using rule 54 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)


state 287

    (55) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond . CPAREN SCOLON

    CPAREN          shift and go to state 288


state 288

    (55) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN . SCOLON

    SCOLON          shift and go to state 289


state 289

    (55) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .

    ID              reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    IF              reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PRINT           reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PLOT            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNT           reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNTIF         reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEAN            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEDIAN          reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MODE            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    STDV            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    KMEANS          reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DERL            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DBERN           reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DPOI            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    INVERSE         reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    ROTATE          reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    REF             reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    RREF            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MONT            reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    CBRACKET        reduce using rule 55 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOR in state 64 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 113 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 138 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 142 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 164 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 166 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 205 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 207 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 214 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 214 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 215 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 254 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (lugstat3 -> modules)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 24 resolved using rule (block2 -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 119 resolved using rule (varcte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 125 resolved using rule (plot2 -> empty)
WARNING: rejected rule (xyfunc -> empty) in state 125
WARNING: reduce/reduce conflict in state 214 resolved using rule (escrt3 -> ID)
WARNING: rejected rule (empty -> <empty>) in state 214
