Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHARACTER
    COMMENT
    CTED
    CTEI
    DIFF
    EQ
    GRE
    GREATEQ
    GREATERTHAN
    INTEGER
    LESSEQ
    LESSTHAN
    LOGICAL
    PER
    QUOTE
    TIPO

Grammar

Rule 0     S' -> lugstat
Rule 1     lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block
Rule 2     addmain -> empty
Rule 3     lugstat2 -> vars
Rule 4     lugstat2 -> empty
Rule 5     lugstat3 -> modules
Rule 6     lugstat3 -> modules lugstat3
Rule 7     lugstat3 -> empty
Rule 8     vars -> VAR vars1
Rule 9     vars1 -> ID COMMA vars1
Rule 10    vars1 -> ID COLON tipo SCOLON lugstat2
Rule 11    vars1 -> ID asign2 COLON tipo SCOLON
Rule 12    vars1 -> ID asign2 COMMA vars1
Rule 13    savename -> empty
Rule 14    modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
Rule 15    addfunction -> empty
Rule 16    modules2 -> vars
Rule 17    modules2 -> empty
Rule 18    block -> OBRACKET block2 CBRACKET
Rule 19    block2 -> estatuto
Rule 20    block2 -> estatuto block2
Rule 21    block2 -> empty
Rule 22    tipo -> INT
Rule 23    tipo -> BOOL
Rule 24    tipo -> DOUBLE
Rule 25    tipo -> STRING
Rule 26    tipo -> CHAR
Rule 27    estatuto -> asign
Rule 28    estatuto -> cond
Rule 29    estatuto -> escrt
Rule 30    estatuto -> plot
Rule 31    estatuto -> count
Rule 32    estatuto -> countif
Rule 33    estatuto -> metodos
Rule 34    estatuto -> dwhile
Rule 35    asign -> ID EQUALS expresion SCOLON
Rule 36    asign -> ID EQUALS ID SCOLON
Rule 37    asign -> ID EQUALS ID asign2 SCOLON
Rule 38    asign -> ID asign2 EQUALS ID SCOLON
Rule 39    asign -> ID asign2 EQUALS expresion SCOLON
Rule 40    asign -> ID asign2 EQUALS ID asign2 SCOLON
Rule 41    asign2 -> LCOR expresion RCOR asign3
Rule 42    asign2 -> LCOR varcte RCOR asign3
Rule 43    asign3 -> LCOR expresion RCOR
Rule 44    asign3 -> LCOR varcte RCOR
Rule 45    asign3 -> empty
Rule 46    escrt -> PRINT OPAREN expresion CPAREN SCOLON
Rule 47    escrt -> PRINT OPAREN CPAREN SCOLON
Rule 48    escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON
Rule 49    escrt -> PRINT OPAREN STRING CPAREN SCOLON
Rule 50    escrt2 -> COMMA escrt3
Rule 51    escrt2 -> empty
Rule 52    escrt3 -> ID escrt2
Rule 53    escrt3 -> ID
Rule 54    escrt3 -> STRING escrt2 escrt2
Rule 55    cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2
Rule 56    cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2
Rule 57    cn1 -> empty
Rule 58    cn2 -> empty
Rule 59    cn3 -> empty
Rule 60    count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
Rule 61    countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
Rule 62    plot -> PLOT OPAREN xyfunc CPAREN SCOLON
Rule 63    plot -> PLOT OPAREN plot2 CPAREN SCOLON
Rule 64    plot2 -> LCOR varcte COMMA varcte RCOR
Rule 65    plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2
Rule 66    plot2 -> empty
Rule 67    xyfunc -> FX EQUALS exp SCOLON xyfunc
Rule 68    xyfunc -> FY EQUALS exp SCOLON xyfunc
Rule 69    xyfunc -> empty
Rule 70    expresion -> exp
Rule 71    expresion -> expresion RELOP exp
Rule 72    exp -> termino
Rule 73    exp -> termino PLUS exp
Rule 74    exp -> termino MINUS exp
Rule 75    termino -> factor
Rule 76    termino -> factor MULT termino
Rule 77    termino -> factor DIV termino
Rule 78    factor -> OPAREN expresion CPAREN
Rule 79    factor -> varcte
Rule 80    varcte -> ID
Rule 81    varcte -> ID asign2
Rule 82    varcte -> NUMERIC
Rule 83    varcte -> NUMBER
Rule 84    dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON
Rule 85    wn1 -> empty
Rule 86    wn2 -> empty
Rule 87    wblock -> OBRACKET block2 CBRACKET
Rule 88    dwhileconds -> expresion dwhileconds
Rule 89    dwhileconds -> expresion AND dwhileconds
Rule 90    dwhileconds -> expresion OR dwhileconds
Rule 91    dwhileconds -> empty
Rule 92    metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON
Rule 93    metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON
Rule 94    metodos -> MODE OPAREN mmmfunc CPAREN SCOLON
Rule 95    metodos -> STDV OPAREN mmmfunc CPAREN SCOLON
Rule 96    metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
Rule 97    metodos -> DERL OPAREN expfunc CPAREN SCOLON
Rule 98    metodos -> DBERN OPAREN expfunc CPAREN SCOLON
Rule 99    metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON
Rule 100   metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
Rule 101   metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON
Rule 102   metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON
Rule 103   metodos -> REF OPAREN mmmfunc CPAREN SCOLON
Rule 104   metodos -> RREF OPAREN mmmfunc CPAREN SCOLON
Rule 105   metodos -> MONT OPAREN mmmfunc CPAREN SCOLON
Rule 106   expfunc -> ID COMMA ID COMMA ID
Rule 107   expfunc -> varcte COMMA varcte COMMA varcte
Rule 108   expfunc2 -> ID COMMA ID
Rule 109   expfunc2 -> varcte COMMA varcte
Rule 110   mmmfunc -> ID
Rule 111   mmmfunc -> OBRACKET mmmarray CBRACKET
Rule 112   mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc
Rule 113   mmmfunc -> empty
Rule 114   mmmarray -> varcte
Rule 115   mmmarray -> varcte COMMA mmmarray
Rule 116   mmmarray -> empty
Rule 117   empty -> <empty>

Terminals, with rules where they appear

AND                  : 89
BOOL                 : 23
CBRACKET             : 18 87 111 112
CHAR                 : 26
CHARACTER            : 
COLON                : 10 11 14
COMMA                : 9 12 50 60 60 61 61 61 64 65 65 96 106 106 107 107 108 109 112 115
COMMENT              : 
COUNT                : 60
COUNTIF              : 61
CPAREN               : 14 46 47 48 49 55 56 60 61 62 63 78 84 92 93 94 95 96 97 98 99 100 101 102 103 104 105
CTED                 : 
CTEI                 : 
DBERN                : 98
DERL                 : 97
DIFF                 : 
DIV                  : 77
DO                   : 84
DOUBLE               : 24
DPOI                 : 99
ELSE                 : 56
EQ                   : 
EQUALS               : 35 36 37 38 39 40 67 68
FUNC                 : 14
FX                   : 67
FY                   : 68
GRE                  : 
GREATEQ              : 
GREATERTHAN          : 
ID                   : 1 9 10 11 12 14 35 36 36 37 37 38 38 39 40 40 48 52 53 60 61 80 81 106 106 106 108 108 110
IF                   : 55 56
INT                  : 22
INTEGER              : 
INVERSE              : 101
KMEANS               : 96
LCOR                 : 41 42 43 44 64 65
LESSEQ               : 
LESSTHAN             : 
LOGICAL              : 
LUGSTAT              : 1
MEAN                 : 92
MEDIAN               : 93
MINUS                : 74
MODE                 : 94
MONT                 : 105
MULT                 : 76
NUMBER               : 83
NUMERIC              : 82
OBRACKET             : 18 87 111 112
OPAREN               : 14 46 47 48 49 55 56 60 61 62 63 78 84 92 93 94 95 96 97 98 99 100 101 102 103 104 105
OR                   : 90
PER                  : 
PLOT                 : 62 63
PLUS                 : 73
PRINT                : 46 47 48 49
QUOTE                : 
RCOR                 : 41 42 43 44 64 65
REF                  : 103
RELOP                : 71
ROTATE               : 102
RREF                 : 104
SCOLON               : 1 10 11 35 36 37 38 39 40 46 47 48 49 55 56 60 61 62 63 67 68 84 92 93 94 95 96 97 98 99 100 101 102 103 104 105
STDV                 : 95
STRING               : 25 49 54
TIPO                 : 
TRANSPOSE            : 100
VAR                  : 8
WHILE                : 84
error                : 

Nonterminals, with rules where they appear

addfunction          : 14
addmain              : 1
asign                : 27
asign2               : 11 12 37 38 39 40 40 81
asign3               : 41 42
block                : 1 14 55 56 56
block2               : 18 20 87
cn1                  : 55 56
cn2                  : 55 56
cn3                  : 56 56 56
cond                 : 28 61
count                : 31
countif              : 32
dwhile               : 34
dwhileconds          : 84 88 89 90
empty                : 2 4 7 13 15 17 21 45 51 57 58 59 66 69 85 86 91 113 116
escrt                : 29
escrt2               : 48 52 54 54
escrt3               : 50
estatuto             : 19 20
exp                  : 67 68 70 71 73 74
expfunc              : 97 98
expfunc2             : 99
expresion            : 35 39 41 43 46 55 56 71 78 88 89 90
factor               : 75 76 77
lugstat              : 0
lugstat2             : 1 10
lugstat3             : 1 6
metodos              : 33
mmmarray             : 111 112 115
mmmfunc              : 92 93 94 95 96 100 101 102 103 104 105 112
modules              : 5 6
modules2             : 14 14
plot                 : 30
plot2                : 63 65
savename             : 
termino              : 72 73 74 76 77
tipo                 : 10 11 14
varcte               : 42 44 60 60 61 61 64 64 65 65 79 96 107 107 107 109 109 114 115
vars                 : 3 16
vars1                : 8 9 12
wblock               : 84
wn1                  : 84
wn2                  : 84
xyfunc               : 62 67 68

Parsing method: LALR

state 0

    (0) S' -> . lugstat
    (1) lugstat -> . LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block

    LUGSTAT         shift and go to state 2

    lugstat                        shift and go to state 1

state 1

    (0) S' -> lugstat .



state 2

    (1) lugstat -> LUGSTAT . ID SCOLON addmain lugstat2 lugstat3 block

    ID              shift and go to state 3


state 3

    (1) lugstat -> LUGSTAT ID . SCOLON addmain lugstat2 lugstat3 block

    SCOLON          shift and go to state 4


state 4

    (1) lugstat -> LUGSTAT ID SCOLON . addmain lugstat2 lugstat3 block
    (2) addmain -> . empty
    (117) empty -> .

    VAR             reduce using rule 117 (empty -> .)
    FUNC            reduce using rule 117 (empty -> .)
    OBRACKET        reduce using rule 117 (empty -> .)

    addmain                        shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) lugstat -> LUGSTAT ID SCOLON addmain . lugstat2 lugstat3 block
    (3) lugstat2 -> . vars
    (4) lugstat2 -> . empty
    (8) vars -> . VAR vars1
    (117) empty -> .

    VAR             shift and go to state 10
    FUNC            reduce using rule 117 (empty -> .)
    OBRACKET        reduce using rule 117 (empty -> .)

    lugstat2                       shift and go to state 7
    vars                           shift and go to state 8
    empty                          shift and go to state 9

state 6

    (2) addmain -> empty .

    VAR             reduce using rule 2 (addmain -> empty .)
    FUNC            reduce using rule 2 (addmain -> empty .)
    OBRACKET        reduce using rule 2 (addmain -> empty .)


state 7

    (1) lugstat -> LUGSTAT ID SCOLON addmain lugstat2 . lugstat3 block
    (5) lugstat3 -> . modules
    (6) lugstat3 -> . modules lugstat3
    (7) lugstat3 -> . empty
    (14) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (117) empty -> .

    FUNC            shift and go to state 14
    OBRACKET        reduce using rule 117 (empty -> .)

    lugstat3                       shift and go to state 11
    modules                        shift and go to state 12
    empty                          shift and go to state 13

state 8

    (3) lugstat2 -> vars .

    FUNC            reduce using rule 3 (lugstat2 -> vars .)
    OBRACKET        reduce using rule 3 (lugstat2 -> vars .)
    CPAREN          reduce using rule 3 (lugstat2 -> vars .)


state 9

    (4) lugstat2 -> empty .

    FUNC            reduce using rule 4 (lugstat2 -> empty .)
    OBRACKET        reduce using rule 4 (lugstat2 -> empty .)
    CPAREN          reduce using rule 4 (lugstat2 -> empty .)


state 10

    (8) vars -> VAR . vars1
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID COLON tipo SCOLON lugstat2
    (11) vars1 -> . ID asign2 COLON tipo SCOLON
    (12) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 16

    vars1                          shift and go to state 15

state 11

    (1) lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 . block
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 17

state 12

    (5) lugstat3 -> modules .
    (6) lugstat3 -> modules . lugstat3
    (5) lugstat3 -> . modules
    (6) lugstat3 -> . modules lugstat3
    (7) lugstat3 -> . empty
    (14) modules -> . FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block
    (117) empty -> .

  ! reduce/reduce conflict for OBRACKET resolved using rule 5 (lugstat3 -> modules .)
    OBRACKET        reduce using rule 5 (lugstat3 -> modules .)
    FUNC            shift and go to state 14

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    modules                        shift and go to state 12
    lugstat3                       shift and go to state 19
    empty                          shift and go to state 13

state 13

    (7) lugstat3 -> empty .

    OBRACKET        reduce using rule 7 (lugstat3 -> empty .)


state 14

    (14) modules -> FUNC . ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    ID              shift and go to state 20


state 15

    (8) vars -> VAR vars1 .

    FUNC            reduce using rule 8 (vars -> VAR vars1 .)
    OBRACKET        reduce using rule 8 (vars -> VAR vars1 .)
    CPAREN          reduce using rule 8 (vars -> VAR vars1 .)


state 16

    (9) vars1 -> ID . COMMA vars1
    (10) vars1 -> ID . COLON tipo SCOLON lugstat2
    (11) vars1 -> ID . asign2 COLON tipo SCOLON
    (12) vars1 -> ID . asign2 COMMA vars1
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

    COMMA           shift and go to state 21
    COLON           shift and go to state 22
    LCOR            shift and go to state 24

    asign2                         shift and go to state 23

state 17

    (1) lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block .

    $end            reduce using rule 1 (lugstat -> LUGSTAT ID SCOLON addmain lugstat2 lugstat3 block .)


state 18

    (18) block -> OBRACKET . block2 CBRACKET
    (19) block2 -> . estatuto
    (20) block2 -> . estatuto block2
    (21) block2 -> . empty
    (27) estatuto -> . asign
    (28) estatuto -> . cond
    (29) estatuto -> . escrt
    (30) estatuto -> . plot
    (31) estatuto -> . count
    (32) estatuto -> . countif
    (33) estatuto -> . metodos
    (34) estatuto -> . dwhile
    (117) empty -> .
    (35) asign -> . ID EQUALS expresion SCOLON
    (36) asign -> . ID EQUALS ID SCOLON
    (37) asign -> . ID EQUALS ID asign2 SCOLON
    (38) asign -> . ID asign2 EQUALS ID SCOLON
    (39) asign -> . ID asign2 EQUALS expresion SCOLON
    (40) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (55) cond -> . IF OPAREN expresion cn1 CPAREN block SCOLON cn2
    (56) cond -> . IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2
    (46) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN CPAREN SCOLON
    (48) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (49) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (62) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (63) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (60) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (61) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (92) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (94) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (95) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (96) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (97) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (98) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (99) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (100) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (101) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (102) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (103) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (104) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (105) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON
    (84) dwhile -> . DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON

    CBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    PLOT            shift and go to state 39
    COUNT           shift and go to state 40
    COUNTIF         shift and go to state 41
    MEAN            shift and go to state 42
    MEDIAN          shift and go to state 43
    MODE            shift and go to state 44
    STDV            shift and go to state 45
    KMEANS          shift and go to state 46
    DERL            shift and go to state 47
    DBERN           shift and go to state 48
    DPOI            shift and go to state 49
    TRANSPOSE       shift and go to state 50
    INVERSE         shift and go to state 51
    ROTATE          shift and go to state 52
    REF             shift and go to state 53
    RREF            shift and go to state 54
    MONT            shift and go to state 55
    DO              shift and go to state 56

    block2                         shift and go to state 25
    estatuto                       shift and go to state 26
    empty                          shift and go to state 27
    asign                          shift and go to state 28
    cond                           shift and go to state 29
    escrt                          shift and go to state 30
    plot                           shift and go to state 31
    count                          shift and go to state 32
    countif                        shift and go to state 33
    metodos                        shift and go to state 34
    dwhile                         shift and go to state 35

state 19

    (6) lugstat3 -> modules lugstat3 .

    OBRACKET        reduce using rule 6 (lugstat3 -> modules lugstat3 .)


state 20

    (14) modules -> FUNC ID . COLON tipo addfunction OPAREN modules2 CPAREN modules2 block

    COLON           shift and go to state 57


state 21

    (9) vars1 -> ID COMMA . vars1
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID COLON tipo SCOLON lugstat2
    (11) vars1 -> . ID asign2 COLON tipo SCOLON
    (12) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 16

    vars1                          shift and go to state 58

state 22

    (10) vars1 -> ID COLON . tipo SCOLON lugstat2
    (22) tipo -> . INT
    (23) tipo -> . BOOL
    (24) tipo -> . DOUBLE
    (25) tipo -> . STRING
    (26) tipo -> . CHAR

    INT             shift and go to state 60
    BOOL            shift and go to state 61
    DOUBLE          shift and go to state 62
    STRING          shift and go to state 63
    CHAR            shift and go to state 64

    tipo                           shift and go to state 59

state 23

    (11) vars1 -> ID asign2 . COLON tipo SCOLON
    (12) vars1 -> ID asign2 . COMMA vars1

    COLON           shift and go to state 65
    COMMA           shift and go to state 66


state 24

    (41) asign2 -> LCOR . expresion RCOR asign3
    (42) asign2 -> LCOR . varcte RCOR asign3
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72
    OPAREN          shift and go to state 75

    expresion                      shift and go to state 67
    varcte                         shift and go to state 68
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74

state 25

    (18) block -> OBRACKET block2 . CBRACKET

    CBRACKET        shift and go to state 76


state 26

    (19) block2 -> estatuto .
    (20) block2 -> estatuto . block2
    (19) block2 -> . estatuto
    (20) block2 -> . estatuto block2
    (21) block2 -> . empty
    (27) estatuto -> . asign
    (28) estatuto -> . cond
    (29) estatuto -> . escrt
    (30) estatuto -> . plot
    (31) estatuto -> . count
    (32) estatuto -> . countif
    (33) estatuto -> . metodos
    (34) estatuto -> . dwhile
    (117) empty -> .
    (35) asign -> . ID EQUALS expresion SCOLON
    (36) asign -> . ID EQUALS ID SCOLON
    (37) asign -> . ID EQUALS ID asign2 SCOLON
    (38) asign -> . ID asign2 EQUALS ID SCOLON
    (39) asign -> . ID asign2 EQUALS expresion SCOLON
    (40) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (55) cond -> . IF OPAREN expresion cn1 CPAREN block SCOLON cn2
    (56) cond -> . IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2
    (46) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN CPAREN SCOLON
    (48) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (49) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (62) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (63) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (60) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (61) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (92) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (94) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (95) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (96) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (97) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (98) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (99) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (100) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (101) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (102) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (103) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (104) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (105) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON
    (84) dwhile -> . DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON

  ! reduce/reduce conflict for CBRACKET resolved using rule 19 (block2 -> estatuto .)
    CBRACKET        reduce using rule 19 (block2 -> estatuto .)
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    PLOT            shift and go to state 39
    COUNT           shift and go to state 40
    COUNTIF         shift and go to state 41
    MEAN            shift and go to state 42
    MEDIAN          shift and go to state 43
    MODE            shift and go to state 44
    STDV            shift and go to state 45
    KMEANS          shift and go to state 46
    DERL            shift and go to state 47
    DBERN           shift and go to state 48
    DPOI            shift and go to state 49
    TRANSPOSE       shift and go to state 50
    INVERSE         shift and go to state 51
    ROTATE          shift and go to state 52
    REF             shift and go to state 53
    RREF            shift and go to state 54
    MONT            shift and go to state 55
    DO              shift and go to state 56

  ! CBRACKET        [ reduce using rule 117 (empty -> .) ]

    estatuto                       shift and go to state 26
    block2                         shift and go to state 77
    empty                          shift and go to state 27
    asign                          shift and go to state 28
    cond                           shift and go to state 29
    escrt                          shift and go to state 30
    plot                           shift and go to state 31
    count                          shift and go to state 32
    countif                        shift and go to state 33
    metodos                        shift and go to state 34
    dwhile                         shift and go to state 35

state 27

    (21) block2 -> empty .

    CBRACKET        reduce using rule 21 (block2 -> empty .)


state 28

    (27) estatuto -> asign .

    ID              reduce using rule 27 (estatuto -> asign .)
    IF              reduce using rule 27 (estatuto -> asign .)
    PRINT           reduce using rule 27 (estatuto -> asign .)
    PLOT            reduce using rule 27 (estatuto -> asign .)
    COUNT           reduce using rule 27 (estatuto -> asign .)
    COUNTIF         reduce using rule 27 (estatuto -> asign .)
    MEAN            reduce using rule 27 (estatuto -> asign .)
    MEDIAN          reduce using rule 27 (estatuto -> asign .)
    MODE            reduce using rule 27 (estatuto -> asign .)
    STDV            reduce using rule 27 (estatuto -> asign .)
    KMEANS          reduce using rule 27 (estatuto -> asign .)
    DERL            reduce using rule 27 (estatuto -> asign .)
    DBERN           reduce using rule 27 (estatuto -> asign .)
    DPOI            reduce using rule 27 (estatuto -> asign .)
    TRANSPOSE       reduce using rule 27 (estatuto -> asign .)
    INVERSE         reduce using rule 27 (estatuto -> asign .)
    ROTATE          reduce using rule 27 (estatuto -> asign .)
    REF             reduce using rule 27 (estatuto -> asign .)
    RREF            reduce using rule 27 (estatuto -> asign .)
    MONT            reduce using rule 27 (estatuto -> asign .)
    DO              reduce using rule 27 (estatuto -> asign .)
    CBRACKET        reduce using rule 27 (estatuto -> asign .)


state 29

    (28) estatuto -> cond .

    ID              reduce using rule 28 (estatuto -> cond .)
    IF              reduce using rule 28 (estatuto -> cond .)
    PRINT           reduce using rule 28 (estatuto -> cond .)
    PLOT            reduce using rule 28 (estatuto -> cond .)
    COUNT           reduce using rule 28 (estatuto -> cond .)
    COUNTIF         reduce using rule 28 (estatuto -> cond .)
    MEAN            reduce using rule 28 (estatuto -> cond .)
    MEDIAN          reduce using rule 28 (estatuto -> cond .)
    MODE            reduce using rule 28 (estatuto -> cond .)
    STDV            reduce using rule 28 (estatuto -> cond .)
    KMEANS          reduce using rule 28 (estatuto -> cond .)
    DERL            reduce using rule 28 (estatuto -> cond .)
    DBERN           reduce using rule 28 (estatuto -> cond .)
    DPOI            reduce using rule 28 (estatuto -> cond .)
    TRANSPOSE       reduce using rule 28 (estatuto -> cond .)
    INVERSE         reduce using rule 28 (estatuto -> cond .)
    ROTATE          reduce using rule 28 (estatuto -> cond .)
    REF             reduce using rule 28 (estatuto -> cond .)
    RREF            reduce using rule 28 (estatuto -> cond .)
    MONT            reduce using rule 28 (estatuto -> cond .)
    DO              reduce using rule 28 (estatuto -> cond .)
    CBRACKET        reduce using rule 28 (estatuto -> cond .)


state 30

    (29) estatuto -> escrt .

    ID              reduce using rule 29 (estatuto -> escrt .)
    IF              reduce using rule 29 (estatuto -> escrt .)
    PRINT           reduce using rule 29 (estatuto -> escrt .)
    PLOT            reduce using rule 29 (estatuto -> escrt .)
    COUNT           reduce using rule 29 (estatuto -> escrt .)
    COUNTIF         reduce using rule 29 (estatuto -> escrt .)
    MEAN            reduce using rule 29 (estatuto -> escrt .)
    MEDIAN          reduce using rule 29 (estatuto -> escrt .)
    MODE            reduce using rule 29 (estatuto -> escrt .)
    STDV            reduce using rule 29 (estatuto -> escrt .)
    KMEANS          reduce using rule 29 (estatuto -> escrt .)
    DERL            reduce using rule 29 (estatuto -> escrt .)
    DBERN           reduce using rule 29 (estatuto -> escrt .)
    DPOI            reduce using rule 29 (estatuto -> escrt .)
    TRANSPOSE       reduce using rule 29 (estatuto -> escrt .)
    INVERSE         reduce using rule 29 (estatuto -> escrt .)
    ROTATE          reduce using rule 29 (estatuto -> escrt .)
    REF             reduce using rule 29 (estatuto -> escrt .)
    RREF            reduce using rule 29 (estatuto -> escrt .)
    MONT            reduce using rule 29 (estatuto -> escrt .)
    DO              reduce using rule 29 (estatuto -> escrt .)
    CBRACKET        reduce using rule 29 (estatuto -> escrt .)


state 31

    (30) estatuto -> plot .

    ID              reduce using rule 30 (estatuto -> plot .)
    IF              reduce using rule 30 (estatuto -> plot .)
    PRINT           reduce using rule 30 (estatuto -> plot .)
    PLOT            reduce using rule 30 (estatuto -> plot .)
    COUNT           reduce using rule 30 (estatuto -> plot .)
    COUNTIF         reduce using rule 30 (estatuto -> plot .)
    MEAN            reduce using rule 30 (estatuto -> plot .)
    MEDIAN          reduce using rule 30 (estatuto -> plot .)
    MODE            reduce using rule 30 (estatuto -> plot .)
    STDV            reduce using rule 30 (estatuto -> plot .)
    KMEANS          reduce using rule 30 (estatuto -> plot .)
    DERL            reduce using rule 30 (estatuto -> plot .)
    DBERN           reduce using rule 30 (estatuto -> plot .)
    DPOI            reduce using rule 30 (estatuto -> plot .)
    TRANSPOSE       reduce using rule 30 (estatuto -> plot .)
    INVERSE         reduce using rule 30 (estatuto -> plot .)
    ROTATE          reduce using rule 30 (estatuto -> plot .)
    REF             reduce using rule 30 (estatuto -> plot .)
    RREF            reduce using rule 30 (estatuto -> plot .)
    MONT            reduce using rule 30 (estatuto -> plot .)
    DO              reduce using rule 30 (estatuto -> plot .)
    CBRACKET        reduce using rule 30 (estatuto -> plot .)


state 32

    (31) estatuto -> count .

    ID              reduce using rule 31 (estatuto -> count .)
    IF              reduce using rule 31 (estatuto -> count .)
    PRINT           reduce using rule 31 (estatuto -> count .)
    PLOT            reduce using rule 31 (estatuto -> count .)
    COUNT           reduce using rule 31 (estatuto -> count .)
    COUNTIF         reduce using rule 31 (estatuto -> count .)
    MEAN            reduce using rule 31 (estatuto -> count .)
    MEDIAN          reduce using rule 31 (estatuto -> count .)
    MODE            reduce using rule 31 (estatuto -> count .)
    STDV            reduce using rule 31 (estatuto -> count .)
    KMEANS          reduce using rule 31 (estatuto -> count .)
    DERL            reduce using rule 31 (estatuto -> count .)
    DBERN           reduce using rule 31 (estatuto -> count .)
    DPOI            reduce using rule 31 (estatuto -> count .)
    TRANSPOSE       reduce using rule 31 (estatuto -> count .)
    INVERSE         reduce using rule 31 (estatuto -> count .)
    ROTATE          reduce using rule 31 (estatuto -> count .)
    REF             reduce using rule 31 (estatuto -> count .)
    RREF            reduce using rule 31 (estatuto -> count .)
    MONT            reduce using rule 31 (estatuto -> count .)
    DO              reduce using rule 31 (estatuto -> count .)
    CBRACKET        reduce using rule 31 (estatuto -> count .)


state 33

    (32) estatuto -> countif .

    ID              reduce using rule 32 (estatuto -> countif .)
    IF              reduce using rule 32 (estatuto -> countif .)
    PRINT           reduce using rule 32 (estatuto -> countif .)
    PLOT            reduce using rule 32 (estatuto -> countif .)
    COUNT           reduce using rule 32 (estatuto -> countif .)
    COUNTIF         reduce using rule 32 (estatuto -> countif .)
    MEAN            reduce using rule 32 (estatuto -> countif .)
    MEDIAN          reduce using rule 32 (estatuto -> countif .)
    MODE            reduce using rule 32 (estatuto -> countif .)
    STDV            reduce using rule 32 (estatuto -> countif .)
    KMEANS          reduce using rule 32 (estatuto -> countif .)
    DERL            reduce using rule 32 (estatuto -> countif .)
    DBERN           reduce using rule 32 (estatuto -> countif .)
    DPOI            reduce using rule 32 (estatuto -> countif .)
    TRANSPOSE       reduce using rule 32 (estatuto -> countif .)
    INVERSE         reduce using rule 32 (estatuto -> countif .)
    ROTATE          reduce using rule 32 (estatuto -> countif .)
    REF             reduce using rule 32 (estatuto -> countif .)
    RREF            reduce using rule 32 (estatuto -> countif .)
    MONT            reduce using rule 32 (estatuto -> countif .)
    DO              reduce using rule 32 (estatuto -> countif .)
    CBRACKET        reduce using rule 32 (estatuto -> countif .)


state 34

    (33) estatuto -> metodos .

    ID              reduce using rule 33 (estatuto -> metodos .)
    IF              reduce using rule 33 (estatuto -> metodos .)
    PRINT           reduce using rule 33 (estatuto -> metodos .)
    PLOT            reduce using rule 33 (estatuto -> metodos .)
    COUNT           reduce using rule 33 (estatuto -> metodos .)
    COUNTIF         reduce using rule 33 (estatuto -> metodos .)
    MEAN            reduce using rule 33 (estatuto -> metodos .)
    MEDIAN          reduce using rule 33 (estatuto -> metodos .)
    MODE            reduce using rule 33 (estatuto -> metodos .)
    STDV            reduce using rule 33 (estatuto -> metodos .)
    KMEANS          reduce using rule 33 (estatuto -> metodos .)
    DERL            reduce using rule 33 (estatuto -> metodos .)
    DBERN           reduce using rule 33 (estatuto -> metodos .)
    DPOI            reduce using rule 33 (estatuto -> metodos .)
    TRANSPOSE       reduce using rule 33 (estatuto -> metodos .)
    INVERSE         reduce using rule 33 (estatuto -> metodos .)
    ROTATE          reduce using rule 33 (estatuto -> metodos .)
    REF             reduce using rule 33 (estatuto -> metodos .)
    RREF            reduce using rule 33 (estatuto -> metodos .)
    MONT            reduce using rule 33 (estatuto -> metodos .)
    DO              reduce using rule 33 (estatuto -> metodos .)
    CBRACKET        reduce using rule 33 (estatuto -> metodos .)


state 35

    (34) estatuto -> dwhile .

    ID              reduce using rule 34 (estatuto -> dwhile .)
    IF              reduce using rule 34 (estatuto -> dwhile .)
    PRINT           reduce using rule 34 (estatuto -> dwhile .)
    PLOT            reduce using rule 34 (estatuto -> dwhile .)
    COUNT           reduce using rule 34 (estatuto -> dwhile .)
    COUNTIF         reduce using rule 34 (estatuto -> dwhile .)
    MEAN            reduce using rule 34 (estatuto -> dwhile .)
    MEDIAN          reduce using rule 34 (estatuto -> dwhile .)
    MODE            reduce using rule 34 (estatuto -> dwhile .)
    STDV            reduce using rule 34 (estatuto -> dwhile .)
    KMEANS          reduce using rule 34 (estatuto -> dwhile .)
    DERL            reduce using rule 34 (estatuto -> dwhile .)
    DBERN           reduce using rule 34 (estatuto -> dwhile .)
    DPOI            reduce using rule 34 (estatuto -> dwhile .)
    TRANSPOSE       reduce using rule 34 (estatuto -> dwhile .)
    INVERSE         reduce using rule 34 (estatuto -> dwhile .)
    ROTATE          reduce using rule 34 (estatuto -> dwhile .)
    REF             reduce using rule 34 (estatuto -> dwhile .)
    RREF            reduce using rule 34 (estatuto -> dwhile .)
    MONT            reduce using rule 34 (estatuto -> dwhile .)
    DO              reduce using rule 34 (estatuto -> dwhile .)
    CBRACKET        reduce using rule 34 (estatuto -> dwhile .)


state 36

    (35) asign -> ID . EQUALS expresion SCOLON
    (36) asign -> ID . EQUALS ID SCOLON
    (37) asign -> ID . EQUALS ID asign2 SCOLON
    (38) asign -> ID . asign2 EQUALS ID SCOLON
    (39) asign -> ID . asign2 EQUALS expresion SCOLON
    (40) asign -> ID . asign2 EQUALS ID asign2 SCOLON
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

    EQUALS          shift and go to state 78
    LCOR            shift and go to state 24

    asign2                         shift and go to state 79

state 37

    (55) cond -> IF . OPAREN expresion cn1 CPAREN block SCOLON cn2
    (56) cond -> IF . OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2

    OPAREN          shift and go to state 80


state 38

    (46) escrt -> PRINT . OPAREN expresion CPAREN SCOLON
    (47) escrt -> PRINT . OPAREN CPAREN SCOLON
    (48) escrt -> PRINT . OPAREN ID escrt2 CPAREN SCOLON
    (49) escrt -> PRINT . OPAREN STRING CPAREN SCOLON

    OPAREN          shift and go to state 81


state 39

    (62) plot -> PLOT . OPAREN xyfunc CPAREN SCOLON
    (63) plot -> PLOT . OPAREN plot2 CPAREN SCOLON

    OPAREN          shift and go to state 82


state 40

    (60) count -> COUNT . OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON

    OPAREN          shift and go to state 83


state 41

    (61) countif -> COUNTIF . OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    OPAREN          shift and go to state 84


state 42

    (92) metodos -> MEAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 85


state 43

    (93) metodos -> MEDIAN . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 86


state 44

    (94) metodos -> MODE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 87


state 45

    (95) metodos -> STDV . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 88


state 46

    (96) metodos -> KMEANS . OPAREN varcte COMMA mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 89


state 47

    (97) metodos -> DERL . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 90


state 48

    (98) metodos -> DBERN . OPAREN expfunc CPAREN SCOLON

    OPAREN          shift and go to state 91


state 49

    (99) metodos -> DPOI . OPAREN expfunc2 CPAREN SCOLON

    OPAREN          shift and go to state 92


state 50

    (100) metodos -> TRANSPOSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 93


state 51

    (101) metodos -> INVERSE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 94


state 52

    (102) metodos -> ROTATE . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 95


state 53

    (103) metodos -> REF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 96


state 54

    (104) metodos -> RREF . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 97


state 55

    (105) metodos -> MONT . OPAREN mmmfunc CPAREN SCOLON

    OPAREN          shift and go to state 98


state 56

    (84) dwhile -> DO . wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON
    (85) wn1 -> . empty
    (117) empty -> .

    OBRACKET        reduce using rule 117 (empty -> .)

    wn1                            shift and go to state 99
    empty                          shift and go to state 100

state 57

    (14) modules -> FUNC ID COLON . tipo addfunction OPAREN modules2 CPAREN modules2 block
    (22) tipo -> . INT
    (23) tipo -> . BOOL
    (24) tipo -> . DOUBLE
    (25) tipo -> . STRING
    (26) tipo -> . CHAR

    INT             shift and go to state 60
    BOOL            shift and go to state 61
    DOUBLE          shift and go to state 62
    STRING          shift and go to state 63
    CHAR            shift and go to state 64

    tipo                           shift and go to state 101

state 58

    (9) vars1 -> ID COMMA vars1 .

    FUNC            reduce using rule 9 (vars1 -> ID COMMA vars1 .)
    OBRACKET        reduce using rule 9 (vars1 -> ID COMMA vars1 .)
    CPAREN          reduce using rule 9 (vars1 -> ID COMMA vars1 .)


state 59

    (10) vars1 -> ID COLON tipo . SCOLON lugstat2

    SCOLON          shift and go to state 102


state 60

    (22) tipo -> INT .

    SCOLON          reduce using rule 22 (tipo -> INT .)
    OPAREN          reduce using rule 22 (tipo -> INT .)


state 61

    (23) tipo -> BOOL .

    SCOLON          reduce using rule 23 (tipo -> BOOL .)
    OPAREN          reduce using rule 23 (tipo -> BOOL .)


state 62

    (24) tipo -> DOUBLE .

    SCOLON          reduce using rule 24 (tipo -> DOUBLE .)
    OPAREN          reduce using rule 24 (tipo -> DOUBLE .)


state 63

    (25) tipo -> STRING .

    SCOLON          reduce using rule 25 (tipo -> STRING .)
    OPAREN          reduce using rule 25 (tipo -> STRING .)


state 64

    (26) tipo -> CHAR .

    SCOLON          reduce using rule 26 (tipo -> CHAR .)
    OPAREN          reduce using rule 26 (tipo -> CHAR .)


state 65

    (11) vars1 -> ID asign2 COLON . tipo SCOLON
    (22) tipo -> . INT
    (23) tipo -> . BOOL
    (24) tipo -> . DOUBLE
    (25) tipo -> . STRING
    (26) tipo -> . CHAR

    INT             shift and go to state 60
    BOOL            shift and go to state 61
    DOUBLE          shift and go to state 62
    STRING          shift and go to state 63
    CHAR            shift and go to state 64

    tipo                           shift and go to state 103

state 66

    (12) vars1 -> ID asign2 COMMA . vars1
    (9) vars1 -> . ID COMMA vars1
    (10) vars1 -> . ID COLON tipo SCOLON lugstat2
    (11) vars1 -> . ID asign2 COLON tipo SCOLON
    (12) vars1 -> . ID asign2 COMMA vars1

    ID              shift and go to state 16

    vars1                          shift and go to state 104

state 67

    (41) asign2 -> LCOR expresion . RCOR asign3
    (71) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 105
    RELOP           shift and go to state 106


state 68

    (42) asign2 -> LCOR varcte . RCOR asign3
    (79) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 107
    MULT            reduce using rule 79 (factor -> varcte .)
    DIV             reduce using rule 79 (factor -> varcte .)
    PLUS            reduce using rule 79 (factor -> varcte .)
    MINUS           reduce using rule 79 (factor -> varcte .)
    RELOP           reduce using rule 79 (factor -> varcte .)

  ! RCOR            [ reduce using rule 79 (factor -> varcte .) ]


state 69

    (70) expresion -> exp .

    RCOR            reduce using rule 70 (expresion -> exp .)
    RELOP           reduce using rule 70 (expresion -> exp .)
    CPAREN          reduce using rule 70 (expresion -> exp .)
    SCOLON          reduce using rule 70 (expresion -> exp .)
    AND             reduce using rule 70 (expresion -> exp .)
    OR              reduce using rule 70 (expresion -> exp .)
    OPAREN          reduce using rule 70 (expresion -> exp .)
    ID              reduce using rule 70 (expresion -> exp .)
    NUMERIC         reduce using rule 70 (expresion -> exp .)
    NUMBER          reduce using rule 70 (expresion -> exp .)


state 70

    (80) varcte -> ID .
    (81) varcte -> ID . asign2
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

    RCOR            reduce using rule 80 (varcte -> ID .)
    MULT            reduce using rule 80 (varcte -> ID .)
    DIV             reduce using rule 80 (varcte -> ID .)
    PLUS            reduce using rule 80 (varcte -> ID .)
    MINUS           reduce using rule 80 (varcte -> ID .)
    RELOP           reduce using rule 80 (varcte -> ID .)
    CPAREN          reduce using rule 80 (varcte -> ID .)
    COMMA           reduce using rule 80 (varcte -> ID .)
    SCOLON          reduce using rule 80 (varcte -> ID .)
    AND             reduce using rule 80 (varcte -> ID .)
    OR              reduce using rule 80 (varcte -> ID .)
    OPAREN          reduce using rule 80 (varcte -> ID .)
    ID              reduce using rule 80 (varcte -> ID .)
    NUMERIC         reduce using rule 80 (varcte -> ID .)
    NUMBER          reduce using rule 80 (varcte -> ID .)
    CBRACKET        reduce using rule 80 (varcte -> ID .)
    LCOR            shift and go to state 24

    asign2                         shift and go to state 108

state 71

    (82) varcte -> NUMERIC .

    RCOR            reduce using rule 82 (varcte -> NUMERIC .)
    MULT            reduce using rule 82 (varcte -> NUMERIC .)
    DIV             reduce using rule 82 (varcte -> NUMERIC .)
    PLUS            reduce using rule 82 (varcte -> NUMERIC .)
    MINUS           reduce using rule 82 (varcte -> NUMERIC .)
    RELOP           reduce using rule 82 (varcte -> NUMERIC .)
    CPAREN          reduce using rule 82 (varcte -> NUMERIC .)
    SCOLON          reduce using rule 82 (varcte -> NUMERIC .)
    COMMA           reduce using rule 82 (varcte -> NUMERIC .)
    AND             reduce using rule 82 (varcte -> NUMERIC .)
    OR              reduce using rule 82 (varcte -> NUMERIC .)
    OPAREN          reduce using rule 82 (varcte -> NUMERIC .)
    ID              reduce using rule 82 (varcte -> NUMERIC .)
    NUMERIC         reduce using rule 82 (varcte -> NUMERIC .)
    NUMBER          reduce using rule 82 (varcte -> NUMERIC .)
    CBRACKET        reduce using rule 82 (varcte -> NUMERIC .)


state 72

    (83) varcte -> NUMBER .

    RCOR            reduce using rule 83 (varcte -> NUMBER .)
    MULT            reduce using rule 83 (varcte -> NUMBER .)
    DIV             reduce using rule 83 (varcte -> NUMBER .)
    PLUS            reduce using rule 83 (varcte -> NUMBER .)
    MINUS           reduce using rule 83 (varcte -> NUMBER .)
    RELOP           reduce using rule 83 (varcte -> NUMBER .)
    CPAREN          reduce using rule 83 (varcte -> NUMBER .)
    SCOLON          reduce using rule 83 (varcte -> NUMBER .)
    COMMA           reduce using rule 83 (varcte -> NUMBER .)
    AND             reduce using rule 83 (varcte -> NUMBER .)
    OR              reduce using rule 83 (varcte -> NUMBER .)
    OPAREN          reduce using rule 83 (varcte -> NUMBER .)
    ID              reduce using rule 83 (varcte -> NUMBER .)
    NUMERIC         reduce using rule 83 (varcte -> NUMBER .)
    NUMBER          reduce using rule 83 (varcte -> NUMBER .)
    CBRACKET        reduce using rule 83 (varcte -> NUMBER .)


state 73

    (72) exp -> termino .
    (73) exp -> termino . PLUS exp
    (74) exp -> termino . MINUS exp

    RCOR            reduce using rule 72 (exp -> termino .)
    RELOP           reduce using rule 72 (exp -> termino .)
    CPAREN          reduce using rule 72 (exp -> termino .)
    SCOLON          reduce using rule 72 (exp -> termino .)
    AND             reduce using rule 72 (exp -> termino .)
    OR              reduce using rule 72 (exp -> termino .)
    OPAREN          reduce using rule 72 (exp -> termino .)
    ID              reduce using rule 72 (exp -> termino .)
    NUMERIC         reduce using rule 72 (exp -> termino .)
    NUMBER          reduce using rule 72 (exp -> termino .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110


state 74

    (75) termino -> factor .
    (76) termino -> factor . MULT termino
    (77) termino -> factor . DIV termino

    PLUS            reduce using rule 75 (termino -> factor .)
    MINUS           reduce using rule 75 (termino -> factor .)
    RCOR            reduce using rule 75 (termino -> factor .)
    RELOP           reduce using rule 75 (termino -> factor .)
    CPAREN          reduce using rule 75 (termino -> factor .)
    SCOLON          reduce using rule 75 (termino -> factor .)
    AND             reduce using rule 75 (termino -> factor .)
    OR              reduce using rule 75 (termino -> factor .)
    OPAREN          reduce using rule 75 (termino -> factor .)
    ID              reduce using rule 75 (termino -> factor .)
    NUMERIC         reduce using rule 75 (termino -> factor .)
    NUMBER          reduce using rule 75 (termino -> factor .)
    MULT            shift and go to state 111
    DIV             shift and go to state 112


state 75

    (78) factor -> OPAREN . expresion CPAREN
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 113
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 76

    (18) block -> OBRACKET block2 CBRACKET .

    $end            reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    SCOLON          reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    ELSE            reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    FUNC            reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)
    OBRACKET        reduce using rule 18 (block -> OBRACKET block2 CBRACKET .)


state 77

    (20) block2 -> estatuto block2 .

    CBRACKET        reduce using rule 20 (block2 -> estatuto block2 .)


state 78

    (35) asign -> ID EQUALS . expresion SCOLON
    (36) asign -> ID EQUALS . ID SCOLON
    (37) asign -> ID EQUALS . ID asign2 SCOLON
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 115
    OPAREN          shift and go to state 75
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 116
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 79

    (38) asign -> ID asign2 . EQUALS ID SCOLON
    (39) asign -> ID asign2 . EQUALS expresion SCOLON
    (40) asign -> ID asign2 . EQUALS ID asign2 SCOLON

    EQUALS          shift and go to state 117


state 80

    (55) cond -> IF OPAREN . expresion cn1 CPAREN block SCOLON cn2
    (56) cond -> IF OPAREN . expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 118
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 81

    (46) escrt -> PRINT OPAREN . expresion CPAREN SCOLON
    (47) escrt -> PRINT OPAREN . CPAREN SCOLON
    (48) escrt -> PRINT OPAREN . ID escrt2 CPAREN SCOLON
    (49) escrt -> PRINT OPAREN . STRING CPAREN SCOLON
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    CPAREN          shift and go to state 120
    ID              shift and go to state 121
    STRING          shift and go to state 122
    OPAREN          shift and go to state 75
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 119
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 82

    (62) plot -> PLOT OPAREN . xyfunc CPAREN SCOLON
    (63) plot -> PLOT OPAREN . plot2 CPAREN SCOLON
    (67) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (68) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (69) xyfunc -> . empty
    (64) plot2 -> . LCOR varcte COMMA varcte RCOR
    (65) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (66) plot2 -> . empty
    (117) empty -> .

    FX              shift and go to state 125
    FY              shift and go to state 126
    LCOR            shift and go to state 128
    CPAREN          reduce using rule 117 (empty -> .)

    xyfunc                         shift and go to state 123
    plot2                          shift and go to state 124
    empty                          shift and go to state 127

state 83

    (60) count -> COUNT OPAREN . ID COMMA varcte COMMA varcte CPAREN SCOLON

    ID              shift and go to state 129


state 84

    (61) countif -> COUNTIF OPAREN . ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    ID              shift and go to state 130


state 85

    (92) metodos -> MEAN OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 131
    empty                          shift and go to state 134

state 86

    (93) metodos -> MEDIAN OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 135
    empty                          shift and go to state 134

state 87

    (94) metodos -> MODE OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 136
    empty                          shift and go to state 134

state 88

    (95) metodos -> STDV OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 137
    empty                          shift and go to state 134

state 89

    (96) metodos -> KMEANS OPAREN . varcte COMMA mmmfunc CPAREN SCOLON
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 138

state 90

    (97) metodos -> DERL OPAREN . expfunc CPAREN SCOLON
    (106) expfunc -> . ID COMMA ID COMMA ID
    (107) expfunc -> . varcte COMMA varcte COMMA varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 140
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expfunc                        shift and go to state 139
    varcte                         shift and go to state 141

state 91

    (98) metodos -> DBERN OPAREN . expfunc CPAREN SCOLON
    (106) expfunc -> . ID COMMA ID COMMA ID
    (107) expfunc -> . varcte COMMA varcte COMMA varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 140
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expfunc                        shift and go to state 142
    varcte                         shift and go to state 141

state 92

    (99) metodos -> DPOI OPAREN . expfunc2 CPAREN SCOLON
    (108) expfunc2 -> . ID COMMA ID
    (109) expfunc2 -> . varcte COMMA varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 144
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expfunc2                       shift and go to state 143
    varcte                         shift and go to state 145

state 93

    (100) metodos -> TRANSPOSE OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 146
    empty                          shift and go to state 134

state 94

    (101) metodos -> INVERSE OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 147
    empty                          shift and go to state 134

state 95

    (102) metodos -> ROTATE OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 148
    empty                          shift and go to state 134

state 96

    (103) metodos -> REF OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 149
    empty                          shift and go to state 134

state 97

    (104) metodos -> RREF OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 150
    empty                          shift and go to state 134

state 98

    (105) metodos -> MONT OPAREN . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 151
    empty                          shift and go to state 134

state 99

    (84) dwhile -> DO wn1 . wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON
    (87) wblock -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 153

    wblock                         shift and go to state 152

state 100

    (85) wn1 -> empty .

    OBRACKET        reduce using rule 85 (wn1 -> empty .)


state 101

    (14) modules -> FUNC ID COLON tipo . addfunction OPAREN modules2 CPAREN modules2 block
    (15) addfunction -> . empty
    (117) empty -> .

    OPAREN          reduce using rule 117 (empty -> .)

    addfunction                    shift and go to state 154
    empty                          shift and go to state 155

state 102

    (10) vars1 -> ID COLON tipo SCOLON . lugstat2
    (3) lugstat2 -> . vars
    (4) lugstat2 -> . empty
    (8) vars -> . VAR vars1
    (117) empty -> .

    VAR             shift and go to state 10
    FUNC            reduce using rule 117 (empty -> .)
    OBRACKET        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

    lugstat2                       shift and go to state 156
    vars                           shift and go to state 8
    empty                          shift and go to state 9

state 103

    (11) vars1 -> ID asign2 COLON tipo . SCOLON

    SCOLON          shift and go to state 157


state 104

    (12) vars1 -> ID asign2 COMMA vars1 .

    FUNC            reduce using rule 12 (vars1 -> ID asign2 COMMA vars1 .)
    OBRACKET        reduce using rule 12 (vars1 -> ID asign2 COMMA vars1 .)
    CPAREN          reduce using rule 12 (vars1 -> ID asign2 COMMA vars1 .)


state 105

    (41) asign2 -> LCOR expresion RCOR . asign3
    (43) asign3 -> . LCOR expresion RCOR
    (44) asign3 -> . LCOR varcte RCOR
    (45) asign3 -> . empty
    (117) empty -> .

    LCOR            shift and go to state 158
    COLON           reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    EQUALS          reduce using rule 117 (empty -> .)
    RCOR            reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    RELOP           reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    SCOLON          reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    NUMERIC         reduce using rule 117 (empty -> .)
    NUMBER          reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    asign3                         shift and go to state 159
    empty                          shift and go to state 160

state 106

    (71) expresion -> expresion RELOP . exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    exp                            shift and go to state 161
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 107

    (42) asign2 -> LCOR varcte RCOR . asign3
    (43) asign3 -> . LCOR expresion RCOR
    (44) asign3 -> . LCOR varcte RCOR
    (45) asign3 -> . empty
    (117) empty -> .

    LCOR            shift and go to state 158
    COLON           reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    EQUALS          reduce using rule 117 (empty -> .)
    RCOR            reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    RELOP           reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    SCOLON          reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    NUMERIC         reduce using rule 117 (empty -> .)
    NUMBER          reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    asign3                         shift and go to state 162
    empty                          shift and go to state 160

state 108

    (81) varcte -> ID asign2 .

    RCOR            reduce using rule 81 (varcte -> ID asign2 .)
    MULT            reduce using rule 81 (varcte -> ID asign2 .)
    DIV             reduce using rule 81 (varcte -> ID asign2 .)
    PLUS            reduce using rule 81 (varcte -> ID asign2 .)
    MINUS           reduce using rule 81 (varcte -> ID asign2 .)
    RELOP           reduce using rule 81 (varcte -> ID asign2 .)
    CPAREN          reduce using rule 81 (varcte -> ID asign2 .)
    COMMA           reduce using rule 81 (varcte -> ID asign2 .)
    SCOLON          reduce using rule 81 (varcte -> ID asign2 .)
    AND             reduce using rule 81 (varcte -> ID asign2 .)
    OR              reduce using rule 81 (varcte -> ID asign2 .)
    OPAREN          reduce using rule 81 (varcte -> ID asign2 .)
    ID              reduce using rule 81 (varcte -> ID asign2 .)
    NUMERIC         reduce using rule 81 (varcte -> ID asign2 .)
    NUMBER          reduce using rule 81 (varcte -> ID asign2 .)
    CBRACKET        reduce using rule 81 (varcte -> ID asign2 .)


state 109

    (73) exp -> termino PLUS . exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    termino                        shift and go to state 73
    exp                            shift and go to state 163
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 110

    (74) exp -> termino MINUS . exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    termino                        shift and go to state 73
    exp                            shift and go to state 164
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 111

    (76) termino -> factor MULT . termino
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    factor                         shift and go to state 74
    termino                        shift and go to state 165
    varcte                         shift and go to state 114

state 112

    (77) termino -> factor DIV . termino
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    factor                         shift and go to state 74
    termino                        shift and go to state 166
    varcte                         shift and go to state 114

state 113

    (78) factor -> OPAREN expresion . CPAREN
    (71) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 167
    RELOP           shift and go to state 106


state 114

    (79) factor -> varcte .

    MULT            reduce using rule 79 (factor -> varcte .)
    DIV             reduce using rule 79 (factor -> varcte .)
    PLUS            reduce using rule 79 (factor -> varcte .)
    MINUS           reduce using rule 79 (factor -> varcte .)
    CPAREN          reduce using rule 79 (factor -> varcte .)
    RELOP           reduce using rule 79 (factor -> varcte .)
    SCOLON          reduce using rule 79 (factor -> varcte .)
    RCOR            reduce using rule 79 (factor -> varcte .)
    AND             reduce using rule 79 (factor -> varcte .)
    OR              reduce using rule 79 (factor -> varcte .)
    OPAREN          reduce using rule 79 (factor -> varcte .)
    ID              reduce using rule 79 (factor -> varcte .)
    NUMERIC         reduce using rule 79 (factor -> varcte .)
    NUMBER          reduce using rule 79 (factor -> varcte .)


state 115

    (36) asign -> ID EQUALS ID . SCOLON
    (37) asign -> ID EQUALS ID . asign2 SCOLON
    (80) varcte -> ID .
    (81) varcte -> ID . asign2
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 168
    MULT            reduce using rule 80 (varcte -> ID .)
    DIV             reduce using rule 80 (varcte -> ID .)
    PLUS            reduce using rule 80 (varcte -> ID .)
    MINUS           reduce using rule 80 (varcte -> ID .)
    RELOP           reduce using rule 80 (varcte -> ID .)
    LCOR            shift and go to state 24

  ! SCOLON          [ reduce using rule 80 (varcte -> ID .) ]

    asign2                         shift and go to state 169

state 116

    (35) asign -> ID EQUALS expresion . SCOLON
    (71) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 170
    RELOP           shift and go to state 106


state 117

    (38) asign -> ID asign2 EQUALS . ID SCOLON
    (39) asign -> ID asign2 EQUALS . expresion SCOLON
    (40) asign -> ID asign2 EQUALS . ID asign2 SCOLON
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 171
    OPAREN          shift and go to state 75
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 172
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 118

    (55) cond -> IF OPAREN expresion . cn1 CPAREN block SCOLON cn2
    (56) cond -> IF OPAREN expresion . cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2
    (71) expresion -> expresion . RELOP exp
    (57) cn1 -> . empty
    (117) empty -> .

    RELOP           shift and go to state 106
    CPAREN          reduce using rule 117 (empty -> .)

    cn1                            shift and go to state 173
    empty                          shift and go to state 174

state 119

    (46) escrt -> PRINT OPAREN expresion . CPAREN SCOLON
    (71) expresion -> expresion . RELOP exp

    CPAREN          shift and go to state 175
    RELOP           shift and go to state 106


state 120

    (47) escrt -> PRINT OPAREN CPAREN . SCOLON

    SCOLON          shift and go to state 176


state 121

    (48) escrt -> PRINT OPAREN ID . escrt2 CPAREN SCOLON
    (80) varcte -> ID .
    (81) varcte -> ID . asign2
    (50) escrt2 -> . COMMA escrt3
    (51) escrt2 -> . empty
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3
    (117) empty -> .

  ! reduce/reduce conflict for CPAREN resolved using rule 80 (varcte -> ID .)
    MULT            reduce using rule 80 (varcte -> ID .)
    DIV             reduce using rule 80 (varcte -> ID .)
    PLUS            reduce using rule 80 (varcte -> ID .)
    MINUS           reduce using rule 80 (varcte -> ID .)
    CPAREN          reduce using rule 80 (varcte -> ID .)
    RELOP           reduce using rule 80 (varcte -> ID .)
    COMMA           shift and go to state 178
    LCOR            shift and go to state 24

  ! CPAREN          [ reduce using rule 117 (empty -> .) ]

    escrt2                         shift and go to state 177
    asign2                         shift and go to state 108
    empty                          shift and go to state 179

state 122

    (49) escrt -> PRINT OPAREN STRING . CPAREN SCOLON

    CPAREN          shift and go to state 180


state 123

    (62) plot -> PLOT OPAREN xyfunc . CPAREN SCOLON

    CPAREN          shift and go to state 181


state 124

    (63) plot -> PLOT OPAREN plot2 . CPAREN SCOLON

    CPAREN          shift and go to state 182


state 125

    (67) xyfunc -> FX . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 183


state 126

    (68) xyfunc -> FY . EQUALS exp SCOLON xyfunc

    EQUALS          shift and go to state 184


state 127

    (69) xyfunc -> empty .
    (66) plot2 -> empty .

  ! reduce/reduce conflict for CPAREN resolved using rule 66 (plot2 -> empty .)
    CPAREN          reduce using rule 66 (plot2 -> empty .)

  ! CPAREN          [ reduce using rule 69 (xyfunc -> empty .) ]


state 128

    (64) plot2 -> LCOR . varcte COMMA varcte RCOR
    (65) plot2 -> LCOR . varcte COMMA varcte RCOR COMMA plot2
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 185

state 129

    (60) count -> COUNT OPAREN ID . COMMA varcte COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 186


state 130

    (61) countif -> COUNTIF OPAREN ID . COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 187


state 131

    (92) metodos -> MEAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 188


state 132

    (110) mmmfunc -> ID .

    CPAREN          reduce using rule 110 (mmmfunc -> ID .)


state 133

    (111) mmmfunc -> OBRACKET . mmmarray CBRACKET
    (112) mmmfunc -> OBRACKET . mmmarray CBRACKET COMMA mmmfunc
    (114) mmmarray -> . varcte
    (115) mmmarray -> . varcte COMMA mmmarray
    (116) mmmarray -> . empty
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER
    (117) empty -> .

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72
    CBRACKET        reduce using rule 117 (empty -> .)

    mmmarray                       shift and go to state 189
    varcte                         shift and go to state 190
    empty                          shift and go to state 191

state 134

    (113) mmmfunc -> empty .

    CPAREN          reduce using rule 113 (mmmfunc -> empty .)


state 135

    (93) metodos -> MEDIAN OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 192


state 136

    (94) metodos -> MODE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 193


state 137

    (95) metodos -> STDV OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 194


state 138

    (96) metodos -> KMEANS OPAREN varcte . COMMA mmmfunc CPAREN SCOLON

    COMMA           shift and go to state 195


state 139

    (97) metodos -> DERL OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 196


state 140

    (106) expfunc -> ID . COMMA ID COMMA ID
    (80) varcte -> ID .
    (81) varcte -> ID . asign2
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 197
    LCOR            shift and go to state 24

  ! COMMA           [ reduce using rule 80 (varcte -> ID .) ]

    asign2                         shift and go to state 108

state 141

    (107) expfunc -> varcte . COMMA varcte COMMA varcte

    COMMA           shift and go to state 198


state 142

    (98) metodos -> DBERN OPAREN expfunc . CPAREN SCOLON

    CPAREN          shift and go to state 199


state 143

    (99) metodos -> DPOI OPAREN expfunc2 . CPAREN SCOLON

    CPAREN          shift and go to state 200


state 144

    (108) expfunc2 -> ID . COMMA ID
    (80) varcte -> ID .
    (81) varcte -> ID . asign2
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 201
    LCOR            shift and go to state 24

  ! COMMA           [ reduce using rule 80 (varcte -> ID .) ]

    asign2                         shift and go to state 108

state 145

    (109) expfunc2 -> varcte . COMMA varcte

    COMMA           shift and go to state 202


state 146

    (100) metodos -> TRANSPOSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 203


state 147

    (101) metodos -> INVERSE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 204


state 148

    (102) metodos -> ROTATE OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 205


state 149

    (103) metodos -> REF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 206


state 150

    (104) metodos -> RREF OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 207


state 151

    (105) metodos -> MONT OPAREN mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 208


state 152

    (84) dwhile -> DO wn1 wblock . WHILE OPAREN dwhileconds CPAREN wn2 SCOLON

    WHILE           shift and go to state 209


state 153

    (87) wblock -> OBRACKET . block2 CBRACKET
    (19) block2 -> . estatuto
    (20) block2 -> . estatuto block2
    (21) block2 -> . empty
    (27) estatuto -> . asign
    (28) estatuto -> . cond
    (29) estatuto -> . escrt
    (30) estatuto -> . plot
    (31) estatuto -> . count
    (32) estatuto -> . countif
    (33) estatuto -> . metodos
    (34) estatuto -> . dwhile
    (117) empty -> .
    (35) asign -> . ID EQUALS expresion SCOLON
    (36) asign -> . ID EQUALS ID SCOLON
    (37) asign -> . ID EQUALS ID asign2 SCOLON
    (38) asign -> . ID asign2 EQUALS ID SCOLON
    (39) asign -> . ID asign2 EQUALS expresion SCOLON
    (40) asign -> . ID asign2 EQUALS ID asign2 SCOLON
    (55) cond -> . IF OPAREN expresion cn1 CPAREN block SCOLON cn2
    (56) cond -> . IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2
    (46) escrt -> . PRINT OPAREN expresion CPAREN SCOLON
    (47) escrt -> . PRINT OPAREN CPAREN SCOLON
    (48) escrt -> . PRINT OPAREN ID escrt2 CPAREN SCOLON
    (49) escrt -> . PRINT OPAREN STRING CPAREN SCOLON
    (62) plot -> . PLOT OPAREN xyfunc CPAREN SCOLON
    (63) plot -> . PLOT OPAREN plot2 CPAREN SCOLON
    (60) count -> . COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON
    (61) countif -> . COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON
    (92) metodos -> . MEAN OPAREN mmmfunc CPAREN SCOLON
    (93) metodos -> . MEDIAN OPAREN mmmfunc CPAREN SCOLON
    (94) metodos -> . MODE OPAREN mmmfunc CPAREN SCOLON
    (95) metodos -> . STDV OPAREN mmmfunc CPAREN SCOLON
    (96) metodos -> . KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON
    (97) metodos -> . DERL OPAREN expfunc CPAREN SCOLON
    (98) metodos -> . DBERN OPAREN expfunc CPAREN SCOLON
    (99) metodos -> . DPOI OPAREN expfunc2 CPAREN SCOLON
    (100) metodos -> . TRANSPOSE OPAREN mmmfunc CPAREN SCOLON
    (101) metodos -> . INVERSE OPAREN mmmfunc CPAREN SCOLON
    (102) metodos -> . ROTATE OPAREN mmmfunc CPAREN SCOLON
    (103) metodos -> . REF OPAREN mmmfunc CPAREN SCOLON
    (104) metodos -> . RREF OPAREN mmmfunc CPAREN SCOLON
    (105) metodos -> . MONT OPAREN mmmfunc CPAREN SCOLON
    (84) dwhile -> . DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON

    CBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 36
    IF              shift and go to state 37
    PRINT           shift and go to state 38
    PLOT            shift and go to state 39
    COUNT           shift and go to state 40
    COUNTIF         shift and go to state 41
    MEAN            shift and go to state 42
    MEDIAN          shift and go to state 43
    MODE            shift and go to state 44
    STDV            shift and go to state 45
    KMEANS          shift and go to state 46
    DERL            shift and go to state 47
    DBERN           shift and go to state 48
    DPOI            shift and go to state 49
    TRANSPOSE       shift and go to state 50
    INVERSE         shift and go to state 51
    ROTATE          shift and go to state 52
    REF             shift and go to state 53
    RREF            shift and go to state 54
    MONT            shift and go to state 55
    DO              shift and go to state 56

    block2                         shift and go to state 210
    estatuto                       shift and go to state 26
    empty                          shift and go to state 27
    asign                          shift and go to state 28
    cond                           shift and go to state 29
    escrt                          shift and go to state 30
    plot                           shift and go to state 31
    count                          shift and go to state 32
    countif                        shift and go to state 33
    metodos                        shift and go to state 34
    dwhile                         shift and go to state 35

state 154

    (14) modules -> FUNC ID COLON tipo addfunction . OPAREN modules2 CPAREN modules2 block

    OPAREN          shift and go to state 211


state 155

    (15) addfunction -> empty .

    OPAREN          reduce using rule 15 (addfunction -> empty .)


state 156

    (10) vars1 -> ID COLON tipo SCOLON lugstat2 .

    FUNC            reduce using rule 10 (vars1 -> ID COLON tipo SCOLON lugstat2 .)
    OBRACKET        reduce using rule 10 (vars1 -> ID COLON tipo SCOLON lugstat2 .)
    CPAREN          reduce using rule 10 (vars1 -> ID COLON tipo SCOLON lugstat2 .)


state 157

    (11) vars1 -> ID asign2 COLON tipo SCOLON .

    FUNC            reduce using rule 11 (vars1 -> ID asign2 COLON tipo SCOLON .)
    OBRACKET        reduce using rule 11 (vars1 -> ID asign2 COLON tipo SCOLON .)
    CPAREN          reduce using rule 11 (vars1 -> ID asign2 COLON tipo SCOLON .)


state 158

    (43) asign3 -> LCOR . expresion RCOR
    (44) asign3 -> LCOR . varcte RCOR
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72
    OPAREN          shift and go to state 75

    expresion                      shift and go to state 212
    varcte                         shift and go to state 213
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74

state 159

    (41) asign2 -> LCOR expresion RCOR asign3 .

    COLON           reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    COMMA           reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    EQUALS          reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    RCOR            reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    MULT            reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    DIV             reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    PLUS            reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    MINUS           reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    RELOP           reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    CPAREN          reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    SCOLON          reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    AND             reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    OR              reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    OPAREN          reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    ID              reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    NUMERIC         reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    NUMBER          reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)
    CBRACKET        reduce using rule 41 (asign2 -> LCOR expresion RCOR asign3 .)


state 160

    (45) asign3 -> empty .

    COLON           reduce using rule 45 (asign3 -> empty .)
    COMMA           reduce using rule 45 (asign3 -> empty .)
    EQUALS          reduce using rule 45 (asign3 -> empty .)
    RCOR            reduce using rule 45 (asign3 -> empty .)
    MULT            reduce using rule 45 (asign3 -> empty .)
    DIV             reduce using rule 45 (asign3 -> empty .)
    PLUS            reduce using rule 45 (asign3 -> empty .)
    MINUS           reduce using rule 45 (asign3 -> empty .)
    RELOP           reduce using rule 45 (asign3 -> empty .)
    CPAREN          reduce using rule 45 (asign3 -> empty .)
    SCOLON          reduce using rule 45 (asign3 -> empty .)
    AND             reduce using rule 45 (asign3 -> empty .)
    OR              reduce using rule 45 (asign3 -> empty .)
    OPAREN          reduce using rule 45 (asign3 -> empty .)
    ID              reduce using rule 45 (asign3 -> empty .)
    NUMERIC         reduce using rule 45 (asign3 -> empty .)
    NUMBER          reduce using rule 45 (asign3 -> empty .)
    CBRACKET        reduce using rule 45 (asign3 -> empty .)


state 161

    (71) expresion -> expresion RELOP exp .

    RCOR            reduce using rule 71 (expresion -> expresion RELOP exp .)
    RELOP           reduce using rule 71 (expresion -> expresion RELOP exp .)
    CPAREN          reduce using rule 71 (expresion -> expresion RELOP exp .)
    SCOLON          reduce using rule 71 (expresion -> expresion RELOP exp .)
    AND             reduce using rule 71 (expresion -> expresion RELOP exp .)
    OR              reduce using rule 71 (expresion -> expresion RELOP exp .)
    OPAREN          reduce using rule 71 (expresion -> expresion RELOP exp .)
    ID              reduce using rule 71 (expresion -> expresion RELOP exp .)
    NUMERIC         reduce using rule 71 (expresion -> expresion RELOP exp .)
    NUMBER          reduce using rule 71 (expresion -> expresion RELOP exp .)


state 162

    (42) asign2 -> LCOR varcte RCOR asign3 .

    COLON           reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    COMMA           reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    EQUALS          reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    RCOR            reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    MULT            reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    DIV             reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    PLUS            reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    MINUS           reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    RELOP           reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    CPAREN          reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    SCOLON          reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    AND             reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    OR              reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    OPAREN          reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    ID              reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    NUMERIC         reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    NUMBER          reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)
    CBRACKET        reduce using rule 42 (asign2 -> LCOR varcte RCOR asign3 .)


state 163

    (73) exp -> termino PLUS exp .

    RCOR            reduce using rule 73 (exp -> termino PLUS exp .)
    RELOP           reduce using rule 73 (exp -> termino PLUS exp .)
    CPAREN          reduce using rule 73 (exp -> termino PLUS exp .)
    SCOLON          reduce using rule 73 (exp -> termino PLUS exp .)
    AND             reduce using rule 73 (exp -> termino PLUS exp .)
    OR              reduce using rule 73 (exp -> termino PLUS exp .)
    OPAREN          reduce using rule 73 (exp -> termino PLUS exp .)
    ID              reduce using rule 73 (exp -> termino PLUS exp .)
    NUMERIC         reduce using rule 73 (exp -> termino PLUS exp .)
    NUMBER          reduce using rule 73 (exp -> termino PLUS exp .)


state 164

    (74) exp -> termino MINUS exp .

    RCOR            reduce using rule 74 (exp -> termino MINUS exp .)
    RELOP           reduce using rule 74 (exp -> termino MINUS exp .)
    CPAREN          reduce using rule 74 (exp -> termino MINUS exp .)
    SCOLON          reduce using rule 74 (exp -> termino MINUS exp .)
    AND             reduce using rule 74 (exp -> termino MINUS exp .)
    OR              reduce using rule 74 (exp -> termino MINUS exp .)
    OPAREN          reduce using rule 74 (exp -> termino MINUS exp .)
    ID              reduce using rule 74 (exp -> termino MINUS exp .)
    NUMERIC         reduce using rule 74 (exp -> termino MINUS exp .)
    NUMBER          reduce using rule 74 (exp -> termino MINUS exp .)


state 165

    (76) termino -> factor MULT termino .

    PLUS            reduce using rule 76 (termino -> factor MULT termino .)
    MINUS           reduce using rule 76 (termino -> factor MULT termino .)
    RCOR            reduce using rule 76 (termino -> factor MULT termino .)
    RELOP           reduce using rule 76 (termino -> factor MULT termino .)
    CPAREN          reduce using rule 76 (termino -> factor MULT termino .)
    SCOLON          reduce using rule 76 (termino -> factor MULT termino .)
    AND             reduce using rule 76 (termino -> factor MULT termino .)
    OR              reduce using rule 76 (termino -> factor MULT termino .)
    OPAREN          reduce using rule 76 (termino -> factor MULT termino .)
    ID              reduce using rule 76 (termino -> factor MULT termino .)
    NUMERIC         reduce using rule 76 (termino -> factor MULT termino .)
    NUMBER          reduce using rule 76 (termino -> factor MULT termino .)


state 166

    (77) termino -> factor DIV termino .

    PLUS            reduce using rule 77 (termino -> factor DIV termino .)
    MINUS           reduce using rule 77 (termino -> factor DIV termino .)
    RCOR            reduce using rule 77 (termino -> factor DIV termino .)
    RELOP           reduce using rule 77 (termino -> factor DIV termino .)
    CPAREN          reduce using rule 77 (termino -> factor DIV termino .)
    SCOLON          reduce using rule 77 (termino -> factor DIV termino .)
    AND             reduce using rule 77 (termino -> factor DIV termino .)
    OR              reduce using rule 77 (termino -> factor DIV termino .)
    OPAREN          reduce using rule 77 (termino -> factor DIV termino .)
    ID              reduce using rule 77 (termino -> factor DIV termino .)
    NUMERIC         reduce using rule 77 (termino -> factor DIV termino .)
    NUMBER          reduce using rule 77 (termino -> factor DIV termino .)


state 167

    (78) factor -> OPAREN expresion CPAREN .

    MULT            reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    DIV             reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    RCOR            reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    RELOP           reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    SCOLON          reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    AND             reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    OR              reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    OPAREN          reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    ID              reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    NUMERIC         reduce using rule 78 (factor -> OPAREN expresion CPAREN .)
    NUMBER          reduce using rule 78 (factor -> OPAREN expresion CPAREN .)


state 168

    (36) asign -> ID EQUALS ID SCOLON .

    ID              reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    IF              reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    PRINT           reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    PLOT            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    COUNT           reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    MEAN            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    MODE            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    STDV            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    KMEANS          reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    DERL            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    DBERN           reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    DPOI            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    INVERSE         reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    ROTATE          reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    REF             reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    RREF            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    MONT            reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    DO              reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 36 (asign -> ID EQUALS ID SCOLON .)


state 169

    (37) asign -> ID EQUALS ID asign2 . SCOLON
    (81) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 214
    MULT            reduce using rule 81 (varcte -> ID asign2 .)
    DIV             reduce using rule 81 (varcte -> ID asign2 .)
    PLUS            reduce using rule 81 (varcte -> ID asign2 .)
    MINUS           reduce using rule 81 (varcte -> ID asign2 .)
    RELOP           reduce using rule 81 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 81 (varcte -> ID asign2 .) ]


state 170

    (35) asign -> ID EQUALS expresion SCOLON .

    ID              reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    IF              reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    PRINT           reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    PLOT            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    COUNT           reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    MEAN            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    MODE            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    STDV            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    DERL            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    DBERN           reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    DPOI            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    REF             reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    RREF            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    MONT            reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    DO              reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 35 (asign -> ID EQUALS expresion SCOLON .)


state 171

    (38) asign -> ID asign2 EQUALS ID . SCOLON
    (40) asign -> ID asign2 EQUALS ID . asign2 SCOLON
    (80) varcte -> ID .
    (81) varcte -> ID . asign2
    (41) asign2 -> . LCOR expresion RCOR asign3
    (42) asign2 -> . LCOR varcte RCOR asign3

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 216
    MULT            reduce using rule 80 (varcte -> ID .)
    DIV             reduce using rule 80 (varcte -> ID .)
    PLUS            reduce using rule 80 (varcte -> ID .)
    MINUS           reduce using rule 80 (varcte -> ID .)
    RELOP           reduce using rule 80 (varcte -> ID .)
    LCOR            shift and go to state 24

  ! SCOLON          [ reduce using rule 80 (varcte -> ID .) ]

    asign2                         shift and go to state 215

state 172

    (39) asign -> ID asign2 EQUALS expresion . SCOLON
    (71) expresion -> expresion . RELOP exp

    SCOLON          shift and go to state 217
    RELOP           shift and go to state 106


state 173

    (55) cond -> IF OPAREN expresion cn1 . CPAREN block SCOLON cn2
    (56) cond -> IF OPAREN expresion cn1 . CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2

    CPAREN          shift and go to state 218


state 174

    (57) cn1 -> empty .

    CPAREN          reduce using rule 57 (cn1 -> empty .)


state 175

    (46) escrt -> PRINT OPAREN expresion CPAREN . SCOLON

    SCOLON          shift and go to state 219


state 176

    (47) escrt -> PRINT OPAREN CPAREN SCOLON .

    ID              reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    IF              reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PRINT           reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    PLOT            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNT           reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    COUNTIF         reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEAN            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MEDIAN          reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MODE            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    STDV            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    KMEANS          reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DERL            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DBERN           reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DPOI            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    INVERSE         reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    ROTATE          reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    REF             reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    RREF            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    MONT            reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    DO              reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)
    CBRACKET        reduce using rule 47 (escrt -> PRINT OPAREN CPAREN SCOLON .)


state 177

    (48) escrt -> PRINT OPAREN ID escrt2 . CPAREN SCOLON

    CPAREN          shift and go to state 220


state 178

    (50) escrt2 -> COMMA . escrt3
    (52) escrt3 -> . ID escrt2
    (53) escrt3 -> . ID
    (54) escrt3 -> . STRING escrt2 escrt2

    ID              shift and go to state 222
    STRING          shift and go to state 223

    escrt3                         shift and go to state 221

state 179

    (51) escrt2 -> empty .

    CPAREN          reduce using rule 51 (escrt2 -> empty .)
    COMMA           reduce using rule 51 (escrt2 -> empty .)


state 180

    (49) escrt -> PRINT OPAREN STRING CPAREN . SCOLON

    SCOLON          shift and go to state 224


state 181

    (62) plot -> PLOT OPAREN xyfunc CPAREN . SCOLON

    SCOLON          shift and go to state 225


state 182

    (63) plot -> PLOT OPAREN plot2 CPAREN . SCOLON

    SCOLON          shift and go to state 226


state 183

    (67) xyfunc -> FX EQUALS . exp SCOLON xyfunc
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    exp                            shift and go to state 227
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 184

    (68) xyfunc -> FY EQUALS . exp SCOLON xyfunc
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    exp                            shift and go to state 228
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 185

    (64) plot2 -> LCOR varcte . COMMA varcte RCOR
    (65) plot2 -> LCOR varcte . COMMA varcte RCOR COMMA plot2

    COMMA           shift and go to state 229


state 186

    (60) count -> COUNT OPAREN ID COMMA . varcte COMMA varcte CPAREN SCOLON
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 230

state 187

    (61) countif -> COUNTIF OPAREN ID COMMA . varcte COMMA varcte COMMA cond CPAREN SCOLON
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 231

state 188

    (92) metodos -> MEAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 232


state 189

    (111) mmmfunc -> OBRACKET mmmarray . CBRACKET
    (112) mmmfunc -> OBRACKET mmmarray . CBRACKET COMMA mmmfunc

    CBRACKET        shift and go to state 233


state 190

    (114) mmmarray -> varcte .
    (115) mmmarray -> varcte . COMMA mmmarray

    CBRACKET        reduce using rule 114 (mmmarray -> varcte .)
    COMMA           shift and go to state 234


state 191

    (116) mmmarray -> empty .

    CBRACKET        reduce using rule 116 (mmmarray -> empty .)


state 192

    (93) metodos -> MEDIAN OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 235


state 193

    (94) metodos -> MODE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 236


state 194

    (95) metodos -> STDV OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 237


state 195

    (96) metodos -> KMEANS OPAREN varcte COMMA . mmmfunc CPAREN SCOLON
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 238
    empty                          shift and go to state 134

state 196

    (97) metodos -> DERL OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 239


state 197

    (106) expfunc -> ID COMMA . ID COMMA ID

    ID              shift and go to state 240


state 198

    (107) expfunc -> varcte COMMA . varcte COMMA varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 241

state 199

    (98) metodos -> DBERN OPAREN expfunc CPAREN . SCOLON

    SCOLON          shift and go to state 242


state 200

    (99) metodos -> DPOI OPAREN expfunc2 CPAREN . SCOLON

    SCOLON          shift and go to state 243


state 201

    (108) expfunc2 -> ID COMMA . ID

    ID              shift and go to state 244


state 202

    (109) expfunc2 -> varcte COMMA . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 245

state 203

    (100) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 246


state 204

    (101) metodos -> INVERSE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 247


state 205

    (102) metodos -> ROTATE OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 248


state 206

    (103) metodos -> REF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 249


state 207

    (104) metodos -> RREF OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 250


state 208

    (105) metodos -> MONT OPAREN mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 251


state 209

    (84) dwhile -> DO wn1 wblock WHILE . OPAREN dwhileconds CPAREN wn2 SCOLON

    OPAREN          shift and go to state 252


state 210

    (87) wblock -> OBRACKET block2 . CBRACKET

    CBRACKET        shift and go to state 253


state 211

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN . modules2 CPAREN modules2 block
    (16) modules2 -> . vars
    (17) modules2 -> . empty
    (8) vars -> . VAR vars1
    (117) empty -> .

    VAR             shift and go to state 10
    CPAREN          reduce using rule 117 (empty -> .)

    modules2                       shift and go to state 254
    vars                           shift and go to state 255
    empty                          shift and go to state 256

state 212

    (43) asign3 -> LCOR expresion . RCOR
    (71) expresion -> expresion . RELOP exp

    RCOR            shift and go to state 257
    RELOP           shift and go to state 106


state 213

    (44) asign3 -> LCOR varcte . RCOR
    (79) factor -> varcte .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 258
    MULT            reduce using rule 79 (factor -> varcte .)
    DIV             reduce using rule 79 (factor -> varcte .)
    PLUS            reduce using rule 79 (factor -> varcte .)
    MINUS           reduce using rule 79 (factor -> varcte .)
    RELOP           reduce using rule 79 (factor -> varcte .)

  ! RCOR            [ reduce using rule 79 (factor -> varcte .) ]


state 214

    (37) asign -> ID EQUALS ID asign2 SCOLON .

    ID              reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    DO              reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 37 (asign -> ID EQUALS ID asign2 SCOLON .)


state 215

    (40) asign -> ID asign2 EQUALS ID asign2 . SCOLON
    (81) varcte -> ID asign2 .

  ! shift/reduce conflict for SCOLON resolved as shift
    SCOLON          shift and go to state 259
    MULT            reduce using rule 81 (varcte -> ID asign2 .)
    DIV             reduce using rule 81 (varcte -> ID asign2 .)
    PLUS            reduce using rule 81 (varcte -> ID asign2 .)
    MINUS           reduce using rule 81 (varcte -> ID asign2 .)
    RELOP           reduce using rule 81 (varcte -> ID asign2 .)

  ! SCOLON          [ reduce using rule 81 (varcte -> ID asign2 .) ]


state 216

    (38) asign -> ID asign2 EQUALS ID SCOLON .

    ID              reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    IF              reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    PRINT           reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    PLOT            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNT           reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    COUNTIF         reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEAN            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    MEDIAN          reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    MODE            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    STDV            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    KMEANS          reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    DERL            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    DBERN           reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    DPOI            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    TRANSPOSE       reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    INVERSE         reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    ROTATE          reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    REF             reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    RREF            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    MONT            reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    DO              reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)
    CBRACKET        reduce using rule 38 (asign -> ID asign2 EQUALS ID SCOLON .)


state 217

    (39) asign -> ID asign2 EQUALS expresion SCOLON .

    ID              reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    IF              reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PRINT           reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    PLOT            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNT           reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    COUNTIF         reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEAN            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MEDIAN          reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MODE            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    STDV            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    KMEANS          reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DERL            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DBERN           reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DPOI            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    TRANSPOSE       reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    INVERSE         reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    ROTATE          reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    REF             reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    RREF            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    MONT            reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    DO              reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)
    CBRACKET        reduce using rule 39 (asign -> ID asign2 EQUALS expresion SCOLON .)


state 218

    (55) cond -> IF OPAREN expresion cn1 CPAREN . block SCOLON cn2
    (56) cond -> IF OPAREN expresion cn1 CPAREN . block ELSE cn3 cn3 cn3 block SCOLON cn2
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 260

state 219

    (46) escrt -> PRINT OPAREN expresion CPAREN SCOLON .

    ID              reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    IF              reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PRINT           reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    PLOT            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNT           reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    COUNTIF         reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEAN            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MEDIAN          reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MODE            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    STDV            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    KMEANS          reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DERL            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DBERN           reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DPOI            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    INVERSE         reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    ROTATE          reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    REF             reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    RREF            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    MONT            reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    DO              reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)
    CBRACKET        reduce using rule 46 (escrt -> PRINT OPAREN expresion CPAREN SCOLON .)


state 220

    (48) escrt -> PRINT OPAREN ID escrt2 CPAREN . SCOLON

    SCOLON          shift and go to state 261


state 221

    (50) escrt2 -> COMMA escrt3 .

    CPAREN          reduce using rule 50 (escrt2 -> COMMA escrt3 .)
    COMMA           reduce using rule 50 (escrt2 -> COMMA escrt3 .)


state 222

    (52) escrt3 -> ID . escrt2
    (53) escrt3 -> ID .
    (50) escrt2 -> . COMMA escrt3
    (51) escrt2 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CPAREN resolved using rule 53 (escrt3 -> ID .)
  ! shift/reduce conflict for COMMA resolved as shift
    CPAREN          reduce using rule 53 (escrt3 -> ID .)
    COMMA           shift and go to state 178

  ! COMMA           [ reduce using rule 53 (escrt3 -> ID .) ]
  ! CPAREN          [ reduce using rule 117 (empty -> .) ]
  ! COMMA           [ reduce using rule 117 (empty -> .) ]

    escrt2                         shift and go to state 262
    empty                          shift and go to state 179

state 223

    (54) escrt3 -> STRING . escrt2 escrt2
    (50) escrt2 -> . COMMA escrt3
    (51) escrt2 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 178
    CPAREN          reduce using rule 117 (empty -> .)

  ! COMMA           [ reduce using rule 117 (empty -> .) ]

    escrt2                         shift and go to state 263
    empty                          shift and go to state 179

state 224

    (49) escrt -> PRINT OPAREN STRING CPAREN SCOLON .

    ID              reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    IF              reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PRINT           reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    PLOT            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNT           reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    COUNTIF         reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEAN            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MEDIAN          reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MODE            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    STDV            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    KMEANS          reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DERL            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DBERN           reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DPOI            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    INVERSE         reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    ROTATE          reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    REF             reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    RREF            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    MONT            reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    DO              reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)
    CBRACKET        reduce using rule 49 (escrt -> PRINT OPAREN STRING CPAREN SCOLON .)


state 225

    (62) plot -> PLOT OPAREN xyfunc CPAREN SCOLON .

    ID              reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    IF              reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PRINT           reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    PLOT            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNT           reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEAN            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MODE            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    STDV            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DERL            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DBERN           reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DPOI            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    REF             reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    RREF            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    MONT            reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    DO              reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 62 (plot -> PLOT OPAREN xyfunc CPAREN SCOLON .)


state 226

    (63) plot -> PLOT OPAREN plot2 CPAREN SCOLON .

    ID              reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    IF              reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PRINT           reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    PLOT            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNT           reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEAN            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MODE            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    STDV            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    KMEANS          reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DERL            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DBERN           reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DPOI            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    INVERSE         reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    ROTATE          reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    REF             reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    RREF            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    MONT            reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    DO              reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 63 (plot -> PLOT OPAREN plot2 CPAREN SCOLON .)


state 227

    (67) xyfunc -> FX EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 264


state 228

    (68) xyfunc -> FY EQUALS exp . SCOLON xyfunc

    SCOLON          shift and go to state 265


state 229

    (64) plot2 -> LCOR varcte COMMA . varcte RCOR
    (65) plot2 -> LCOR varcte COMMA . varcte RCOR COMMA plot2
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 266

state 230

    (60) count -> COUNT OPAREN ID COMMA varcte . COMMA varcte CPAREN SCOLON

    COMMA           shift and go to state 267


state 231

    (61) countif -> COUNTIF OPAREN ID COMMA varcte . COMMA varcte COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 268


state 232

    (92) metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 92 (metodos -> MEAN OPAREN mmmfunc CPAREN SCOLON .)


state 233

    (111) mmmfunc -> OBRACKET mmmarray CBRACKET .
    (112) mmmfunc -> OBRACKET mmmarray CBRACKET . COMMA mmmfunc

    CPAREN          reduce using rule 111 (mmmfunc -> OBRACKET mmmarray CBRACKET .)
    COMMA           shift and go to state 269


state 234

    (115) mmmarray -> varcte COMMA . mmmarray
    (114) mmmarray -> . varcte
    (115) mmmarray -> . varcte COMMA mmmarray
    (116) mmmarray -> . empty
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER
    (117) empty -> .

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72
    CBRACKET        reduce using rule 117 (empty -> .)

    varcte                         shift and go to state 190
    mmmarray                       shift and go to state 270
    empty                          shift and go to state 191

state 235

    (93) metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 93 (metodos -> MEDIAN OPAREN mmmfunc CPAREN SCOLON .)


state 236

    (94) metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 94 (metodos -> MODE OPAREN mmmfunc CPAREN SCOLON .)


state 237

    (95) metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 95 (metodos -> STDV OPAREN mmmfunc CPAREN SCOLON .)


state 238

    (96) metodos -> KMEANS OPAREN varcte COMMA mmmfunc . CPAREN SCOLON

    CPAREN          shift and go to state 271


state 239

    (97) metodos -> DERL OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    DO              reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 97 (metodos -> DERL OPAREN expfunc CPAREN SCOLON .)


state 240

    (106) expfunc -> ID COMMA ID . COMMA ID

    COMMA           shift and go to state 272


state 241

    (107) expfunc -> varcte COMMA varcte . COMMA varcte

    COMMA           shift and go to state 273


state 242

    (98) metodos -> DBERN OPAREN expfunc CPAREN SCOLON .

    ID              reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    IF              reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PRINT           reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    PLOT            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNT           reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEAN            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MODE            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    STDV            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DERL            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DBERN           reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DPOI            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    REF             reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    RREF            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    MONT            reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    DO              reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 98 (metodos -> DBERN OPAREN expfunc CPAREN SCOLON .)


state 243

    (99) metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .

    ID              reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    IF              reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PRINT           reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    PLOT            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNT           reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEAN            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MODE            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    STDV            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    KMEANS          reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DERL            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DBERN           reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DPOI            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    INVERSE         reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    ROTATE          reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    REF             reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    RREF            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    MONT            reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    DO              reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 99 (metodos -> DPOI OPAREN expfunc2 CPAREN SCOLON .)


state 244

    (108) expfunc2 -> ID COMMA ID .

    CPAREN          reduce using rule 108 (expfunc2 -> ID COMMA ID .)


state 245

    (109) expfunc2 -> varcte COMMA varcte .

    CPAREN          reduce using rule 109 (expfunc2 -> varcte COMMA varcte .)


state 246

    (100) metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 100 (metodos -> TRANSPOSE OPAREN mmmfunc CPAREN SCOLON .)


state 247

    (101) metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 101 (metodos -> INVERSE OPAREN mmmfunc CPAREN SCOLON .)


state 248

    (102) metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 102 (metodos -> ROTATE OPAREN mmmfunc CPAREN SCOLON .)


state 249

    (103) metodos -> REF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 103 (metodos -> REF OPAREN mmmfunc CPAREN SCOLON .)


state 250

    (104) metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 104 (metodos -> RREF OPAREN mmmfunc CPAREN SCOLON .)


state 251

    (105) metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .

    ID              reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 105 (metodos -> MONT OPAREN mmmfunc CPAREN SCOLON .)


state 252

    (84) dwhile -> DO wn1 wblock WHILE OPAREN . dwhileconds CPAREN wn2 SCOLON
    (88) dwhileconds -> . expresion dwhileconds
    (89) dwhileconds -> . expresion AND dwhileconds
    (90) dwhileconds -> . expresion OR dwhileconds
    (91) dwhileconds -> . empty
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (117) empty -> .
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    CPAREN          reduce using rule 117 (empty -> .)
    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    dwhileconds                    shift and go to state 274
    expresion                      shift and go to state 275
    empty                          shift and go to state 276
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 253

    (87) wblock -> OBRACKET block2 CBRACKET .

    WHILE           reduce using rule 87 (wblock -> OBRACKET block2 CBRACKET .)


state 254

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 . CPAREN modules2 block

    CPAREN          shift and go to state 277


state 255

    (16) modules2 -> vars .

    CPAREN          reduce using rule 16 (modules2 -> vars .)
    OBRACKET        reduce using rule 16 (modules2 -> vars .)


state 256

    (17) modules2 -> empty .

    CPAREN          reduce using rule 17 (modules2 -> empty .)
    OBRACKET        reduce using rule 17 (modules2 -> empty .)


state 257

    (43) asign3 -> LCOR expresion RCOR .

    COLON           reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    COMMA           reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    EQUALS          reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    RCOR            reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    MULT            reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    DIV             reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    PLUS            reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    MINUS           reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    RELOP           reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    CPAREN          reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    SCOLON          reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    AND             reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    OR              reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    OPAREN          reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    ID              reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    NUMERIC         reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    NUMBER          reduce using rule 43 (asign3 -> LCOR expresion RCOR .)
    CBRACKET        reduce using rule 43 (asign3 -> LCOR expresion RCOR .)


state 258

    (44) asign3 -> LCOR varcte RCOR .

    COLON           reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    COMMA           reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    EQUALS          reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    RCOR            reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    MULT            reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    DIV             reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    PLUS            reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    MINUS           reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    RELOP           reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    CPAREN          reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    SCOLON          reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    AND             reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    OR              reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    OPAREN          reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    ID              reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    NUMERIC         reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    NUMBER          reduce using rule 44 (asign3 -> LCOR varcte RCOR .)
    CBRACKET        reduce using rule 44 (asign3 -> LCOR varcte RCOR .)


state 259

    (40) asign -> ID asign2 EQUALS ID asign2 SCOLON .

    ID              reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    IF              reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PRINT           reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    PLOT            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNT           reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    COUNTIF         reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEAN            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MEDIAN          reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MODE            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    STDV            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    KMEANS          reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DERL            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DBERN           reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DPOI            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    TRANSPOSE       reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    INVERSE         reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    ROTATE          reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    REF             reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    RREF            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    MONT            reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    DO              reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)
    CBRACKET        reduce using rule 40 (asign -> ID asign2 EQUALS ID asign2 SCOLON .)


state 260

    (55) cond -> IF OPAREN expresion cn1 CPAREN block . SCOLON cn2
    (56) cond -> IF OPAREN expresion cn1 CPAREN block . ELSE cn3 cn3 cn3 block SCOLON cn2

    SCOLON          shift and go to state 278
    ELSE            shift and go to state 279


state 261

    (48) escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .

    ID              reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    IF              reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PRINT           reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    PLOT            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNT           reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    COUNTIF         reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEAN            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MEDIAN          reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MODE            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    STDV            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    KMEANS          reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DERL            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DBERN           reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DPOI            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    INVERSE         reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    ROTATE          reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    REF             reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    RREF            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    MONT            reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    DO              reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)
    CBRACKET        reduce using rule 48 (escrt -> PRINT OPAREN ID escrt2 CPAREN SCOLON .)


state 262

    (52) escrt3 -> ID escrt2 .

    CPAREN          reduce using rule 52 (escrt3 -> ID escrt2 .)
    COMMA           reduce using rule 52 (escrt3 -> ID escrt2 .)


state 263

    (54) escrt3 -> STRING escrt2 . escrt2
    (50) escrt2 -> . COMMA escrt3
    (51) escrt2 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 178
    CPAREN          reduce using rule 117 (empty -> .)

  ! COMMA           [ reduce using rule 117 (empty -> .) ]

    escrt2                         shift and go to state 280
    empty                          shift and go to state 179

state 264

    (67) xyfunc -> FX EQUALS exp SCOLON . xyfunc
    (67) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (68) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (69) xyfunc -> . empty
    (117) empty -> .

    FX              shift and go to state 125
    FY              shift and go to state 126
    CPAREN          reduce using rule 117 (empty -> .)

    xyfunc                         shift and go to state 281
    empty                          shift and go to state 282

state 265

    (68) xyfunc -> FY EQUALS exp SCOLON . xyfunc
    (67) xyfunc -> . FX EQUALS exp SCOLON xyfunc
    (68) xyfunc -> . FY EQUALS exp SCOLON xyfunc
    (69) xyfunc -> . empty
    (117) empty -> .

    FX              shift and go to state 125
    FY              shift and go to state 126
    CPAREN          reduce using rule 117 (empty -> .)

    xyfunc                         shift and go to state 283
    empty                          shift and go to state 282

state 266

    (64) plot2 -> LCOR varcte COMMA varcte . RCOR
    (65) plot2 -> LCOR varcte COMMA varcte . RCOR COMMA plot2

    RCOR            shift and go to state 284


state 267

    (60) count -> COUNT OPAREN ID COMMA varcte COMMA . varcte CPAREN SCOLON
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 285

state 268

    (61) countif -> COUNTIF OPAREN ID COMMA varcte COMMA . varcte COMMA cond CPAREN SCOLON
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 286

state 269

    (112) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA . mmmfunc
    (110) mmmfunc -> . ID
    (111) mmmfunc -> . OBRACKET mmmarray CBRACKET
    (112) mmmfunc -> . OBRACKET mmmarray CBRACKET COMMA mmmfunc
    (113) mmmfunc -> . empty
    (117) empty -> .

    ID              shift and go to state 132
    OBRACKET        shift and go to state 133
    CPAREN          reduce using rule 117 (empty -> .)

    mmmfunc                        shift and go to state 287
    empty                          shift and go to state 134

state 270

    (115) mmmarray -> varcte COMMA mmmarray .

    CBRACKET        reduce using rule 115 (mmmarray -> varcte COMMA mmmarray .)


state 271

    (96) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN . SCOLON

    SCOLON          shift and go to state 288


state 272

    (106) expfunc -> ID COMMA ID COMMA . ID

    ID              shift and go to state 289


state 273

    (107) expfunc -> varcte COMMA varcte COMMA . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    varcte                         shift and go to state 290

state 274

    (84) dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds . CPAREN wn2 SCOLON

    CPAREN          shift and go to state 291


state 275

    (88) dwhileconds -> expresion . dwhileconds
    (89) dwhileconds -> expresion . AND dwhileconds
    (90) dwhileconds -> expresion . OR dwhileconds
    (71) expresion -> expresion . RELOP exp
    (88) dwhileconds -> . expresion dwhileconds
    (89) dwhileconds -> . expresion AND dwhileconds
    (90) dwhileconds -> . expresion OR dwhileconds
    (91) dwhileconds -> . empty
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (117) empty -> .
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    AND             shift and go to state 293
    OR              shift and go to state 294
    RELOP           shift and go to state 106
    CPAREN          reduce using rule 117 (empty -> .)
    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 275
    dwhileconds                    shift and go to state 292
    exp                            shift and go to state 69
    empty                          shift and go to state 276
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 276

    (91) dwhileconds -> empty .

    CPAREN          reduce using rule 91 (dwhileconds -> empty .)


state 277

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN . modules2 block
    (16) modules2 -> . vars
    (17) modules2 -> . empty
    (8) vars -> . VAR vars1
    (117) empty -> .

    VAR             shift and go to state 10
    OBRACKET        reduce using rule 117 (empty -> .)

    modules2                       shift and go to state 295
    vars                           shift and go to state 255
    empty                          shift and go to state 256

state 278

    (55) cond -> IF OPAREN expresion cn1 CPAREN block SCOLON . cn2
    (58) cn2 -> . empty
    (117) empty -> .

    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    PLOT            reduce using rule 117 (empty -> .)
    COUNT           reduce using rule 117 (empty -> .)
    COUNTIF         reduce using rule 117 (empty -> .)
    MEAN            reduce using rule 117 (empty -> .)
    MEDIAN          reduce using rule 117 (empty -> .)
    MODE            reduce using rule 117 (empty -> .)
    STDV            reduce using rule 117 (empty -> .)
    KMEANS          reduce using rule 117 (empty -> .)
    DERL            reduce using rule 117 (empty -> .)
    DBERN           reduce using rule 117 (empty -> .)
    DPOI            reduce using rule 117 (empty -> .)
    TRANSPOSE       reduce using rule 117 (empty -> .)
    INVERSE         reduce using rule 117 (empty -> .)
    ROTATE          reduce using rule 117 (empty -> .)
    REF             reduce using rule 117 (empty -> .)
    RREF            reduce using rule 117 (empty -> .)
    MONT            reduce using rule 117 (empty -> .)
    DO              reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

    cn2                            shift and go to state 296
    empty                          shift and go to state 297

state 279

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE . cn3 cn3 cn3 block SCOLON cn2
    (59) cn3 -> . empty
    (117) empty -> .

    OBRACKET        reduce using rule 117 (empty -> .)

    cn3                            shift and go to state 298
    empty                          shift and go to state 299

state 280

    (54) escrt3 -> STRING escrt2 escrt2 .

    CPAREN          reduce using rule 54 (escrt3 -> STRING escrt2 escrt2 .)
    COMMA           reduce using rule 54 (escrt3 -> STRING escrt2 escrt2 .)


state 281

    (67) xyfunc -> FX EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 67 (xyfunc -> FX EQUALS exp SCOLON xyfunc .)


state 282

    (69) xyfunc -> empty .

    CPAREN          reduce using rule 69 (xyfunc -> empty .)


state 283

    (68) xyfunc -> FY EQUALS exp SCOLON xyfunc .

    CPAREN          reduce using rule 68 (xyfunc -> FY EQUALS exp SCOLON xyfunc .)


state 284

    (64) plot2 -> LCOR varcte COMMA varcte RCOR .
    (65) plot2 -> LCOR varcte COMMA varcte RCOR . COMMA plot2

    CPAREN          reduce using rule 64 (plot2 -> LCOR varcte COMMA varcte RCOR .)
    COMMA           shift and go to state 300


state 285

    (60) count -> COUNT OPAREN ID COMMA varcte COMMA varcte . CPAREN SCOLON

    CPAREN          shift and go to state 301


state 286

    (61) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte . COMMA cond CPAREN SCOLON

    COMMA           shift and go to state 302


state 287

    (112) mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .

    CPAREN          reduce using rule 112 (mmmfunc -> OBRACKET mmmarray CBRACKET COMMA mmmfunc .)


state 288

    (96) metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .

    ID              reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    IF              reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PRINT           reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    PLOT            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNT           reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    COUNTIF         reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEAN            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MEDIAN          reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MODE            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    STDV            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    KMEANS          reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DERL            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DBERN           reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DPOI            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    INVERSE         reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    ROTATE          reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    REF             reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    RREF            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    MONT            reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    DO              reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)
    CBRACKET        reduce using rule 96 (metodos -> KMEANS OPAREN varcte COMMA mmmfunc CPAREN SCOLON .)


state 289

    (106) expfunc -> ID COMMA ID COMMA ID .

    CPAREN          reduce using rule 106 (expfunc -> ID COMMA ID COMMA ID .)


state 290

    (107) expfunc -> varcte COMMA varcte COMMA varcte .

    CPAREN          reduce using rule 107 (expfunc -> varcte COMMA varcte COMMA varcte .)


state 291

    (84) dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN . wn2 SCOLON
    (86) wn2 -> . empty
    (117) empty -> .

    SCOLON          reduce using rule 117 (empty -> .)

    wn2                            shift and go to state 303
    empty                          shift and go to state 304

state 292

    (88) dwhileconds -> expresion dwhileconds .

    CPAREN          reduce using rule 88 (dwhileconds -> expresion dwhileconds .)


state 293

    (89) dwhileconds -> expresion AND . dwhileconds
    (88) dwhileconds -> . expresion dwhileconds
    (89) dwhileconds -> . expresion AND dwhileconds
    (90) dwhileconds -> . expresion OR dwhileconds
    (91) dwhileconds -> . empty
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (117) empty -> .
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    CPAREN          reduce using rule 117 (empty -> .)
    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 275
    dwhileconds                    shift and go to state 305
    empty                          shift and go to state 276
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 294

    (90) dwhileconds -> expresion OR . dwhileconds
    (88) dwhileconds -> . expresion dwhileconds
    (89) dwhileconds -> . expresion AND dwhileconds
    (90) dwhileconds -> . expresion OR dwhileconds
    (91) dwhileconds -> . empty
    (70) expresion -> . exp
    (71) expresion -> . expresion RELOP exp
    (117) empty -> .
    (72) exp -> . termino
    (73) exp -> . termino PLUS exp
    (74) exp -> . termino MINUS exp
    (75) termino -> . factor
    (76) termino -> . factor MULT termino
    (77) termino -> . factor DIV termino
    (78) factor -> . OPAREN expresion CPAREN
    (79) factor -> . varcte
    (80) varcte -> . ID
    (81) varcte -> . ID asign2
    (82) varcte -> . NUMERIC
    (83) varcte -> . NUMBER

    CPAREN          reduce using rule 117 (empty -> .)
    OPAREN          shift and go to state 75
    ID              shift and go to state 70
    NUMERIC         shift and go to state 71
    NUMBER          shift and go to state 72

    expresion                      shift and go to state 275
    dwhileconds                    shift and go to state 306
    empty                          shift and go to state 276
    exp                            shift and go to state 69
    termino                        shift and go to state 73
    factor                         shift and go to state 74
    varcte                         shift and go to state 114

state 295

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 . block
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 307

state 296

    (55) cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .

    ID              reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    IF              reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    PRINT           reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    PLOT            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    COUNT           reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    COUNTIF         reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    MEAN            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    MEDIAN          reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    MODE            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    STDV            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    KMEANS          reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    DERL            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    DBERN           reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    DPOI            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    TRANSPOSE       reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    INVERSE         reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    ROTATE          reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    REF             reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    RREF            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    MONT            reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    DO              reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    CBRACKET        reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)
    CPAREN          reduce using rule 55 (cond -> IF OPAREN expresion cn1 CPAREN block SCOLON cn2 .)


state 297

    (58) cn2 -> empty .

    ID              reduce using rule 58 (cn2 -> empty .)
    IF              reduce using rule 58 (cn2 -> empty .)
    PRINT           reduce using rule 58 (cn2 -> empty .)
    PLOT            reduce using rule 58 (cn2 -> empty .)
    COUNT           reduce using rule 58 (cn2 -> empty .)
    COUNTIF         reduce using rule 58 (cn2 -> empty .)
    MEAN            reduce using rule 58 (cn2 -> empty .)
    MEDIAN          reduce using rule 58 (cn2 -> empty .)
    MODE            reduce using rule 58 (cn2 -> empty .)
    STDV            reduce using rule 58 (cn2 -> empty .)
    KMEANS          reduce using rule 58 (cn2 -> empty .)
    DERL            reduce using rule 58 (cn2 -> empty .)
    DBERN           reduce using rule 58 (cn2 -> empty .)
    DPOI            reduce using rule 58 (cn2 -> empty .)
    TRANSPOSE       reduce using rule 58 (cn2 -> empty .)
    INVERSE         reduce using rule 58 (cn2 -> empty .)
    ROTATE          reduce using rule 58 (cn2 -> empty .)
    REF             reduce using rule 58 (cn2 -> empty .)
    RREF            reduce using rule 58 (cn2 -> empty .)
    MONT            reduce using rule 58 (cn2 -> empty .)
    DO              reduce using rule 58 (cn2 -> empty .)
    CBRACKET        reduce using rule 58 (cn2 -> empty .)
    CPAREN          reduce using rule 58 (cn2 -> empty .)


state 298

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 . cn3 cn3 block SCOLON cn2
    (59) cn3 -> . empty
    (117) empty -> .

    OBRACKET        reduce using rule 117 (empty -> .)

    cn3                            shift and go to state 308
    empty                          shift and go to state 299

state 299

    (59) cn3 -> empty .

    OBRACKET        reduce using rule 59 (cn3 -> empty .)


state 300

    (65) plot2 -> LCOR varcte COMMA varcte RCOR COMMA . plot2
    (64) plot2 -> . LCOR varcte COMMA varcte RCOR
    (65) plot2 -> . LCOR varcte COMMA varcte RCOR COMMA plot2
    (66) plot2 -> . empty
    (117) empty -> .

    LCOR            shift and go to state 128
    CPAREN          reduce using rule 117 (empty -> .)

    plot2                          shift and go to state 309
    empty                          shift and go to state 310

state 301

    (60) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN . SCOLON

    SCOLON          shift and go to state 311


state 302

    (61) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA . cond CPAREN SCOLON
    (55) cond -> . IF OPAREN expresion cn1 CPAREN block SCOLON cn2
    (56) cond -> . IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2

    IF              shift and go to state 37

    cond                           shift and go to state 312

state 303

    (84) dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 . SCOLON

    SCOLON          shift and go to state 313


state 304

    (86) wn2 -> empty .

    SCOLON          reduce using rule 86 (wn2 -> empty .)


state 305

    (89) dwhileconds -> expresion AND dwhileconds .

    CPAREN          reduce using rule 89 (dwhileconds -> expresion AND dwhileconds .)


state 306

    (90) dwhileconds -> expresion OR dwhileconds .

    CPAREN          reduce using rule 90 (dwhileconds -> expresion OR dwhileconds .)


state 307

    (14) modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .

    FUNC            reduce using rule 14 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)
    OBRACKET        reduce using rule 14 (modules -> FUNC ID COLON tipo addfunction OPAREN modules2 CPAREN modules2 block .)


state 308

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 . cn3 block SCOLON cn2
    (59) cn3 -> . empty
    (117) empty -> .

    OBRACKET        reduce using rule 117 (empty -> .)

    cn3                            shift and go to state 314
    empty                          shift and go to state 299

state 309

    (65) plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .

    CPAREN          reduce using rule 65 (plot2 -> LCOR varcte COMMA varcte RCOR COMMA plot2 .)


state 310

    (66) plot2 -> empty .

    CPAREN          reduce using rule 66 (plot2 -> empty .)


state 311

    (60) count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .

    ID              reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    IF              reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PRINT           reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    PLOT            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNT           reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    COUNTIF         reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEAN            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MEDIAN          reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MODE            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    STDV            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    KMEANS          reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DERL            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DBERN           reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DPOI            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    INVERSE         reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    ROTATE          reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    REF             reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    RREF            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    MONT            reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    DO              reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)
    CBRACKET        reduce using rule 60 (count -> COUNT OPAREN ID COMMA varcte COMMA varcte CPAREN SCOLON .)


state 312

    (61) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond . CPAREN SCOLON

    CPAREN          shift and go to state 315


state 313

    (84) dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .

    ID              reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    IF              reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    PRINT           reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    PLOT            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    COUNT           reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    COUNTIF         reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    MEAN            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    MEDIAN          reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    MODE            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    STDV            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    KMEANS          reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    DERL            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    DBERN           reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    DPOI            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    TRANSPOSE       reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    INVERSE         reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    ROTATE          reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    REF             reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    RREF            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    MONT            reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    DO              reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)
    CBRACKET        reduce using rule 84 (dwhile -> DO wn1 wblock WHILE OPAREN dwhileconds CPAREN wn2 SCOLON .)


state 314

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 . block SCOLON cn2
    (18) block -> . OBRACKET block2 CBRACKET

    OBRACKET        shift and go to state 18

    block                          shift and go to state 316

state 315

    (61) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN . SCOLON

    SCOLON          shift and go to state 317


state 316

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block . SCOLON cn2

    SCOLON          shift and go to state 318


state 317

    (61) countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .

    ID              reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    IF              reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PRINT           reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    PLOT            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNT           reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    COUNTIF         reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEAN            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MEDIAN          reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MODE            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    STDV            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    KMEANS          reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DERL            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DBERN           reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DPOI            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    TRANSPOSE       reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    INVERSE         reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    ROTATE          reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    REF             reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    RREF            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    MONT            reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    DO              reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)
    CBRACKET        reduce using rule 61 (countif -> COUNTIF OPAREN ID COMMA varcte COMMA varcte COMMA cond CPAREN SCOLON .)


state 318

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON . cn2
    (58) cn2 -> . empty
    (117) empty -> .

    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    PLOT            reduce using rule 117 (empty -> .)
    COUNT           reduce using rule 117 (empty -> .)
    COUNTIF         reduce using rule 117 (empty -> .)
    MEAN            reduce using rule 117 (empty -> .)
    MEDIAN          reduce using rule 117 (empty -> .)
    MODE            reduce using rule 117 (empty -> .)
    STDV            reduce using rule 117 (empty -> .)
    KMEANS          reduce using rule 117 (empty -> .)
    DERL            reduce using rule 117 (empty -> .)
    DBERN           reduce using rule 117 (empty -> .)
    DPOI            reduce using rule 117 (empty -> .)
    TRANSPOSE       reduce using rule 117 (empty -> .)
    INVERSE         reduce using rule 117 (empty -> .)
    ROTATE          reduce using rule 117 (empty -> .)
    REF             reduce using rule 117 (empty -> .)
    RREF            reduce using rule 117 (empty -> .)
    MONT            reduce using rule 117 (empty -> .)
    DO              reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

    cn2                            shift and go to state 319
    empty                          shift and go to state 297

state 319

    (56) cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .

    ID              reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    IF              reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    PRINT           reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    PLOT            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    COUNT           reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    COUNTIF         reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    MEAN            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    MEDIAN          reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    MODE            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    STDV            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    KMEANS          reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    DERL            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    DBERN           reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    DPOI            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    TRANSPOSE       reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    INVERSE         reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    ROTATE          reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    REF             reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    RREF            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    MONT            reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    DO              reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    CBRACKET        reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)
    CPAREN          reduce using rule 56 (cond -> IF OPAREN expresion cn1 CPAREN block ELSE cn3 cn3 cn3 block SCOLON cn2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOR in state 68 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 115 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 140 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 144 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 169 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 171 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 213 resolved as shift
WARNING: shift/reduce conflict for SCOLON in state 215 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 222 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 222 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 223 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 263 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (lugstat3 -> modules)
WARNING: rejected rule (empty -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 26 resolved using rule (block2 -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 121 resolved using rule (varcte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 121
WARNING: reduce/reduce conflict in state 127 resolved using rule (plot2 -> empty)
WARNING: rejected rule (xyfunc -> empty) in state 127
WARNING: reduce/reduce conflict in state 222 resolved using rule (escrt3 -> ID)
WARNING: rejected rule (empty -> <empty>) in state 222
